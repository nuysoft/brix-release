{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///components/dropdown.js","webpack:///webpack/bootstrap 931bcc27e1a1cb312122","webpack:///./src/dropdown/index.js","webpack:///./src/dropdown/dropdown.js","webpack:///external \"jquery\"","webpack:///external \"underscore\"","webpack:///external \"brix/loader\"","webpack:///external \"components/base\"","webpack:///external \"brix/event\"","webpack:///./src/dropdown/dropdown.tpl.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_4__","__WEBPACK_EXTERNAL_MODULE_5__","__WEBPACK_EXTERNAL_MODULE_6__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","$","_","Loader","Brix","EventManager","template","Dropdown","options","element","nodeName","toLowerCase","CustomDropdown","NAMESPACE","compiledTemplate","extend","prototype","name","undefined","label","value","data","disabled","width","className","justify","searchbox","placeholder","_searchboxEvent","popover","_popoverWidth","excluded","init","$element","hide","$manager","length","_fixFlattenData","_fillSelect","_parseDataFromSelect","multiple","prop","isArray","val","$selectedOptions","find","map","item","trim","text","join","attr","class","render","$relatedElement","isActive","cur","contains","insertBefore","parseInt","css","min-width","addClass","renderExcludedData","delegate","boot","_autoHide","excludedData","each","push","toggle","toggleClass","show","removeClass","__triggerChangeEventBySetValue","that","oldValue","$target","$item","itemValue","children","childItem","selected","sort","$menu","not","__value","event","Event","extra","trigger","isDefaultPrevented","triggerHandler","$newMenu","replaceWith","select","currentTarget","$li","closest","hasClass","search","type","key","keyCode","seed","target","filter","all","$lis","has","submit","$select","_parseOptions","option","_parseOption","$option","child","test","$child","index","context","isObject","_genOption","empty","$optgroup","appendTo","_responsive","$window","window","on","offset","top","scrollTop","button","height","outerHeight","placement","clientId","document","body","off","destroy","undelegate","remove","targetValue","targetText","end","apply"],"mappings":"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","file":"components/dropdown.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jquery\"), require(\"underscore\"), require(\"brix/loader\"), require(\"components/base\"), require(\"brix/event\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jquery\", \"underscore\", \"brix/loader\", \"components/base\", \"brix/event\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"components/dropdown\"] = factory(require(\"jquery\"), require(\"underscore\"), require(\"brix/loader\"), require(\"components/base\"), require(\"brix/event\"));\n\telse\n\t\troot[\"components/dropdown\"] = factory(root[\"jquery\"], root[\"underscore\"], root[\"brix/loader\"], root[\"components/base\"], root[\"brix/event\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jquery\"), require(\"underscore\"), require(\"brix/loader\"), require(\"components/base\"), require(\"brix/event\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jquery\", \"underscore\", \"brix/loader\", \"components/base\", \"brix/event\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"components/dropdown\"] = factory(require(\"jquery\"), require(\"underscore\"), require(\"brix/loader\"), require(\"components/base\"), require(\"brix/event\"));\n\telse\n\t\troot[\"components/dropdown\"] = factory(root[\"jquery\"], root[\"underscore\"], root[\"brix/loader\"], root[\"components/base\"], root[\"brix/event\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1)\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define, window, document */\n\t/*\n\t    http://thx.github.io/brix-site/readme.html?name=Dropdonw\n\t        Deprecated\n\t    https://nuysoft.gitbooks.io/brix-book/content/brix-components/dropdown/\n\t        Temporary\n\t\n\t    # Dropdown\n\t\n\t    下拉框组件。\n\t\n\t    ```html\n\t    <select bx-name=\"components/dropdown\">\n\t        <option value=\"1\">Action</option>\n\t        <option value=\"2\">Another action</option>\n\t        <option value=\"3\">Something else here</option>\n\t    </select>\n\t    ```\n\t\n\t    ## 配置\n\t    \n\t    配置项    | 类型              | 默认值  | 说明\n\t    :-------- | :---------------- | :------ | :----------\n\t    data      | array             | -       | 可选。下拉框中的数据。默认从子节点 `<optgroup>` 和 `<option>` 读取。\n\t    value     | string            | -       | 可选。下拉框的值。\n\t    searchbox | boolean           | `false` | 可选。是否开启下拉框中的输入框。可选值有 `false`、`true`、`'enter'`。\n\t    popover   | boolean or number | `false` | 可选。是否为下拉框的条目配置 `bx-name=\"components/popover\"`。可选值有 `false`、`true`、`width`。\n\t\n\t    ## 方法\n\t\n\t    * .val( [ value ] )\n\t        设置或读取下拉框的值。\n\t    * .data( [ data ] )\n\t        设置或读取下拉框中的数据。\n\t\n\t    ## 事件\n\t\n\t    事件类型        | 说明\n\t    :-------------- | :----------\n\t    change.dropdown | 当值发生变化时被触发。\n\t    search.dropdown | 见配置项 `searchbox`。\n\t    \n\t    ## 参考\n\t    * http://getbootstrap.com/components/#dropdowns\n\t    * http://silviomoreto.github.io/bootstrap-select/\n\t */\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t        __webpack_require__(2), __webpack_require__(3),\n\t        __webpack_require__(4), __webpack_require__(5), __webpack_require__(6),\n\t        __webpack_require__(7)\n\t    ], __WEBPACK_AMD_DEFINE_RESULT__ = function(\n\t        $, _,\n\t        Loader, Brix, EventManager,\n\t        template\n\t    ) {\n\t        var NAMESPACE = '.dropdown'\n\t        var compiledTemplate = _.template(template)\n\t\n\t        function Dropdown(options) {\n\t            if (options && options.element) {\n\t                if ('select' !== options.element.nodeName.toLowerCase()) {\n\t                    return new CustomDropdown(options)\n\t                }\n\t            }\n\t        }\n\t\n\t        _.extend(Dropdown.prototype, Brix.prototype, {\n\t            options: {\n\t                name: undefined,\n\t                label: undefined,\n\t                value: undefined,\n\t                data: [],\n\t                disabled: undefined,\n\t\n\t                width: undefined, // data-width=\"100\" data-width=\"100px\" data-width=\"100%\"\n\t                className: undefined, // { data-class | data-className | className: ''}\n\t                justify: false, // 两端对齐 data-justify=\"true|false\"\n\t\n\t                searchbox: false, // false | true | keyup | enter\n\t                placeholder: '搜索关键词',\n\t                _searchboxEvent: 'keyup', // keyup | enter\n\t\n\t                popover: false, // true | width\n\t                _popoverWidth: '',\n\t\n\t                excluded: []\n\t            },\n\t            init: function() {\n\t                this.$element = $(this.element).hide()\n\t                this.$manager = new EventManager('bx-')\n\t\n\t                var options = this.options\n\t\n\t                // 如果没有提供选项 data，则从节点 select 的 option 收集数据\n\t                if (!options.data.length) {\n\t                    options.data = this._parseDataFromSelect(this.$element)\n\t                } else {\n\t                    // 如果提供了选项 data，则逆向填充节点 select 的 option\n\t                    this._fixFlattenData(this.options.data)\n\t                    this._fillSelect()\n\t                }\n\t\n\t                // 是否允许多选\n\t                options.multiple = this.$element.prop('multiple')\n\t\n\t                // 节点是否被禁用\n\t                options.disabled = this.$element.prop('disabled')\n\t\n\t                // value => [value] \n\t                if (options.value === undefined) options.value = []\n\t                if (!_.isArray(options.value)) options.value = [options.value]\n\t\n\t                // 初始化节点 select 的选中状态（值）\n\t                if (options.value.length) this.$element.val(options.value)\n\t\n\t                // 初始化选项 label、value\n\t                var $selectedOptions = this.$element.find('option:selected')\n\t                options.label = _.map($selectedOptions, function(item) {\n\t                    return $.trim($(item).text())\n\t                }).join(', ')\n\t                options.value = _.map($selectedOptions, function(item) {\n\t                    return $(item).attr('value')\n\t                })\n\t\n\t                // 初始化选项 name\n\t                options.name = this.$element.attr('name')\n\t\n\t                // 解析选项 searchbox\n\t                if (options.searchbox) {\n\t                    if (options.searchbox === true) {\n\t                        options._searchboxEvent = 'keyup'\n\t                    } else {\n\t                        options._searchboxEvent = options.searchbox\n\t                        options.searchbox = true\n\t                    }\n\t                }\n\t\n\t                // 解析选项 popover\n\t                if (options.popover) {\n\t                    if (options.popover !== true) {\n\t                        options._popoverWidth = options.popover\n\t                        options.popover = true\n\t                    }\n\t                }\n\t\n\t                // data-class => data-className\n\t                if (this.options.class) this.options.className = this.options.class\n\t            },\n\t            render: function() {\n\t                this.$relatedElement = $(\n\t                    compiledTemplate(\n\t                        _.extend({}, this.options, {\n\t                            isActive: function(value, cur) {\n\t                                return _.contains(value, cur) || _.contains(value, cur + '')\n\t                            }\n\t                        })\n\t                    )\n\t                ).insertBefore(this.$element)\n\t\n\t                var width = this.options.width\n\t                if (width) {\n\t                    if (parseInt(width) == width) width += 'px'\n\t                    this.$relatedElement.css({\n\t                        width: width,\n\t                        'min-width': width\n\t                    })\n\t                }\n\t\n\t                // 类样式 data-className\n\t                if (this.options.className) {\n\t                    this.$relatedElement.addClass(this.options.className)\n\t                }\n\t\n\t                var value = this.val()\n\t                if (this.options.multiple && !value.length && this.options.excluded.length) {\n\t                    this.renderExcludedData()\n\t                }\n\t\n\t                this.$manager.delegate(this.$element, this)\n\t                this.$manager.delegate(this.$relatedElement, this)\n\t\n\t                if (this.options.popover) Loader.boot(this.$relatedElement)\n\t\n\t                // this._responsive()\n\t                this._autoHide()\n\t            },\n\t            renderExcludedData: function () {\n\t                var options = this.options\n\t                var excludedData = []\n\t                _.each(options.data, function(item /*, index*/ ) {\n\t                    if (_.contains(options.excluded, item.value) || _.contains(options.excluded, item.value + '')) excludedData.push(item)\n\t                })\n\t                this.$relatedElement.find('button.dropdown-toggle > span.dropdown-toggle-label').text(\n\t                    _.map(excludedData, function(item) {\n\t                        return item.label\n\t                    }).join(', ')\n\t                )\n\t            },\n\t            toggle: function( /*event*/ ) {\n\t                this.$relatedElement.toggleClass('open')\n\t                return this\n\t            },\n\t            show: function() {\n\t                this.$relatedElement.addClass('open')\n\t                return this\n\t            },\n\t            hide: function() {\n\t                this.$relatedElement.removeClass('open')\n\t                return this\n\t            },\n\t            /*\n\t                .val( value )\n\t                .val()\n\t            */\n\t            val: function(value, __triggerChangeEventBySetValue) {\n\t                // this.$element.val()\n\t                var that = this\n\t                var options = this.options\n\t\n\t                var oldValue = options.multiple ? this.options.value :\n\t                    function() {\n\t                        var $target = that.$relatedElement.find('ul.dropdown-menu > li.active > a')\n\t                        return _.map($target, function(item) {\n\t                            var $item = $(item)\n\t                            var itemValue = $item.attr('value')\n\t                            return itemValue !== undefined ? itemValue : $.trim($item.text())\n\t                        })\n\t                    }()\n\t\n\t                // .val()\n\t                if (value === undefined) return options.multiple ? oldValue : oldValue[0]\n\t\n\t                // .val( value )\n\t                if (!_.isArray(value)) value = [value]\n\t                value = _.map(value, function(item) {\n\t                    return item + ''\n\t                })\n\t\n\t                var data = [] /* [{ label: '', value: '', selected: true|false }] */\n\t                _.each(this.options.data, function(item /*, index*/ ) {\n\t                    if (item.children) {\n\t                        _.each(item.children, function(childItem /*, index*/ ) {\n\t                            childItem.selected = _.contains(value, childItem.value) || _.contains(value, childItem.value + '')\n\t                            if (childItem.selected) data.push(childItem)\n\t                        })\n\t                    } else {\n\t                        item.selected = _.contains(value, item.value) || _.contains(value, item.value + '')\n\t                        if (item.selected) data.push(item)\n\t                    }\n\t                })\n\t\n\t                // 未知值\n\t                // if (!data.length) return\n\t\n\t                // 如果值没有发生变化，则直接返回\n\t                if (\n\t                    oldValue.length === data.length &&\n\t                    oldValue.sort().join('') ===\n\t                    _.map(data, function(item) {\n\t                        return item.value\n\t                    }).sort().join('')\n\t                ) return this\n\t\n\t                // 多选状态下，如果没有选中任何选项，则显示标记为 excluded 的选项\n\t                if (!data.length && options.multiple && options.excluded.length) {\n\t                    // 直接设置为 options.excluded 对开发者不友好\n\t                    // return this.val(options.excluded, __triggerChangeEventBySetValue)\n\t                    // 更新模拟下拉框的内容\n\t                    this.renderExcludedData()\n\t                } else {\n\t                    // 更新模拟下拉框的内容\n\t                    this.$relatedElement.find('button.dropdown-toggle > span.dropdown-toggle-label').text(\n\t                        _.map(data, function(item) {\n\t                            return item.label\n\t                        }).join(', ')\n\t                    )\n\t                }\n\t\n\t                // 更新原生下拉框的值\n\t                this.$element.val(\n\t                    _.map(data, function(item) {\n\t                        return item.value\n\t                    })\n\t                )\n\t\n\t                // 更新模拟下拉框的选中状态\n\t                var $menu = this.$relatedElement.find('ul.dropdown-menu')\n\t                _.each(oldValue, function(item) {\n\t                    $menu.find('li:has([value=\"' + item + '\"])')\n\t                        .removeClass('active')\n\t                        .find('input:checkbox')\n\t                        .prop('checked', false)\n\t                })\n\t                _.each(data, function(item) {\n\t                    $menu.find('li:has([value=\"' + item.value + '\"])')\n\t                        .not('[data-excluded]')\n\t                        .addClass('active')\n\t                        .find('input:checkbox')\n\t                        .prop('checked', true)\n\t                })\n\t\n\t                // 更新  this.options.value\n\t                this.options.__value = this.options.value\n\t                this.options.value = _.map(data, function(item) {\n\t                    return item.value\n\t                })\n\t\n\t                // 修改值，但是不触发 change 事件。避免与其他双向绑定库（例如 Vue ）整合时重复触发 change 事件。\n\t                if (__triggerChangeEventBySetValue === false) return this\n\t\n\t                // #19 支持 event.preventDefault()\n\t                // 应该先触发 change.dropdown 事件，然后检测事件的默认行为是否被阻止，然后才是改变样式！\n\t                var event = $.Event('change' + NAMESPACE)\n\t                var extra = _.map(data, function(item) {\n\t                    return {\n\t                        name: options.name,\n\t                        label: item.label,\n\t                        value: item.value\n\t                    }\n\t                })\n\t                this.trigger(event, [options.multiple ? extra : extra[0]])\n\t                if (event.isDefaultPrevented()) {\n\t                    // TODO 恢复\n\t                    return this\n\t                }\n\t\n\t                this.$element\n\t                    .triggerHandler('change')\n\t\n\t                return this\n\t            },\n\t            data: function(data) {\n\t                // .data()\n\t                if (data === undefined) return this.options.data\n\t\n\t                // .data(data)\n\t                this.options.data = this._fixFlattenData(data)\n\t                this._fillSelect()\n\t\n\t                var $menu = this.$relatedElement.find('ul.dropdown-menu')\n\t                var $newMenu = $(\n\t                    compiledTemplate(\n\t                        _.extend({}, this.options, {\n\t                            isActive: function(value, cur) {\n\t                                return _.contains(value, cur) || _.contains(value, cur + '')\n\t                            }\n\t                        })\n\t                    )\n\t                ).find('ul.dropdown-menu')\n\t\n\t                $menu.replaceWith($newMenu)\n\t\n\t                this.$manager.delegate(this.$relatedElement, this)\n\t\n\t                if (this.options.popover) Loader.boot(this.$relatedElement)\n\t\n\t                return this\n\t            },\n\t            select: function(event /*, trigger*/ ) {\n\t                var $target = $(event.currentTarget)\n\t                var value = $target.attr('value')\n\t                var label = $.trim($target.text())\n\t\n\t                switch (!!this.options.multiple) {\n\t                    case true:\n\t                        var $li = $target.closest('li')\n\t                        if (!$li.attr('data-excluded')) {\n\t                            $li.toggleClass('active')\n\t                            $target.find('input:checkbox').prop('checked', $li.hasClass('active'))\n\t                        }\n\t                        break\n\t                    case false:\n\t                        this.val(value !== undefined ? value : label)\n\t                        this.toggle()\n\t                        break\n\t                }\n\t\n\t                // #8 如果在 change.dropdown 中再次改变值，则会和下面的代码冲突\n\t                // $target.closest('li').addClass('active')\n\t                //     .siblings().removeClass('active')\n\t            },\n\t            search: function(event) {\n\t                if (event.type === 'keyup') {\n\t                    var key = event.keyCode\n\t\n\t                    // 忽略不产生输入的辅助按键\n\t                    //    command            modifiers                   arrows\n\t                    if (key === 91 || (15 < key && key < 19) || (37 <= key && key <= 40)) return\n\t\n\t                    // 如果选项 searchbox 为 `'enter'`，则只响应 enter 键\n\t                    if (this.options._searchboxEvent === 'enter' && key !== 13) return\n\t                }\n\t\n\t                var seed = $(event.target).val()\n\t                this.trigger('search' + NAMESPACE, seed)\n\t            },\n\t            filter: function(seed, all) {\n\t                // ( event, seed )\n\t                if (seed.type) {\n\t                    seed = all\n\t                    all = false\n\t                }\n\t\n\t                // var $lis = this.$relatedElement.find('ul.dropdown-menu li').hide()\n\t                // $lis.has('> a:contains(\"' + seed + '\")').show() // 显示匹配 text 的选项\n\t\n\t                // 性能优化 #10 https://jsfiddle.net/3z7qyzvv/3/\n\t                // 1. display > .hide/show()\n\t                // 2. .filter() > .has()\n\t                var $lis = this.$relatedElement.find('ul.dropdown-menu li')\n\t                if (!seed) {\n\t                    $lis.css('display', 'list-item')\n\t                } else {\n\t                    $lis.css('display', 'none')\n\t                    $lis.filter(':contains(\"' + seed + '\")').show()\n\t                        .css('display', 'list-item')\n\t                }\n\t\n\t                if (all) $lis.has('> a[value*=\"' + seed + '\"]').show() // 显示匹配 value 的选项\n\t            },\n\t            disabled: function(disabled) {\n\t                // .disabled()\n\t                if (disabled === undefined) return this.options.disabled\n\t\n\t                // .disabled( true | false )\n\t                this.options.disabled = disabled\n\t                this.$element.prop('disabled', disabled)\n\t                this.$relatedElement[disabled ? 'addClass' : 'removeClass']('disabled')\n\t                return this\n\t            },\n\t            submit: function() {\n\t                var $target = this.$relatedElement.find('ul.dropdown-menu > li.active > a')\n\t                var value = _.map($target, function(item) {\n\t                    var $item = $(item)\n\t                    return $item.attr('value') !== undefined ? $item.attr('value') : $.trim($item.text())\n\t                })\n\t                this.val(value)\n\t                this.toggle()\n\t            },\n\t            _parseDataFromSelect: function($select) {\n\t                var that = this\n\t                var children = _.filter($select.children(), function(child /*, index*/ ) {\n\t                    // <optgroup> <option>\n\t                    return /optgroup|option/i.test(child.nodeName)\n\t                })\n\t                return _.map(children, function(child /*, index*/ ) {\n\t                    var $child = $(child)\n\t                    return /optgroup/i.test(child.nodeName) ? {\n\t                        label: $child.attr('label'),\n\t                        children: _parseOptions($child.children())\n\t                    } : _parseOption(child)\n\t                })\n\t\n\t                function _parseOptions(options) {\n\t                    return _.map(options, function(option /*, index*/ ) {\n\t                        return _parseOption(option)\n\t                    })\n\t                }\n\t\n\t                function _parseOption(option) {\n\t                    var $option = $(option)\n\t                    var value = $option.attr('value')\n\t                    return $option.hasClass('divider') ? 'divider' : {\n\t                        label: $.trim($option.text()),\n\t                        value: value,\n\t                        selected: $option.prop('selected'),\n\t                        excluded: _.contains(that.options.excluded, value) || _.contains(that.options.excluded, +value) || false\n\t                    }\n\t                }\n\t            },\n\t            _fixFlattenData: function(data) {\n\t                return _.map(data, function(item, index, context) {\n\t                    return (context[index] = _.isObject(item) ? item : {\n\t                        label: item,\n\t                        value: item\n\t                    })\n\t                })\n\t            },\n\t            _fillSelect: function() {\n\t                var $select = this.$element.empty()\n\t                _.each(this.options.data, function(item) {\n\t                    if (item.children && item.children.length) {\n\t                        var $optgroup = $('<optgroup>').attr('label', item.label)\n\t                        _.each(item.children, function(item /*, index*/ ) {\n\t                            _genOption(item).appendTo($optgroup)\n\t                        })\n\t                        $optgroup.appendTo($select)\n\t\n\t                    } else {\n\t                        _genOption(item).appendTo($select)\n\t                    }\n\t                })\n\t\n\t                function _genOption(item) {\n\t                    // item { label: '', value: '', selected: true|false }\n\t                    return $('<option>')\n\t                        .attr('value', item.value)\n\t                        .prop('selected', item.selected)\n\t                        .text(item.label)\n\t                }\n\t            },\n\t            _responsive: function() {\n\t                var $window = $(window)\n\t                var $relatedElement = this.$relatedElement\n\t                var $menu = $relatedElement.find('ul.dropdown-menu')\n\t                $(window).on('scroll', function() {\n\t                    var offset = $relatedElement.offset()\n\t                    var top = offset.top - $window.scrollTop()\n\t                    var button = $window.scrollTop() + $window.height() - offset.top - $relatedElement.outerHeight()\n\t                    var placement = button >= top ? 'button' : 'top'\n\t                    switch (placement) {\n\t                        case 'button':\n\t                            $menu.css('max-height', top - 10)\n\t                            break\n\t                        case 'top':\n\t                            $menu.css('max-height', button - 10)\n\t                            break\n\t                    }\n\t                })\n\t            },\n\t            _autoHide: function() {\n\t                var that = this\n\t                var type = 'click.dropdown_autohide_' + this.clientId\n\t                $(document.body).off(type)\n\t                    .on(type, function(event) {\n\t                        if (that.$relatedElement.has(event.target).length) return\n\t                        that.hide()\n\t                    })\n\t            },\n\t            destroy: function() {\n\t                this.$manager.undelegate(this.$element)\n\t                this.$manager.undelegate(this.$relatedElement)\n\t\n\t                this.$relatedElement.remove()\n\t\n\t                var type = 'click.dropdown_autohide_' + this.clientId\n\t                $(document.body).off(type)\n\t            }\n\t        })\n\t\n\t        /*\n\t            非 Select Dropdown\n\t        */\n\t\n\t        function CustomDropdown() {}\n\t\n\t        _.extend(CustomDropdown.prototype, Dropdown.prototype, {\n\t            init: function() {\n\t                this.$element = $(this.element)\n\t                this.$relatedElement = this.$element\n\t                this.$manager = new EventManager('bx-')\n\t\n\t                this._fixFlattenData(this.options.data)\n\t\n\t                // 初始化选项 name\n\t                this.options.name = this.$element.attr('name')\n\t            },\n\t            render: function() {\n\t                if (this.options.value !== undefined) this.val(this.options.value)\n\t\n\t                this.$manager.delegate(this.$relatedElement, this)\n\t\n\t                // this._responsive()\n\t                this._autoHide()\n\t            },\n\t            val: function(value) {\n\t                var that = this\n\t                var oldValue = function() {\n\t                    var $target = that.$element.find('ul.dropdown-menu > li.active > a')\n\t                    var oldValue = $target.attr('value')\n\t                    if (oldValue === undefined) oldValue = $.trim($target.text())\n\t                    return oldValue\n\t                }()\n\t\n\t                // .val()\n\t                if (value === undefined) return oldValue\n\t\n\t                // .val( value )\n\t                var data /* { label: '', value: '', selected: true|false } */\n\t                if (_.isObject(value)) data = value\n\t                else _.each(that.$element.find('ul.dropdown-menu > li'), function(item /*, index*/ ) {\n\t                    var $item = $(item)\n\t                    var $target = $item.find('> a')\n\t                    var targetValue = $target.attr('value')\n\t                    var targetText = $.trim($target.text())\n\t                    if (\n\t                        (targetValue !== undefined && targetValue == value) ||\n\t                        (targetValue === undefined && targetText == value)\n\t                    ) {\n\t                        data = {\n\t                            name: that.options.name,\n\t                            label: targetText,\n\t                            value: targetValue !== undefined ? targetValue : targetText\n\t                        }\n\t                    }\n\t                })\n\t\n\t                // 未知值\n\t                if (!data) return\n\t\n\t                // 更新模拟下拉框的内容（先更新了再比较值是否有变化，因为此时渲染的内容可能是错误的！）\n\t                this.$relatedElement.find('button.dropdown-toggle > span.dropdown-toggle-label')\n\t                    .text(data.label)\n\t\n\t                // 将 data.value 转换为字符串，是为了避免检测 `1 === '1'` 失败（旧值 oldValue 总是字符串）\n\t                if (('' + data.value) === oldValue) return this\n\t\n\t                // 更新模拟下拉框的选中状态\n\t                this.$relatedElement.find('ul.dropdown-menu')\n\t                    .find('li:has([value=\"' + oldValue + '\"])')\n\t                    .removeClass('active')\n\t                    .end()\n\t                    .find('li:has([value=\"' + data.value + '\"])')\n\t                    .addClass('active')\n\t\n\t                this.trigger('change' + NAMESPACE, data)\n\t\n\t                return this\n\t            },\n\t            data: function(data) {\n\t                // .data()\n\t                if (data === undefined) return this.options.data\n\t\n\t                // .data(data)\n\t                this.options.data = this._fixFlattenData(data)\n\t\n\t                var $menu = this.$relatedElement.find('ul.dropdown-menu')\n\t                var $newMenu = $(\n\t                    compiledTemplate(\n\t                        _.extend({}, this.options, {\n\t                            isActive: function(value, cur) {\n\t                                return _.contains(value, cur) || _.contains(value, cur + '')\n\t                            }\n\t                        })\n\t                    )\n\t                ).find('ul.dropdown-menu')\n\t\n\t                $menu.replaceWith($newMenu)\n\t\n\t                this.$manager.delegate(this.$relatedElement, this)\n\t\n\t                return this\n\t            }\n\t        })\n\t\n\t        return Dropdown\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\t\n\t/*\n\t    responsive http://silviomoreto.github.io/bootstrap-select/\n\t */\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* global define */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t    return \"<div class=\\\"dropdown \\n\" +\n\t        \"    <%= disabled ? 'disabled' : '' %> \\n\" +\n\t        \"    <%= multiple ? 'dropdown-multiple' : '' %> \\n\" +\n\t        \"    <%= searchbox ? 'dropdown-searchbox' : '' %> \\n\" +\n\t        \"    <%= popover ? 'dropdown-popover dropdown-ellipsis' : '' %>\\n\" +\n\t        \"    <%= justify ? 'dropdown-justify' : '' %>\\\">\\n\" +\n\t        \"    <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" value=\\\"<%= value %>\\\" bx-click=\\\"toggle()\\\">\\n\" +\n\t        \"        <span class=\\\"dropdown-toggle-label\\\"><%= label %></span>\\n\" +\n\t        \"        <!-- <span class=\\\"caret\\\"> -->\\n\" +\n\t        \"        <span class=\\\"caret_custom caret_brixfont\\\"><!-- 保留 caret_brixfont 是为了向后兼容，在下个版本中移除  -->\\n\" +\n\t        \"            <span class=\\\"brixfont down\\\">&#xe623;</span><!-- 向下 &#xe623; -->\\n\" +\n\t        \"            <span class=\\\"brixfont up\\\">&#xe62e;</span><!-- 向上 &#xe62e;-->\\n\" +\n\t        \"        </span>\\n\" +\n\t        \"    </button>\\n\" +\n\t        \"    <div class=\\\"dropdown-menu-wrapper\\\">\\n\" +\n\t        \"        <% if (searchbox) { %>\\n\" +\n\t        \"        <div class=\\\"searchbox\\\">\\n\" +\n\t        \"            <label>\\n\" +\n\t        \"                <span class=\\\"brixfont\\\">&#xe61c;</span>\\n\" +\n\t        \"                <input bx-keyup=\\\"search()\\\" type=\\\"text\\\" placeholder=\\\"<%= placeholder %>\\\">\\n\" +\n\t        \"            </label>\\n\" +\n\t        \"        </div>\\n\" +\n\t        \"        <% } %>\\n\" +\n\t        \"        <ul class=\\\"dropdown-menu\\\">\\n\" +\n\t        \"            <% for(var i = 0, item; item = data[i]; i++ ) { %>\\n\" +\n\t        \"                <% if(item.children) { %>\\n\" +\n\t        \"                    <li class=\\\"dropdown-header\\\"><%=item.label%></li>\\n\" +\n\t        \"                    <% for(var ii = 0; ii < item.children.length; ii++ ) { %>\\n\" +\n\t        \"                        <li class=\\\"dropdown-menu-item-child <%= item.children[ii].value == value && !item.children[ii].excluded ? 'active' : ''%>\\\" <%= item.children[ii].excluded ? 'data-excluded=true': '' %>>\\n\" +\n\t        \"                            <% if (popover) { %>\\n\" +\n\t        \"                            <a href=\\\"javascript:;\\\" value=\\\"<%= item.children[ii].value %>\\\" bx-click=\\\"select()\\\"\\n\" +\n\t        \"                                bx-name=\\\"components/popover\\\"\\n\" +\n\t        \"                                data-content=\\\"<%= item.children[ii].label %>\\\" \\n\" +\n\t        \"                                data-width=\\\"<%= _popoverWidth %>\\\">\\n\" +\n\t        \"                                <% if (multiple && !item.children[ii].excluded) { %>\\n\" +\n\t        \"                                <input type=\\\"checkbox\\\" name=\\\"<%= name %>\\\" <%= isActive(value, item.children[ii].value) ? 'checked' : '' %>>\\n\" +\n\t        \"                                <% } %>\\n\" +\n\t        \"                                <span><%= item.children[ii].label %></span>\\n\" +\n\t        \"                            </a>\\n\" +\n\t        \"                            <% } else { %>\\n\" +\n\t        \"                            <a href=\\\"javascript:;\\\" value=\\\"<%= item.children[ii].value %>\\\" bx-click=\\\"select()\\\"\\n\" +\n\t        \"                                title=\\\"<%= item.children[ii].label %>\\\">\\n\" +\n\t        \"                                <% if (multiple && !item.children[ii].excluded) { %>\\n\" +\n\t        \"                                <input type=\\\"checkbox\\\" name=\\\"<%= name %>\\\" <%= isActive(value, item.children[ii].value) ? 'checked' : '' %>>\\n\" +\n\t        \"                                <% } %>\\n\" +\n\t        \"                                <span><%= item.children[ii].label %></span>\\n\" +\n\t        \"                            </a>\\n\" +\n\t        \"                            <% } %>    \\n\" +\n\t        \"                        </li>\\n\" +\n\t        \"                    <% } %>\\n\" +\n\t        \"                <% } else { %>\\n\" +\n\t        \"                    <% if (item === 'divider') { %>\\n\" +\n\t        \"                        <li class=\\\"divider\\\"></li>\\n\" +\n\t        \"                    <% } else { %>\\n\" +\n\t        \"                        <li class=\\\"<%= isActive(value, item.value) && !item.excluded ? 'active' : '' %>\\\" <%= item.excluded ? 'data-excluded=true': '' %>>\\n\" +\n\t        \"                            <% if (popover) { %>\\n\" +\n\t        \"                            <a href=\\\"javascript:;\\\" value=\\\"<%= item.value %>\\\" bx-click=\\\"select()\\\"\\n\" +\n\t        \"                                bx-name=\\\"components/popover\\\"\\n\" +\n\t        \"                                data-content=\\\"<%= item.label %>\\\" \\n\" +\n\t        \"                                data-width=\\\"<%= _popoverWidth %>\\\">\\n\" +\n\t        \"                                <% if (multiple && !item.excluded) { %>\\n\" +\n\t        \"                                <input type=\\\"checkbox\\\" name=\\\"<%= name %>\\\" <%= isActive(value, item.value) ? 'checked' : '' %>>\\n\" +\n\t        \"                                <% } %>\\n\" +\n\t        \"                                <span><%= item.label %></span>\\n\" +\n\t        \"                            </a>\\n\" +\n\t        \"                            <% } else { %>\\n\" +\n\t        \"                            <a href=\\\"javascript:;\\\" value=\\\"<%= item.value %>\\\" bx-click=\\\"select()\\\"\\n\" +\n\t        \"                                title=\\\"<%= item.label %>\\\">\\n\" +\n\t        \"                                <% if (multiple && !item.excluded) { %>\\n\" +\n\t        \"                                <input type=\\\"checkbox\\\" name=\\\"<%= name %>\\\" <%= isActive(value, item.value) ? 'checked' : '' %>>\\n\" +\n\t        \"                                <% } %>\\n\" +\n\t        \"                                <span><%= item.label %></span>\\n\" +\n\t        \"                            </a>\\n\" +\n\t        \"                            <% } %>\\n\" +\n\t        \"                        </li>\\n\" +\n\t        \"                    <% }  %>\\n\" +\n\t        \"                <% } %>\\n\" +\n\t        \"            <% } %>\\n\" +\n\t        \"        </ul>\\n\" +\n\t        \"        <% if (multiple) { %>\\n\" +\n\t        \"        <div class=\\\"dropdown-footer\\\">\\n\" +\n\t        \"            <button type=\\\"button\\\" class=\\\"btn btn-default submit\\\" bx-click=\\\"submit\\\">确认</button>\\n\" +\n\t        \"            <a href=\\\"javascript: void(0);\\\" bx-click=\\\"hide\\\" class=\\\"btn btn-default cancel ml5\\\">取消</a>\\n\" +\n\t        \"        </div>\\n\" +\n\t        \"        <% } %>\\n\" +\n\t        \"    </div>\\n\" +\n\t        \"</div>\"\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// components/dropdown.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 931bcc27e1a1cb312122","module.exports = require('./dropdown')\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/dropdown/index.js\n// module id = 0\n// module chunks = 0","/* global define, window, document */\n/*\n    http://thx.github.io/brix-site/readme.html?name=Dropdonw\n        Deprecated\n    https://nuysoft.gitbooks.io/brix-book/content/brix-components/dropdown/\n        Temporary\n\n    # Dropdown\n\n    下拉框组件。\n\n    ```html\n    <select bx-name=\"components/dropdown\">\n        <option value=\"1\">Action</option>\n        <option value=\"2\">Another action</option>\n        <option value=\"3\">Something else here</option>\n    </select>\n    ```\n\n    ## 配置\n    \n    配置项    | 类型              | 默认值  | 说明\n    :-------- | :---------------- | :------ | :----------\n    data      | array             | -       | 可选。下拉框中的数据。默认从子节点 `<optgroup>` 和 `<option>` 读取。\n    value     | string            | -       | 可选。下拉框的值。\n    searchbox | boolean           | `false` | 可选。是否开启下拉框中的输入框。可选值有 `false`、`true`、`'enter'`。\n    popover   | boolean or number | `false` | 可选。是否为下拉框的条目配置 `bx-name=\"components/popover\"`。可选值有 `false`、`true`、`width`。\n\n    ## 方法\n\n    * .val( [ value ] )\n        设置或读取下拉框的值。\n    * .data( [ data ] )\n        设置或读取下拉框中的数据。\n\n    ## 事件\n\n    事件类型        | 说明\n    :-------------- | :----------\n    change.dropdown | 当值发生变化时被触发。\n    search.dropdown | 见配置项 `searchbox`。\n    \n    ## 参考\n    * http://getbootstrap.com/components/#dropdowns\n    * http://silviomoreto.github.io/bootstrap-select/\n */\ndefine(\n    [\n        'jquery', 'underscore',\n        'brix/loader', 'components/base', 'brix/event',\n        './dropdown.tpl.js'\n    ],\n    function(\n        $, _,\n        Loader, Brix, EventManager,\n        template\n    ) {\n        var NAMESPACE = '.dropdown'\n        var compiledTemplate = _.template(template)\n\n        function Dropdown(options) {\n            if (options && options.element) {\n                if ('select' !== options.element.nodeName.toLowerCase()) {\n                    return new CustomDropdown(options)\n                }\n            }\n        }\n\n        _.extend(Dropdown.prototype, Brix.prototype, {\n            options: {\n                name: undefined,\n                label: undefined,\n                value: undefined,\n                data: [],\n                disabled: undefined,\n\n                width: undefined, // data-width=\"100\" data-width=\"100px\" data-width=\"100%\"\n                className: undefined, // { data-class | data-className | className: ''}\n                justify: false, // 两端对齐 data-justify=\"true|false\"\n\n                searchbox: false, // false | true | keyup | enter\n                placeholder: '搜索关键词',\n                _searchboxEvent: 'keyup', // keyup | enter\n\n                popover: false, // true | width\n                _popoverWidth: '',\n\n                excluded: []\n            },\n            init: function() {\n                this.$element = $(this.element).hide()\n                this.$manager = new EventManager('bx-')\n\n                var options = this.options\n\n                // 如果没有提供选项 data，则从节点 select 的 option 收集数据\n                if (!options.data.length) {\n                    options.data = this._parseDataFromSelect(this.$element)\n                } else {\n                    // 如果提供了选项 data，则逆向填充节点 select 的 option\n                    this._fixFlattenData(this.options.data)\n                    this._fillSelect()\n                }\n\n                // 是否允许多选\n                options.multiple = this.$element.prop('multiple')\n\n                // 节点是否被禁用\n                options.disabled = this.$element.prop('disabled')\n\n                // value => [value] \n                if (options.value === undefined) options.value = []\n                if (!_.isArray(options.value)) options.value = [options.value]\n\n                // 初始化节点 select 的选中状态（值）\n                if (options.value.length) this.$element.val(options.value)\n\n                // 初始化选项 label、value\n                var $selectedOptions = this.$element.find('option:selected')\n                options.label = _.map($selectedOptions, function(item) {\n                    return $.trim($(item).text())\n                }).join(', ')\n                options.value = _.map($selectedOptions, function(item) {\n                    return $(item).attr('value')\n                })\n\n                // 初始化选项 name\n                options.name = this.$element.attr('name')\n\n                // 解析选项 searchbox\n                if (options.searchbox) {\n                    if (options.searchbox === true) {\n                        options._searchboxEvent = 'keyup'\n                    } else {\n                        options._searchboxEvent = options.searchbox\n                        options.searchbox = true\n                    }\n                }\n\n                // 解析选项 popover\n                if (options.popover) {\n                    if (options.popover !== true) {\n                        options._popoverWidth = options.popover\n                        options.popover = true\n                    }\n                }\n\n                // data-class => data-className\n                if (this.options.class) this.options.className = this.options.class\n            },\n            render: function() {\n                this.$relatedElement = $(\n                    compiledTemplate(\n                        _.extend({}, this.options, {\n                            isActive: function(value, cur) {\n                                return _.contains(value, cur) || _.contains(value, cur + '')\n                            }\n                        })\n                    )\n                ).insertBefore(this.$element)\n\n                var width = this.options.width\n                if (width) {\n                    if (parseInt(width) == width) width += 'px'\n                    this.$relatedElement.css({\n                        width: width,\n                        'min-width': width\n                    })\n                }\n\n                // 类样式 data-className\n                if (this.options.className) {\n                    this.$relatedElement.addClass(this.options.className)\n                }\n\n                var value = this.val()\n                if (this.options.multiple && !value.length && this.options.excluded.length) {\n                    this.renderExcludedData()\n                }\n\n                this.$manager.delegate(this.$element, this)\n                this.$manager.delegate(this.$relatedElement, this)\n\n                if (this.options.popover) Loader.boot(this.$relatedElement)\n\n                // this._responsive()\n                this._autoHide()\n            },\n            renderExcludedData: function () {\n                var options = this.options\n                var excludedData = []\n                _.each(options.data, function(item /*, index*/ ) {\n                    if (_.contains(options.excluded, item.value) || _.contains(options.excluded, item.value + '')) excludedData.push(item)\n                })\n                this.$relatedElement.find('button.dropdown-toggle > span.dropdown-toggle-label').text(\n                    _.map(excludedData, function(item) {\n                        return item.label\n                    }).join(', ')\n                )\n            },\n            toggle: function( /*event*/ ) {\n                this.$relatedElement.toggleClass('open')\n                return this\n            },\n            show: function() {\n                this.$relatedElement.addClass('open')\n                return this\n            },\n            hide: function() {\n                this.$relatedElement.removeClass('open')\n                return this\n            },\n            /*\n                .val( value )\n                .val()\n            */\n            val: function(value, __triggerChangeEventBySetValue) {\n                // this.$element.val()\n                var that = this\n                var options = this.options\n\n                var oldValue = options.multiple ? this.options.value :\n                    function() {\n                        var $target = that.$relatedElement.find('ul.dropdown-menu > li.active > a')\n                        return _.map($target, function(item) {\n                            var $item = $(item)\n                            var itemValue = $item.attr('value')\n                            return itemValue !== undefined ? itemValue : $.trim($item.text())\n                        })\n                    }()\n\n                // .val()\n                if (value === undefined) return options.multiple ? oldValue : oldValue[0]\n\n                // .val( value )\n                if (!_.isArray(value)) value = [value]\n                value = _.map(value, function(item) {\n                    return item + ''\n                })\n\n                var data = [] /* [{ label: '', value: '', selected: true|false }] */\n                _.each(this.options.data, function(item /*, index*/ ) {\n                    if (item.children) {\n                        _.each(item.children, function(childItem /*, index*/ ) {\n                            childItem.selected = _.contains(value, childItem.value) || _.contains(value, childItem.value + '')\n                            if (childItem.selected) data.push(childItem)\n                        })\n                    } else {\n                        item.selected = _.contains(value, item.value) || _.contains(value, item.value + '')\n                        if (item.selected) data.push(item)\n                    }\n                })\n\n                // 未知值\n                // if (!data.length) return\n\n                // 如果值没有发生变化，则直接返回\n                if (\n                    oldValue.length === data.length &&\n                    oldValue.sort().join('') ===\n                    _.map(data, function(item) {\n                        return item.value\n                    }).sort().join('')\n                ) return this\n\n                // 多选状态下，如果没有选中任何选项，则显示标记为 excluded 的选项\n                if (!data.length && options.multiple && options.excluded.length) {\n                    // 直接设置为 options.excluded 对开发者不友好\n                    // return this.val(options.excluded, __triggerChangeEventBySetValue)\n                    // 更新模拟下拉框的内容\n                    this.renderExcludedData()\n                } else {\n                    // 更新模拟下拉框的内容\n                    this.$relatedElement.find('button.dropdown-toggle > span.dropdown-toggle-label').text(\n                        _.map(data, function(item) {\n                            return item.label\n                        }).join(', ')\n                    )\n                }\n\n                // 更新原生下拉框的值\n                this.$element.val(\n                    _.map(data, function(item) {\n                        return item.value\n                    })\n                )\n\n                // 更新模拟下拉框的选中状态\n                var $menu = this.$relatedElement.find('ul.dropdown-menu')\n                _.each(oldValue, function(item) {\n                    $menu.find('li:has([value=\"' + item + '\"])')\n                        .removeClass('active')\n                        .find('input:checkbox')\n                        .prop('checked', false)\n                })\n                _.each(data, function(item) {\n                    $menu.find('li:has([value=\"' + item.value + '\"])')\n                        .not('[data-excluded]')\n                        .addClass('active')\n                        .find('input:checkbox')\n                        .prop('checked', true)\n                })\n\n                // 更新  this.options.value\n                this.options.__value = this.options.value\n                this.options.value = _.map(data, function(item) {\n                    return item.value\n                })\n\n                // 修改值，但是不触发 change 事件。避免与其他双向绑定库（例如 Vue ）整合时重复触发 change 事件。\n                if (__triggerChangeEventBySetValue === false) return this\n\n                // #19 支持 event.preventDefault()\n                // 应该先触发 change.dropdown 事件，然后检测事件的默认行为是否被阻止，然后才是改变样式！\n                var event = $.Event('change' + NAMESPACE)\n                var extra = _.map(data, function(item) {\n                    return {\n                        name: options.name,\n                        label: item.label,\n                        value: item.value\n                    }\n                })\n                this.trigger(event, [options.multiple ? extra : extra[0]])\n                if (event.isDefaultPrevented()) {\n                    // TODO 恢复\n                    return this\n                }\n\n                this.$element\n                    .triggerHandler('change')\n\n                return this\n            },\n            data: function(data) {\n                // .data()\n                if (data === undefined) return this.options.data\n\n                // .data(data)\n                this.options.data = this._fixFlattenData(data)\n                this._fillSelect()\n\n                var $menu = this.$relatedElement.find('ul.dropdown-menu')\n                var $newMenu = $(\n                    compiledTemplate(\n                        _.extend({}, this.options, {\n                            isActive: function(value, cur) {\n                                return _.contains(value, cur) || _.contains(value, cur + '')\n                            }\n                        })\n                    )\n                ).find('ul.dropdown-menu')\n\n                $menu.replaceWith($newMenu)\n\n                this.$manager.delegate(this.$relatedElement, this)\n\n                if (this.options.popover) Loader.boot(this.$relatedElement)\n\n                return this\n            },\n            select: function(event /*, trigger*/ ) {\n                var $target = $(event.currentTarget)\n                var value = $target.attr('value')\n                var label = $.trim($target.text())\n\n                switch (!!this.options.multiple) {\n                    case true:\n                        var $li = $target.closest('li')\n                        if (!$li.attr('data-excluded')) {\n                            $li.toggleClass('active')\n                            $target.find('input:checkbox').prop('checked', $li.hasClass('active'))\n                        }\n                        break\n                    case false:\n                        this.val(value !== undefined ? value : label)\n                        this.toggle()\n                        break\n                }\n\n                // #8 如果在 change.dropdown 中再次改变值，则会和下面的代码冲突\n                // $target.closest('li').addClass('active')\n                //     .siblings().removeClass('active')\n            },\n            search: function(event) {\n                if (event.type === 'keyup') {\n                    var key = event.keyCode\n\n                    // 忽略不产生输入的辅助按键\n                    //    command            modifiers                   arrows\n                    if (key === 91 || (15 < key && key < 19) || (37 <= key && key <= 40)) return\n\n                    // 如果选项 searchbox 为 `'enter'`，则只响应 enter 键\n                    if (this.options._searchboxEvent === 'enter' && key !== 13) return\n                }\n\n                var seed = $(event.target).val()\n                this.trigger('search' + NAMESPACE, seed)\n            },\n            filter: function(seed, all) {\n                // ( event, seed )\n                if (seed.type) {\n                    seed = all\n                    all = false\n                }\n\n                // var $lis = this.$relatedElement.find('ul.dropdown-menu li').hide()\n                // $lis.has('> a:contains(\"' + seed + '\")').show() // 显示匹配 text 的选项\n\n                // 性能优化 #10 https://jsfiddle.net/3z7qyzvv/3/\n                // 1. display > .hide/show()\n                // 2. .filter() > .has()\n                var $lis = this.$relatedElement.find('ul.dropdown-menu li')\n                if (!seed) {\n                    $lis.css('display', 'list-item')\n                } else {\n                    $lis.css('display', 'none')\n                    $lis.filter(':contains(\"' + seed + '\")').show()\n                        .css('display', 'list-item')\n                }\n\n                if (all) $lis.has('> a[value*=\"' + seed + '\"]').show() // 显示匹配 value 的选项\n            },\n            disabled: function(disabled) {\n                // .disabled()\n                if (disabled === undefined) return this.options.disabled\n\n                // .disabled( true | false )\n                this.options.disabled = disabled\n                this.$element.prop('disabled', disabled)\n                this.$relatedElement[disabled ? 'addClass' : 'removeClass']('disabled')\n                return this\n            },\n            submit: function() {\n                var $target = this.$relatedElement.find('ul.dropdown-menu > li.active > a')\n                var value = _.map($target, function(item) {\n                    var $item = $(item)\n                    return $item.attr('value') !== undefined ? $item.attr('value') : $.trim($item.text())\n                })\n                this.val(value)\n                this.toggle()\n            },\n            _parseDataFromSelect: function($select) {\n                var that = this\n                var children = _.filter($select.children(), function(child /*, index*/ ) {\n                    // <optgroup> <option>\n                    return /optgroup|option/i.test(child.nodeName)\n                })\n                return _.map(children, function(child /*, index*/ ) {\n                    var $child = $(child)\n                    return /optgroup/i.test(child.nodeName) ? {\n                        label: $child.attr('label'),\n                        children: _parseOptions($child.children())\n                    } : _parseOption(child)\n                })\n\n                function _parseOptions(options) {\n                    return _.map(options, function(option /*, index*/ ) {\n                        return _parseOption(option)\n                    })\n                }\n\n                function _parseOption(option) {\n                    var $option = $(option)\n                    var value = $option.attr('value')\n                    return $option.hasClass('divider') ? 'divider' : {\n                        label: $.trim($option.text()),\n                        value: value,\n                        selected: $option.prop('selected'),\n                        excluded: _.contains(that.options.excluded, value) || _.contains(that.options.excluded, +value) || false\n                    }\n                }\n            },\n            _fixFlattenData: function(data) {\n                return _.map(data, function(item, index, context) {\n                    return (context[index] = _.isObject(item) ? item : {\n                        label: item,\n                        value: item\n                    })\n                })\n            },\n            _fillSelect: function() {\n                var $select = this.$element.empty()\n                _.each(this.options.data, function(item) {\n                    if (item.children && item.children.length) {\n                        var $optgroup = $('<optgroup>').attr('label', item.label)\n                        _.each(item.children, function(item /*, index*/ ) {\n                            _genOption(item).appendTo($optgroup)\n                        })\n                        $optgroup.appendTo($select)\n\n                    } else {\n                        _genOption(item).appendTo($select)\n                    }\n                })\n\n                function _genOption(item) {\n                    // item { label: '', value: '', selected: true|false }\n                    return $('<option>')\n                        .attr('value', item.value)\n                        .prop('selected', item.selected)\n                        .text(item.label)\n                }\n            },\n            _responsive: function() {\n                var $window = $(window)\n                var $relatedElement = this.$relatedElement\n                var $menu = $relatedElement.find('ul.dropdown-menu')\n                $(window).on('scroll', function() {\n                    var offset = $relatedElement.offset()\n                    var top = offset.top - $window.scrollTop()\n                    var button = $window.scrollTop() + $window.height() - offset.top - $relatedElement.outerHeight()\n                    var placement = button >= top ? 'button' : 'top'\n                    switch (placement) {\n                        case 'button':\n                            $menu.css('max-height', top - 10)\n                            break\n                        case 'top':\n                            $menu.css('max-height', button - 10)\n                            break\n                    }\n                })\n            },\n            _autoHide: function() {\n                var that = this\n                var type = 'click.dropdown_autohide_' + this.clientId\n                $(document.body).off(type)\n                    .on(type, function(event) {\n                        if (that.$relatedElement.has(event.target).length) return\n                        that.hide()\n                    })\n            },\n            destroy: function() {\n                this.$manager.undelegate(this.$element)\n                this.$manager.undelegate(this.$relatedElement)\n\n                this.$relatedElement.remove()\n\n                var type = 'click.dropdown_autohide_' + this.clientId\n                $(document.body).off(type)\n            }\n        })\n\n        /*\n            非 Select Dropdown\n        */\n\n        function CustomDropdown() {}\n\n        _.extend(CustomDropdown.prototype, Dropdown.prototype, {\n            init: function() {\n                this.$element = $(this.element)\n                this.$relatedElement = this.$element\n                this.$manager = new EventManager('bx-')\n\n                this._fixFlattenData(this.options.data)\n\n                // 初始化选项 name\n                this.options.name = this.$element.attr('name')\n            },\n            render: function() {\n                if (this.options.value !== undefined) this.val(this.options.value)\n\n                this.$manager.delegate(this.$relatedElement, this)\n\n                // this._responsive()\n                this._autoHide()\n            },\n            val: function(value) {\n                var that = this\n                var oldValue = function() {\n                    var $target = that.$element.find('ul.dropdown-menu > li.active > a')\n                    var oldValue = $target.attr('value')\n                    if (oldValue === undefined) oldValue = $.trim($target.text())\n                    return oldValue\n                }()\n\n                // .val()\n                if (value === undefined) return oldValue\n\n                // .val( value )\n                var data /* { label: '', value: '', selected: true|false } */\n                if (_.isObject(value)) data = value\n                else _.each(that.$element.find('ul.dropdown-menu > li'), function(item /*, index*/ ) {\n                    var $item = $(item)\n                    var $target = $item.find('> a')\n                    var targetValue = $target.attr('value')\n                    var targetText = $.trim($target.text())\n                    if (\n                        (targetValue !== undefined && targetValue == value) ||\n                        (targetValue === undefined && targetText == value)\n                    ) {\n                        data = {\n                            name: that.options.name,\n                            label: targetText,\n                            value: targetValue !== undefined ? targetValue : targetText\n                        }\n                    }\n                })\n\n                // 未知值\n                if (!data) return\n\n                // 更新模拟下拉框的内容（先更新了再比较值是否有变化，因为此时渲染的内容可能是错误的！）\n                this.$relatedElement.find('button.dropdown-toggle > span.dropdown-toggle-label')\n                    .text(data.label)\n\n                // 将 data.value 转换为字符串，是为了避免检测 `1 === '1'` 失败（旧值 oldValue 总是字符串）\n                if (('' + data.value) === oldValue) return this\n\n                // 更新模拟下拉框的选中状态\n                this.$relatedElement.find('ul.dropdown-menu')\n                    .find('li:has([value=\"' + oldValue + '\"])')\n                    .removeClass('active')\n                    .end()\n                    .find('li:has([value=\"' + data.value + '\"])')\n                    .addClass('active')\n\n                this.trigger('change' + NAMESPACE, data)\n\n                return this\n            },\n            data: function(data) {\n                // .data()\n                if (data === undefined) return this.options.data\n\n                // .data(data)\n                this.options.data = this._fixFlattenData(data)\n\n                var $menu = this.$relatedElement.find('ul.dropdown-menu')\n                var $newMenu = $(\n                    compiledTemplate(\n                        _.extend({}, this.options, {\n                            isActive: function(value, cur) {\n                                return _.contains(value, cur) || _.contains(value, cur + '')\n                            }\n                        })\n                    )\n                ).find('ul.dropdown-menu')\n\n                $menu.replaceWith($newMenu)\n\n                this.$manager.delegate(this.$relatedElement, this)\n\n                return this\n            }\n        })\n\n        return Dropdown\n    }\n)\n\n/*\n    responsive http://silviomoreto.github.io/bootstrap-select/\n */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/dropdown/dropdown.js\n// module id = 1\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jquery\"\n// module id = 2\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"underscore\"\n// module id = 3\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"brix/loader\"\n// module id = 4\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"components/base\"\n// module id = 5\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"brix/event\"\n// module id = 6\n// module chunks = 0","/* global define */\ndefine(function() {\n    return \"<div class=\\\"dropdown \\n\" +\n        \"    <%= disabled ? 'disabled' : '' %> \\n\" +\n        \"    <%= multiple ? 'dropdown-multiple' : '' %> \\n\" +\n        \"    <%= searchbox ? 'dropdown-searchbox' : '' %> \\n\" +\n        \"    <%= popover ? 'dropdown-popover dropdown-ellipsis' : '' %>\\n\" +\n        \"    <%= justify ? 'dropdown-justify' : '' %>\\\">\\n\" +\n        \"    <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" value=\\\"<%= value %>\\\" bx-click=\\\"toggle()\\\">\\n\" +\n        \"        <span class=\\\"dropdown-toggle-label\\\"><%= label %></span>\\n\" +\n        \"        <!-- <span class=\\\"caret\\\"> -->\\n\" +\n        \"        <span class=\\\"caret_custom caret_brixfont\\\"><!-- 保留 caret_brixfont 是为了向后兼容，在下个版本中移除  -->\\n\" +\n        \"            <span class=\\\"brixfont down\\\">&#xe623;</span><!-- 向下 &#xe623; -->\\n\" +\n        \"            <span class=\\\"brixfont up\\\">&#xe62e;</span><!-- 向上 &#xe62e;-->\\n\" +\n        \"        </span>\\n\" +\n        \"    </button>\\n\" +\n        \"    <div class=\\\"dropdown-menu-wrapper\\\">\\n\" +\n        \"        <% if (searchbox) { %>\\n\" +\n        \"        <div class=\\\"searchbox\\\">\\n\" +\n        \"            <label>\\n\" +\n        \"                <span class=\\\"brixfont\\\">&#xe61c;</span>\\n\" +\n        \"                <input bx-keyup=\\\"search()\\\" type=\\\"text\\\" placeholder=\\\"<%= placeholder %>\\\">\\n\" +\n        \"            </label>\\n\" +\n        \"        </div>\\n\" +\n        \"        <% } %>\\n\" +\n        \"        <ul class=\\\"dropdown-menu\\\">\\n\" +\n        \"            <% for(var i = 0, item; item = data[i]; i++ ) { %>\\n\" +\n        \"                <% if(item.children) { %>\\n\" +\n        \"                    <li class=\\\"dropdown-header\\\"><%=item.label%></li>\\n\" +\n        \"                    <% for(var ii = 0; ii < item.children.length; ii++ ) { %>\\n\" +\n        \"                        <li class=\\\"dropdown-menu-item-child <%= item.children[ii].value == value && !item.children[ii].excluded ? 'active' : ''%>\\\" <%= item.children[ii].excluded ? 'data-excluded=true': '' %>>\\n\" +\n        \"                            <% if (popover) { %>\\n\" +\n        \"                            <a href=\\\"javascript:;\\\" value=\\\"<%= item.children[ii].value %>\\\" bx-click=\\\"select()\\\"\\n\" +\n        \"                                bx-name=\\\"components/popover\\\"\\n\" +\n        \"                                data-content=\\\"<%= item.children[ii].label %>\\\" \\n\" +\n        \"                                data-width=\\\"<%= _popoverWidth %>\\\">\\n\" +\n        \"                                <% if (multiple && !item.children[ii].excluded) { %>\\n\" +\n        \"                                <input type=\\\"checkbox\\\" name=\\\"<%= name %>\\\" <%= isActive(value, item.children[ii].value) ? 'checked' : '' %>>\\n\" +\n        \"                                <% } %>\\n\" +\n        \"                                <span><%= item.children[ii].label %></span>\\n\" +\n        \"                            </a>\\n\" +\n        \"                            <% } else { %>\\n\" +\n        \"                            <a href=\\\"javascript:;\\\" value=\\\"<%= item.children[ii].value %>\\\" bx-click=\\\"select()\\\"\\n\" +\n        \"                                title=\\\"<%= item.children[ii].label %>\\\">\\n\" +\n        \"                                <% if (multiple && !item.children[ii].excluded) { %>\\n\" +\n        \"                                <input type=\\\"checkbox\\\" name=\\\"<%= name %>\\\" <%= isActive(value, item.children[ii].value) ? 'checked' : '' %>>\\n\" +\n        \"                                <% } %>\\n\" +\n        \"                                <span><%= item.children[ii].label %></span>\\n\" +\n        \"                            </a>\\n\" +\n        \"                            <% } %>    \\n\" +\n        \"                        </li>\\n\" +\n        \"                    <% } %>\\n\" +\n        \"                <% } else { %>\\n\" +\n        \"                    <% if (item === 'divider') { %>\\n\" +\n        \"                        <li class=\\\"divider\\\"></li>\\n\" +\n        \"                    <% } else { %>\\n\" +\n        \"                        <li class=\\\"<%= isActive(value, item.value) && !item.excluded ? 'active' : '' %>\\\" <%= item.excluded ? 'data-excluded=true': '' %>>\\n\" +\n        \"                            <% if (popover) { %>\\n\" +\n        \"                            <a href=\\\"javascript:;\\\" value=\\\"<%= item.value %>\\\" bx-click=\\\"select()\\\"\\n\" +\n        \"                                bx-name=\\\"components/popover\\\"\\n\" +\n        \"                                data-content=\\\"<%= item.label %>\\\" \\n\" +\n        \"                                data-width=\\\"<%= _popoverWidth %>\\\">\\n\" +\n        \"                                <% if (multiple && !item.excluded) { %>\\n\" +\n        \"                                <input type=\\\"checkbox\\\" name=\\\"<%= name %>\\\" <%= isActive(value, item.value) ? 'checked' : '' %>>\\n\" +\n        \"                                <% } %>\\n\" +\n        \"                                <span><%= item.label %></span>\\n\" +\n        \"                            </a>\\n\" +\n        \"                            <% } else { %>\\n\" +\n        \"                            <a href=\\\"javascript:;\\\" value=\\\"<%= item.value %>\\\" bx-click=\\\"select()\\\"\\n\" +\n        \"                                title=\\\"<%= item.label %>\\\">\\n\" +\n        \"                                <% if (multiple && !item.excluded) { %>\\n\" +\n        \"                                <input type=\\\"checkbox\\\" name=\\\"<%= name %>\\\" <%= isActive(value, item.value) ? 'checked' : '' %>>\\n\" +\n        \"                                <% } %>\\n\" +\n        \"                                <span><%= item.label %></span>\\n\" +\n        \"                            </a>\\n\" +\n        \"                            <% } %>\\n\" +\n        \"                        </li>\\n\" +\n        \"                    <% }  %>\\n\" +\n        \"                <% } %>\\n\" +\n        \"            <% } %>\\n\" +\n        \"        </ul>\\n\" +\n        \"        <% if (multiple) { %>\\n\" +\n        \"        <div class=\\\"dropdown-footer\\\">\\n\" +\n        \"            <button type=\\\"button\\\" class=\\\"btn btn-default submit\\\" bx-click=\\\"submit\\\">确认</button>\\n\" +\n        \"            <a href=\\\"javascript: void(0);\\\" bx-click=\\\"hide\\\" class=\\\"btn btn-default cancel ml5\\\">取消</a>\\n\" +\n        \"        </div>\\n\" +\n        \"        <% } %>\\n\" +\n        \"    </div>\\n\" +\n        \"</div>\"\n})\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/dropdown/dropdown.tpl.js\n// module id = 7\n// module chunks = 0"],"sourceRoot":""}