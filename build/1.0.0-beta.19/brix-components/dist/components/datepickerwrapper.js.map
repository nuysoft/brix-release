{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///components/datepickerwrapper.js","webpack:///webpack/bootstrap 0ad76b35083cce443f0f","webpack:///./src/datepickerwrapper/index.js","webpack:///./src/datepickerwrapper/datepickerwrapper.js","webpack:///external \"jquery\"","webpack:///external \"underscore\"","webpack:///external \"moment\"","webpack:///external \"brix/loader\"","webpack:///external \"components/base\"","webpack:///external \"brix/event\"","webpack:///external \"components/datepicker/ancient\"","webpack:///./src/dialog/position/position.js","webpack:///./src/datepickerwrapper/datepickerwrapper.tpl.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_4__","__WEBPACK_EXTERNAL_MODULE_5__","__WEBPACK_EXTERNAL_MODULE_6__","__WEBPACK_EXTERNAL_MODULE_7__","__WEBPACK_EXTERNAL_MODULE_8__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","$","_","moment","Loader","Brix","EventManager","DatePicker","position","template","DatePickerWrapper","CALENDAR","RE_INPUT","NAMESPACE","DATE_PATTERN","PATTERNS","DATE","TIME_PATTERN","TIME","DATE_TIME_PATTERN","DATE_TIME","SHORTCUTS","now","nowDate","get","shortcuts","今天","startOf","昨天","subtract","过去 7 天","本月","上月","最近 15 天","STATE","PENDING","ACTIVE","INACTIVE","extend","prototype","options","calendar","placement","align","offset","mode","undefined","type","dates","ranges","excludeds","unlimits","pages","init","typeMap","parseTypeAsMap","__NEED_FIXED_RENDER","length","format","each","date","index","isString","range","flatten","_ranges","map","join","excluded","_excludeds","css","window","render","that","$element","element","$relatedElement","insertAfter","defer","Deferred","clientId","off","on","event","toggle","$manager","delegate","_autoHide","promise","val","value","pickerComponents","query","item","isArray","submit","_signal","_fixedRender","boot","pickerComponent","preventDefault","stopPropagation","time","hide","validate","Event","trigger","isDefaultPrevented","_unlimitFilter","items","$item","test","nodeName","triggerHandler","resolve","_multiple","inputWrapper","inputs","pickerWrapper","pickers","shortcutWrapper","values","same","optionDate","isSame","eq","addClass","siblings","removeClass","attr","unlimit","pattern","text","_inputToggleDatePicker","inputWrapperOffset","left","top","outerHeight","parseInt","pickerLeft","$picker","$target","target","targetOffset","outerWidth","_hideDatePicker","show","_offset","beautify","toggleClass","relatedMarginLeft","relatedMarginTop","from","shortcutText","shortcutDates","key","shortcutDate","_change","split","isValid","_state","document","body","contains","inactiveEvent","destroy","undelegate","remove","apply","overlay","$trigger","center","triggerOffset","triggerLeft","triggerTop","triggerWidth","triggerHeight","$overlay","visible","overlayWidth","overlayHeight","leftDiff","topDiff","RE_TOP_OR_BOTTOM","RE_LEFT_OR_RIGHT","width","height","parseFloat","$window","windowWidth","windowHeight","scrollLeft","scrollTop","start","result","opacity","end"],"mappings":"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","file":"components/datepickerwrapper.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jquery\"), require(\"underscore\"), require(\"moment\"), require(\"brix/loader\"), require(\"components/base\"), require(\"brix/event\"), require(\"components/datepicker/ancient\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jquery\", \"underscore\", \"moment\", \"brix/loader\", \"components/base\", \"brix/event\", \"components/datepicker/ancient\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"components/datepickerwrapper\"] = factory(require(\"jquery\"), require(\"underscore\"), require(\"moment\"), require(\"brix/loader\"), require(\"components/base\"), require(\"brix/event\"), require(\"components/datepicker/ancient\"));\n\telse\n\t\troot[\"components/datepickerwrapper\"] = factory(root[\"jquery\"], root[\"underscore\"], root[\"moment\"], root[\"brix/loader\"], root[\"components/base\"], root[\"brix/event\"], root[\"components/datepicker/ancient\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jquery\"), require(\"underscore\"), require(\"moment\"), require(\"brix/loader\"), require(\"components/base\"), require(\"brix/event\"), require(\"components/datepicker/ancient\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jquery\", \"underscore\", \"moment\", \"brix/loader\", \"components/base\", \"brix/event\", \"components/datepicker/ancient\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"components/datepickerwrapper\"] = factory(require(\"jquery\"), require(\"underscore\"), require(\"moment\"), require(\"brix/loader\"), require(\"components/base\"), require(\"brix/event\"), require(\"components/datepicker/ancient\"));\n\telse\n\t\troot[\"components/datepickerwrapper\"] = factory(root[\"jquery\"], root[\"underscore\"], root[\"moment\"], root[\"brix/loader\"], root[\"components/base\"], root[\"brix/event\"], root[\"components/datepicker/ancient\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1)\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define, document */\n\t/*\n\t    http://thx.github.io/brix-site/readme.html?name=DatePickerWrapper\n\t        Deprecated\n\t    https://nuysoft.gitbooks.io/brix-book/content/brix-components/datepickerwrapper/\n\t        Temporary\n\t\n\t    # DatePickerWrapper\n\t\n\t    日期选择器。\n\t\n\t    ```html\n\t    <input bx-name=\"components/datepickerwrapper\" type=\"text\" class=\"form-control w100\">\n\t\n\t    <div bx-name=\"components/datepickerwrapper\" \n\t        data-dates=\"[ '2015-1-1', '2015-1-2']\" \n\t        class=\"form-control datepickerwrapper-trigger\">\n\t        <span data-index=\"0\">2015-1-1</span> 至 <span data-index=\"1\">2015-1-2</span>\n\t        <i class=\"brixfont pull-right ml5 down\">&#xe623;<!--&#xe623;--></i>\n\t        <i class=\"brixfont pull-right ml5 up\">&#xe62e;<!--&#xe62e;--></i>\n\t    </div>\n\t    ```\n\t\n\t    ## 配置\n\t\n\t    配置项    | 类型              | 默认值   | 说明\n\t    :-------- | :---------------- | :------- | :----------\n\t    shortcuts | boolean or object | `{}`     | 指示是否开启快捷日期和快捷日期的内容。\n\t    dates     | array             | `[]`     | 初始日期。\n\t    ranges    | array             | `[]`     | 设置可选日期的范围。\n\t    excludeds | array             | `[]`     | 设置禁选日期的范围。\n\t    align     | string            | `'left'` | 指定浮层的对齐方式，可选值有 `'left'`、`'right'`。\n\t\n\t    ## 方法\n\t\n\t    * .shortcutText( dates )\n\t        获取日期对应的快捷日期文本。\n\t    * .val( [ value ] )\n\t        获取或设置选中的日期。\n\t    * .range( [ value ] )\n\t        获取或设置可选日期的范围。\n\t    * .excluded( [ value ] )\n\t        获取或设置禁选日期的范围。\n\t    \n\t    ## 事件\n\t\n\t    事件类型                 | 说明\n\t    :----------------------- | :----------\n\t    change.datepickerwrapper | 当日期组件变化时被触发。事件监听函数接受 3 个参数：event、dates。\n\t\n\t */\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t        __webpack_require__(2), __webpack_require__(3), __webpack_require__(4),\n\t        __webpack_require__(5), __webpack_require__(6), __webpack_require__(7),\n\t        __webpack_require__(8),\n\t        __webpack_require__(9),\n\t        __webpack_require__(10)\n\t    ], __WEBPACK_AMD_DEFINE_RESULT__ = function(\n\t        $, _, moment,\n\t        Loader, Brix, EventManager,\n\t        DatePicker,\n\t        position,\n\t        template\n\t    ) {\n\t        var CALENDAR = 'components/datepicker/ancient'\n\t        var RE_INPUT = /^input|textarea$/i\n\t        var NAMESPACE = '.datepickerwrapper'\n\t            // var NAMESPACE_ORIGINAL = '.original'\n\t        var DATE_PATTERN = DatePicker.PATTERNS.DATE\n\t        var TIME_PATTERN = DatePicker.PATTERNS.TIME\n\t        var DATE_TIME_PATTERN = DatePicker.PATTERNS.DATE_TIME\n\t        var SHORTCUTS = function() {\n\t            var now = moment()\n\t            var nowDate = now.get('date')\n\t            var shortcuts = {\n\t                '今天': [\n\t                    moment().startOf('day'),\n\t                    moment().startOf('day')\n\t                ],\n\t                '昨天': [\n\t                    moment().startOf('day').subtract(1, 'days'),\n\t                    moment().startOf('day').subtract(1, 'days')\n\t                ],\n\t                '过去 7 天': [\n\t                    moment().startOf('day').subtract(7, 'days'),\n\t                    moment().startOf('day').subtract(1, 'days')\n\t                ],\n\t                '本月': [\n\t                    moment().startOf('day').subtract(nowDate - 1, 'days'),\n\t                    moment().startOf('day')\n\t                ],\n\t                '上月': [\n\t                    moment().startOf('day').startOf('month').subtract(1, 'month'),\n\t                    moment().startOf('day').startOf('month').subtract(1, 'days')\n\t                ],\n\t                '最近 15 天': [\n\t                    moment().startOf('day').subtract(15, 'days'),\n\t                    moment().startOf('day').subtract(1, 'days')\n\t                ]\n\t            }\n\t            return shortcuts\n\t        }()\n\t        var STATE = {\n\t            PENDING: 'pending',\n\t            ACTIVE: 'active',\n\t            INACTIVE: 'inactive'\n\t        }\n\t\n\t        function DatePickerWrapper() {}\n\t\n\t        DatePickerWrapper.DATE_PATTERN = DATE_PATTERN\n\t        DatePickerWrapper.TIME_PATTERN = TIME_PATTERN\n\t        DatePickerWrapper.DATE_TIME_PATTERN = DATE_TIME_PATTERN\n\t        DatePickerWrapper.SHORTCUTS = SHORTCUTS\n\t\n\t        _.extend(DatePickerWrapper.prototype, Brix.prototype, {\n\t            options: {\n\t                calendar: CALENDAR,\n\t\n\t                placement: 'bottom', // top bottom left right\n\t                align: 'left', // left right top bottom\n\t                offset: {},\n\t\n\t                mode: 'signal', // signal multiple\n\t                shortcuts: undefined,\n\t                type: 'date', // all date year month time\n\t                dates: [],\n\t                ranges: [],\n\t                excludeds: [],\n\t                unlimits: [],\n\t                pages: 1\n\t            },\n\t            init: function() {\n\t                // 修正选项\n\t                this.options.typeMap = DatePicker.parseTypeAsMap(this.options.type)\n\t                this.options.__NEED_FIXED_RENDER = this.options.dates.length !== 0\n\t                if (this.options.dates.length > 1) this.options.mode = 'multiple'\n\t                if (!this.options.dates.length) this.options.dates = [moment().startOf('day').format(DATE_PATTERN)]\n\t\n\t                if (this.options.shortcuts === undefined) this.options.shortcuts = DatePickerWrapper.SHORTCUTS\n\t                if (this.options.shortcuts) {\n\t                    _.each(this.options.shortcuts, function(dates /*, title*/ ) {\n\t                        _.each(dates, function(date, index) {\n\t                            dates[index] = moment(\n\t                                date,\n\t                                _.isString(date) && DATE_TIME_PATTERN\n\t                            )\n\t                        })\n\t                    })\n\t                }\n\t\n\t                // ranges\n\t                if (this.options.range && this.options.range.length) this.options.ranges = this.options.range\n\t                this.options.ranges = _.flatten(this.options.ranges || this.options.range)\n\t                _.each(this.options.ranges, function(date, index, ranges) {\n\t                    if (date) ranges[index] = moment(\n\t                        date,\n\t                        _.isString(date) && DATE_TIME_PATTERN\n\t                    )\n\t                })\n\t                this.options._ranges = _.map(this.options.ranges, function(date) {\n\t                    if (date) return date.format(DATE_PATTERN)\n\t                })\n\t                this.options._ranges = \"['\" + this.options._ranges.join(\"','\") + \"']\"\n\t\n\t                // excludeds\n\t                if (this.options.excluded && this.options.excluded.length) this.options.excludeds = this.options.excluded\n\t                this.options.excludeds = _.flatten(this.options.excludeds || this.options.excluded)\n\t                _.each(this.options.excludeds, function(date, index, excludeds) {\n\t                    if (date) excludeds[index] = moment(\n\t                        date,\n\t                        _.isString(date) && DATE_TIME_PATTERN\n\t                    )\n\t                })\n\t                this.options._excludeds = _.map(this.options.excludeds, function(date) {\n\t                    if (date) return date.format(DATE_PATTERN)\n\t                })\n\t                this.options._excludeds = this.options._excludeds.length ?\n\t                    \"['\" + this.options._excludeds.join(\"','\") + \"']\" :\n\t                    \"[]\"\n\t\n\t\n\t                // if (this.options.unlimits.length) {\n\t                //     _.each(this.options.unlimits, function(date, index, unlimits) {\n\t                //         if (date) unlimits[index] = moment(date)\n\t                //     })\n\t                // }\n\t\n\t                // 支持自定义 HTML 模板 template\n\t                template = this.options.template || template\n\t\n\t                // 支持自定义 CSS 样式\n\t                if (this.options.css) window.require('css!' + this.options.css)\n\t            },\n\t            render: function() {\n\t                var that = this\n\t                this.$element = $(this.element)\n\t                this.$relatedElement = $(\n\t                    _.template(template)(this.options)\n\t                ).insertAfter(this.$element)\n\t\n\t                var defer = $.Deferred()\n\t                this['_' + this.options.mode](defer)\n\t\n\t                var type = 'click.datepickerwrapper_toggle_' + this.clientId\n\t                this.$element.off(type)\n\t                    .on(type, function(event) {\n\t                        that.toggle(event)\n\t                    })\n\t\n\t                var $manager = this.$manager = new EventManager('bx-')\n\t                $manager.delegate(this.$element, this)\n\t                $manager.delegate(this.$relatedElement, this)\n\t\n\t                this._autoHide()\n\t\n\t                return defer.promise()\n\t            },\n\t            val: function(value) {\n\t                var pickerComponents = Loader.query(CALENDAR, this.$relatedElement)\n\t                if (value) {\n\t                    _.each(pickerComponents, function(item, index) {\n\t                        item.val(\n\t                            _.isArray(value) ? value[index] : value\n\t                        )\n\t                    })\n\t\n\t                    this.submit() // #44 #50\n\t                    return this\n\t                }\n\t                return _.map(pickerComponents, function(item /*, index*/ ) {\n\t                    return item.val()\n\t                })\n\t            },\n\t            range: function(value) {\n\t                var pickerComponents = Loader.query(CALENDAR, this.$relatedElement)\n\t                if (value) {\n\t                    this.options.ranges = value = _.flatten(value)\n\t                    _.each(pickerComponents, function(item /*, index*/ ) {\n\t                        item.range(value)\n\t                    })\n\t                    return this\n\t                }\n\t                return this.options.ranges\n\t            },\n\t            excluded: function(value) {\n\t                var pickerComponents = Loader.query(CALENDAR, this.$relatedElement)\n\t                if (value) {\n\t                    this.options.excludeds = value = _.flatten(value)\n\t                    _.each(pickerComponents, function(item /*, index*/ ) {\n\t                        item.excluded(value)\n\t                    })\n\t                    return this\n\t                }\n\t                return this.options.excludeds\n\t            },\n\t            _signal: function(defer) {\n\t                var that = this\n\t                if (this.options.__NEED_FIXED_RENDER) this._fixedRender()\n\t                Loader.boot(true, this.$relatedElement, function( /*records*/ ) {\n\t                    var pickerComponent = Loader.query(CALENDAR, that.$relatedElement)[0]\n\t                        /* jshint unused:false */\n\t                    pickerComponent.on('change.datepicker unchange.datepicker', function(event, date, type) {\n\t                        // 过滤 timepicker 中的 input 触发的原生 change 事件\n\t                        if (!date) {\n\t                            event.preventDefault()\n\t                            event.stopPropagation()\n\t                            return\n\t                        }\n\t                        if (type !== undefined && type !== 'date' && type !== 'time') return\n\t                        if (that.options.typeMap.time && type === 'date') return\n\t\n\t                        that.hide()\n\t\n\t                        var validate = $.Event('change' + NAMESPACE)\n\t                        that.trigger(validate, [\n\t                            [date], type\n\t                        ])\n\t                        if (!validate.isDefaultPrevented()) {\n\t                            var value = that._unlimitFilter(date, that.options.unlimits[0])\n\t                            var items = $('[data-index]', that.$element)\n\t                            if (items.length) {\n\t                                _.each(items, function(item, index) {\n\t                                    var $item = $(item)\n\t                                    $item[\n\t                                        RE_INPUT.test(item.nodeName) ? 'val' : 'html'\n\t                                    ](value)\n\t                                })\n\t                            } else {\n\t                                that.$element[\n\t                                    RE_INPUT.test(that.element.nodeName) ? 'val' : 'html'\n\t                                ](value)\n\t                            }\n\t\n\t                            // 单个日期选择器：自动触发 input 元素的 change 事件。</h4>\n\t                            // 单个日期选择器：自动同步至隐藏域，并触发隐藏域的 change 事件。</h4>\n\t                            that.$element.triggerHandler('change') //  + NAMESPACE + NAMESPACE_ORIGINAL, date\n\t                            if (!RE_INPUT.test(that.element.nodeName)) {\n\t                                $('[data-hidden-index]', that.$element)\n\t                                    .val(value)\n\t                                    .triggerHandler('change')\n\t                            }\n\t                        }\n\t                    })\n\t                    pickerComponent.$element\n\t                        .on('click', '.timepicker .timepicker-footer .cancel', function() { // components/datepicker\n\t                            that.hide()\n\t                        })\n\t                        .on('click', '.hour-minute-second .hour-minute-second-footer .cancel', function() { // components/datepicker/ancient\n\t                            that.hide()\n\t                        })\n\t\n\t                    if (defer) defer.resolve()\n\t                })\n\t            },\n\t            _multiple: function(defer) {\n\t                var that = this\n\t                if (this.options.__NEED_FIXED_RENDER) this._fixedRender()\n\t                Loader.boot(true, this.$relatedElement, function() {\n\t                    var inputWrapper = $('.datepickerwrapper-inputs', that.$relatedElement)\n\t                    var inputs = $('input', inputWrapper)\n\t\n\t                    var pickerWrapper = $('.datepickerwrapper-pickers', that.$relatedElement)\n\t                    var pickers = $('.picker', pickerWrapper)\n\t\n\t                    var pickerComponents = Loader.query(CALENDAR, that.$relatedElement)\n\t\n\t                    var shortcutWrapper = $('.datepickerwrapper-shortcuts', that.$relatedElement)\n\t                    var shortcuts = $('.shortcut', shortcutWrapper)\n\t\n\t                    if (that.options.shortcuts) {\n\t                        _.each(_.values(that.options.shortcuts), function(dates, index) {\n\t                            var same = true\n\t                            _.each(dates, function(date, index) {\n\t                                var optionDate = moment(\n\t                                    that.options.dates[index],\n\t                                    _.isString(that.options.dates[index]) && DATE_TIME_PATTERN\n\t                                )\n\t                                if (!date.isSame(optionDate, 'days')) same = false\n\t                            })\n\t                            if (same) {\n\t                                shortcuts.eq(index).addClass('active')\n\t                                    .siblings().removeClass('active')\n\t                            }\n\t                        })\n\t                    }\n\t\n\t                    _.each(inputs, function(item, index) {\n\t                        $(item)\n\t                            .val(\n\t                                moment(\n\t                                    that.options.dates[index],\n\t                                    _.isString(that.options.dates[index]) && DATE_TIME_PATTERN\n\t                                )\n\t                                .format(DATE_PATTERN)\n\t                            ) // 初始值\n\t                    })\n\t\n\t                    _.each(pickerComponents, function(item, index) {\n\t                        /* jshint unused:false */\n\t                        item.val(that.options.dates[index])\n\t                            .on('change.datepicker unchange.datepicker ', function(event, date, type) {\n\t                                if(!date) return\n\t                                if (type !== undefined && type !== 'date' && type !== 'time') return\n\t                                if (that.options.typeMap.time && type === 'date') return\n\t\n\t                                var value = that._unlimitFilter(date, that.options.unlimits[index])\n\t                                inputs.eq(index).val(value)\n\t                                pickers.eq(index).hide()\n\t                            })\n\t                        var value = that._unlimitFilter(\n\t                            moment(\n\t                                that.options.dates[index],\n\t                                _.isString(that.options.dates[index]) && DATE_TIME_PATTERN\n\t                            ),\n\t                            that.options.unlimits[index]\n\t                        )\n\t                        inputs.eq(index).val(value)\n\t                        item.$element\n\t                            .on('click', '.timepicker .timepicker-footer .cancel', function() { // components/datepicker\n\t                                pickers.eq(index).hide()\n\t                            })\n\t                            .on('click', '.hour-minute-second .hour-minute-second-footer .cancel', function() { // components/datepicker/ancient\n\t                                pickers.eq(index).hide()\n\t                            })\n\t                    })\n\t\n\t                    if (defer) defer.resolve()\n\t                })\n\t            },\n\t            // 如果设置了初始值，则自动渲染到组件上。\n\t            // TODO 单选和多选的更新也调用 _fixedRender()。\n\t            _fixedRender: function() {\n\t                var that = this\n\t                var dates = that.options.dates\n\t                var items = $('[data-index]', that.$element)\n\t                if (items.length) {\n\t                    _.each(items, function(item, index) {\n\t                        var $item = $(item)\n\t                        index = +$item.attr('data-index')\n\t                        $item[RE_INPUT.test(item.nodeName) ? 'val' : 'html'](\n\t                            that._unlimitFilter(\n\t                                moment(dates[index], _.isString(dates[index]) && DATE_TIME_PATTERN),\n\t                                that.options.unlimits[index]\n\t                            )\n\t                        )\n\t                    })\n\t                } else {\n\t                    that.$element[RE_INPUT.test(that.element.nodeName) ? 'val' : 'html'](\n\t                        _.map(dates, function(item, index) {\n\t                            return that._unlimitFilter(\n\t                                moment(item, _.isString(item) && DATE_TIME_PATTERN),\n\t                                that.options.unlimits[index]\n\t                            )\n\t                        }).join(', ')\n\t                    )\n\t                }\n\t\n\t                items = $('[data-hidden-index]', that.$element)\n\t                _.each(items, function(item, index) {\n\t                    var $item = $(item)\n\t                    index = +$item.attr('data-hidden-index')\n\t                    var value = that._unlimitFilter(\n\t                        moment(dates[index], _.isString(dates[index]) && DATE_TIME_PATTERN),\n\t                        undefined\n\t                    )\n\t                    $item.val(value)\n\t                })\n\t            },\n\t            _unlimitFilter: function(date, unlimit) {\n\t                var typeMap = this.options.typeMap\n\t                var pattern = typeMap.date && typeMap.time && DATE_TIME_PATTERN ||\n\t                    typeMap.date && DATE_PATTERN ||\n\t                    typeMap.time && TIME_PATTERN\n\t                var text = date.format(pattern)\n\t                if (unlimit && text === moment(\n\t                        unlimit,\n\t                        _.isString(unlimit) && DATE_TIME_PATTERN\n\t                    ).format(pattern)) text = '不限'\n\t                return text\n\t            },\n\t            _inputToggleDatePicker: function(event, index, type) {\n\t                var inputWrapper = $('.datepickerwrapper-inputs', this.$relatedElement)\n\t                var pickerWrapper = $('.datepickerwrapper-pickers', this.$relatedElement)\n\t                var pickers = $('.picker', pickerWrapper)\n\t\n\t                var inputWrapperOffset = inputWrapper.offset()\n\t                pickerWrapper.offset({ // 修正日期组件容器的位置\n\t                    left: inputWrapperOffset.left,\n\t                    top: inputWrapperOffset.top + inputWrapper.outerHeight() + (\n\t                        parseInt(pickerWrapper.css('margin-top'), 10) ||\n\t                        0\n\t                    )\n\t                })\n\t\n\t                var $picker = pickers.eq(index)\n\t                var $target = $(event.target)\n\t                var targetOffset = $target.offset()\n\t                var pickerLeft\n\t                switch (this.options.align) {\n\t                    case 'left':\n\t                        pickerLeft = targetOffset.left\n\t                        break\n\t                    case 'right':\n\t                        pickerLeft = targetOffset.left - ($picker.outerWidth() - $target.outerWidth())\n\t                }\n\t                $picker[type ? type : 'toggle']()\n\t                    .offset({ // 修正单个日期组件的位置\n\t                        left: pickerLeft\n\t                    })\n\t                    .siblings().hide()\n\t            },\n\t            _hideDatePicker: function( /*event*/ ) {\n\t                var pickerWrapper = $('.datepickerwrapper-pickers', this.$relatedElement)\n\t                var pickers = $('.picker', pickerWrapper)\n\t                pickers.hide()\n\t            },\n\t            show: function( /*event*/ ) {\n\t                this.$element.addClass('datepickerwrapper-open')\n\t                this.$relatedElement.show()\n\t                    .offset(this._offset())\n\t                Loader.query(CALENDAR, this.$relatedElement).beautify()\n\t            },\n\t            hide: function( /*event*/ ) {\n\t                this.$element.removeClass('datepickerwrapper-open')\n\t                this._hideDatePicker()\n\t                this.$relatedElement.hide()\n\t            },\n\t            toggle: function( /*event*/ ) {\n\t                this.$element.toggleClass('datepickerwrapper-open')\n\t                this.$relatedElement.toggle()\n\t                    .offset(this._offset())\n\t                Loader.query(CALENDAR, this.$relatedElement).beautify()\n\t            },\n\t            _offset: function() {\n\t                var offset = position(this.$element, this.$relatedElement, this.options.placement, this.options.align)\n\t                var relatedMarginLeft = parseInt(this.$relatedElement.css('margin-left'), 10) || 0\n\t                var relatedMarginTop = parseInt(this.$relatedElement.css('margin-top'), 10) || 0\n\t                return {\n\t                    left: offset.left + relatedMarginLeft + (this.options.offset.left || 0),\n\t                    top: offset.top + relatedMarginTop + (this.options.offset.top || 0)\n\t                }\n\t            },\n\t            submit: function(event /* jshint unused:false */ , from) {\n\t                var that = this\n\t\n\t                switch (from) {\n\t                    case 'shortcut':\n\t                        break\n\t                    default:\n\t                        var shortcutWrapper = $('.datepickerwrapper-shortcuts', that.$relatedElement)\n\t                        var shortcuts = $('.shortcut', shortcutWrapper)\n\t                        shortcuts.removeClass('active')\n\t                }\n\t\n\t                var pickerComponents = Loader.query(CALENDAR, this.$relatedElement)\n\t                var dates = _.map(pickerComponents, function(item /*, index*/ ) {\n\t                    return item.val()\n\t                })\n\t\n\t                this.hide()\n\t\n\t                var validate = $.Event('change' + NAMESPACE)\n\t                this.trigger(validate, [dates])\n\t\n\t                if (!validate.isDefaultPrevented()) {\n\t                    var items = $('[data-index]', this.$element)\n\t                    if (items.length) {\n\t                        _.each(items, function(item, index) {\n\t                            var $item = $(item)\n\t                            index = +$item.attr('data-index')\n\t                            $item[\n\t                                RE_INPUT.test(item.nodeName) ? 'val' : 'html'\n\t                            ](\n\t                                that._unlimitFilter(dates[index], that.options.unlimits[index])\n\t                            )\n\t\n\t                        })\n\t                    } else {\n\t                        this.$element[\n\t                            RE_INPUT.test(this.element.nodeName) ? 'val' : 'html'\n\t                        ](\n\t                            _.map(dates, function(item, index) {\n\t                                return that._unlimitFilter(item, that.options.unlimits[index])\n\t                            }).join(', ')\n\t                        )\n\t                    }\n\t\n\t                    // 多个日期选择器：自动同步至隐藏域，并触发隐藏域的 change 事件。\n\t                    items = $('[data-hidden-index]', this.$element)\n\t                    _.each(items, function(item, index) {\n\t                        var $item = $(item)\n\t                        index = +$item.attr('data-hidden-index')\n\t                        var value = that._unlimitFilter(dates[index], undefined)\n\t                        $item.val(value).trigger('change')\n\t                    })\n\t                }\n\t            },\n\t            shortcutText: function(dates) {\n\t                var shortcutText\n\t                _.each(this.options.shortcuts, function(shortcutDates, key) {\n\t                    if (shortcutText) return\n\t\n\t                    var same = true\n\t                    _.each(shortcutDates, function(shortcutDate, index) {\n\t                        if (!shortcutDate.isSame(dates[index], 'days')) same = false\n\t                    })\n\t                    if (same) shortcutText = key\n\t                })\n\t                return shortcutText\n\t            },\n\t            _change: function(event, type, index) {\n\t                var that = this\n\t                var $target = $(event.target)\n\t                var pickerComponents = Loader.query(CALENDAR, this.$relatedElement)\n\t\n\t                switch (type) {\n\t                    case 'shortcut':\n\t                        var dates = $target.attr('data-value').split(',')\n\t                        _.each(dates, function(item, index) {\n\t                            that.options.dates[index] = item\n\t                            pickerComponents[index].val(item)\n\t                        })\n\t\n\t                        $target.addClass('active')\n\t                            .siblings().removeClass('active')\n\t\n\t                        this.submit(event, type)\n\t                        break\n\t                    case 'date':\n\t                        var date = moment($target.val())\n\t                        if (!date.isValid()) break\n\t                        pickerComponents[index].val(date)\n\t                        break\n\t                }\n\t            },\n\t            _autoHide: function() {\n\t                var that = this\n\t                var type = 'click' + NAMESPACE + '_' + this.clientId\n\t                this._state = STATE.INACTIVE\n\t                $(document.body).off(type)\n\t                    .on(type, function(event) {\n\t                        // 点击不存在节点\n\t                        if (!$.contains(document.body, event.target)) return\n\t                        if (\n\t                            event.target === that.element || // 点击组件节点\n\t                            $.contains(that.element, event.target) || // 点击组件子节点\n\t                            event.target === that.$relatedElement[0] || // 点击关联节点\n\t                            $.contains(that.$relatedElement[0], event.target) // 点击组件关联子节点\n\t                        ) {\n\t                            if (that._state === STATE.ACTIVE) return\n\t                            that.trigger(\n\t                                $.Event('active' + NAMESPACE, {\n\t                                    target: event.target\n\t                                })\n\t                            )\n\t                            that._state = STATE.ACTIVE\n\t                            return\n\t                        }\n\t\n\t                        if (that._state === STATE.INACTIVE) return\n\t                        var inactiveEvent = $.Event('inactive' + NAMESPACE, {\n\t                            target: event.target\n\t                        })\n\t                        that.trigger(inactiveEvent)\n\t                        that._state = STATE.INACTIVE\n\t\n\t                        if (inactiveEvent.isDefaultPrevented()) return\n\t\n\t                        that.hide()\n\t                    })\n\t                    .on(type, function(event) {\n\t                        var inputWrapper = $('.datepickerwrapper-inputs-body', that.$relatedElement)\n\t                        var pickerWrapper = $('.datepickerwrapper-pickers', that.$relatedElement)\n\t                        if (\n\t                            ( // 点击关联节点，点击组件关联子节点\n\t                                event.target === that.$relatedElement[0] ||\n\t                                $.contains(that.$relatedElement[0], event.target)\n\t                            ) &&\n\t                            ( // 但不在 inputs 和 pickers 之内\n\t                                (inputWrapper.length && pickerWrapper.length) &&\n\t                                !$.contains(inputWrapper[0], event.target) &&\n\t                                !$.contains(pickerWrapper[0], event.target)\n\t                            )\n\t                        ) {\n\t                            that._hideDatePicker()\n\t                        }\n\t                    })\n\t            },\n\t            destroy: function() {\n\t                var type = 'click.datepickerwrapper_toggle_' + this.clientId\n\t                this.$element.off(type)\n\t\n\t                this.$manager.undelegate(this.$element, this)\n\t                this.$manager.undelegate(this.$relatedElement, this)\n\t\n\t                this.$relatedElement.remove()\n\t\n\t                type = 'click' + NAMESPACE + '_' + this.clientId\n\t                $(document.body).off(type)\n\t            }\n\t        })\n\t\n\t        return DatePickerWrapper\n\t            // return Brix.extend({})\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define, window */\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t        __webpack_require__(2)\n\t    ], __WEBPACK_AMD_DEFINE_RESULT__ = function(\n\t        $\n\t    ) {\n\t        var RE_TOP_OR_BOTTOM = /top|bottom/\n\t        var RE_LEFT_OR_RIGHT = /left|right/\n\t\n\t        /**\n\t         * 计算浮层位置的工具函数\n\t         * @param  {[type]} trigger    参照节点\n\t         * @param  {[type]} dialog     浮层节点\n\t         * @param  {[type]} placement  浮层相对于参照的位置\n\t         * @param  {[type]} align      浮层相对于参照的对齐方式\n\t         * @return {[type]}            { left: left, top: top }\n\t         */\n\t        function position(trigger, overlay, placement, align) {\n\t            var $trigger = $(trigger)\n\t\n\t            if (!$trigger.length) return center(overlay)\n\t\n\t            var triggerOffset = $trigger.offset()\n\t            var triggerLeft = triggerOffset.left\n\t            var triggerTop = triggerOffset.top\n\t            var triggerWidth = $trigger.outerWidth()\n\t            var triggerHeight = $trigger.outerHeight()\n\t\n\t            var $overlay = $(overlay) // .show()\n\t            var visible = $overlay.css('display') !== 'none'\n\t            $overlay.show()\n\t            var overlayWidth = $overlay.outerWidth()\n\t            var overlayHeight = $overlay.outerHeight()\n\t                // var overlayMarginLeft = parseInt($overlay.css('margin-left'), 10)\n\t                // var overlayMarginTop = parseInt($overlay.css('margin-top'), 10)\n\t\n\t            if (!visible) $overlay.hide()\n\t\n\t            var left, top\n\t            var leftDiff = triggerWidth / 2 - overlayWidth / 2\n\t            var topDiff = triggerHeight / 2 - overlayHeight / 2\n\t            switch (placement) {\n\t                case 'top': // 上方，水平局中\n\t                    left = triggerLeft + leftDiff\n\t                    top = triggerTop - overlayHeight\n\t                    break\n\t                case 'bottom': // 下方，水平局中\n\t                    left = triggerLeft + leftDiff\n\t                    top = triggerTop + triggerHeight\n\t                    break\n\t                case 'left': // 左侧，垂直局中\n\t                    left = triggerLeft - overlayWidth\n\t                    top = triggerTop + topDiff\n\t                    break\n\t                case 'right': // 右侧，垂直局中\n\t                    left = triggerLeft + triggerWidth\n\t                    top = triggerTop + topDiff\n\t                    break\n\t            }\n\t\n\t            // 浮层节点不能覆盖参照节点\n\t            if (\n\t                RE_TOP_OR_BOTTOM.test(placement) !== RE_TOP_OR_BOTTOM.test(align) &&\n\t                RE_LEFT_OR_RIGHT.test(placement) !== RE_LEFT_OR_RIGHT.test(align)\n\t            ) {\n\t                switch (align) {\n\t                    case 'top': // 上边框对齐\n\t                        top = triggerTop\n\t                        break\n\t                    case 'bottom': // 下边框对齐\n\t                        top = triggerTop + triggerHeight - overlayHeight\n\t                        break\n\t                    case 'left': // 做边框对齐\n\t                        left = triggerLeft\n\t                        break\n\t                    case 'right': // 右边框对齐\n\t                        left = triggerLeft + triggerWidth - overlayWidth\n\t                        break\n\t                }\n\t            }\n\t\n\t            return {\n\t                left: left, //  + overlayMarginLeft\n\t                top: top //  + overlayMarginTop\n\t            }\n\t        }\n\t\n\t        function center(width, height) {\n\t            var overlayWidth, overlayHeight\n\t\n\t            // center(overlay) {\n\t            if (!height) {\n\t                var $overlay = $(width) // .show()\n\t                var visible = $overlay.css('display') !== 'none'\n\t                $overlay.show()\n\t                overlayWidth = $overlay.outerWidth()\n\t                overlayHeight = $overlay.outerHeight()\n\t\n\t                if (!visible) $overlay.hide()\n\t\n\t            } else {\n\t                // center(width, height)\n\t                overlayWidth = parseFloat(width, 12)\n\t                overlayHeight = parseFloat(height, 12)\n\t            }\n\t\n\t            var $window = $(window)\n\t            var windowWidth = $window.width()\n\t            var windowHeight = $window.height()\n\t            var scrollLeft = $window.scrollLeft()\n\t            var scrollTop = $window.scrollTop()\n\t\n\t            return {\n\t                left: windowWidth / 2 - overlayWidth / 2 + scrollLeft,\n\t                top: windowHeight / 2 - overlayHeight / 2 + scrollTop\n\t            }\n\t        }\n\t\n\t        function start(overlay, offset, placement) {\n\t            var $overlay = $(overlay) // .show()\n\t            var visible = $overlay.css('display') !== 'none'\n\t            $overlay.show()\n\t            var width = $overlay.outerWidth()\n\t            var height = $overlay.outerHeight()\n\t\n\t            if (!visible) $overlay.hide()\n\t\n\t            var result = {\n\t                opacity: 0,\n\t                left: offset.left,\n\t                top: offset.top\n\t            }\n\t            switch (placement) {\n\t                case 'top': // 上方\n\t                    result.top = result.top - height * 0.5\n\t                    break\n\t                case 'bottom': // 下方\n\t                    result.top = result.top + height * 0.5\n\t                    break\n\t                case 'left': // 左侧\n\t                    result.left = result.left - width * 0.5\n\t                    break\n\t                case 'right': // 右侧\n\t                    /* Expected a 'break' statement before 'default'. */\n\t                    /* falls through */\n\t                default:\n\t                    result.left = result.left + width * 0.5\n\t                    break\n\t            }\n\t\n\t            return result\n\t        }\n\t\n\t        /* exported overlay */\n\t        function end(overlay, offset) {\n\t            if (!overlay) { /* TODO */ }\n\t            return {\n\t                opacity: 1,\n\t                left: offset.left,\n\t                top: offset.top\n\t            }\n\t        }\n\t\n\t        position.center = center\n\t        position.start = start\n\t        position.end = end\n\t\n\t        return position\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* global define */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t    return \"<div class=\\\"datepickerwrapper <%= placement %> <%= mode === 'multiple' ? 'multiple' : 'single' %>\\\">\\n\" +\n\t        \"    <!--  -->\\n\" +\n\t        \"    <% if (mode === 'signal') { %>\\n\" +\n\t        \"    <div bx-name=\\\"<%= calendar %>\\\" data-type=\\\"<%= type %>\\\" data-date=\\\"<%= dates[0] %>\\\" data-range=\\\"<%= _ranges %>\\\" data-excluded=\\\"<%= _excludeds %>\\\" data-unlimit=\\\"<%= unlimits[0] %>\\\" data-pages=\\\"<%= pages %>\\\" class=\\\"picker\\\"></div>\\n\" +\n\t        \"    <% } %>\\n\" +\n\t        \"    <!--  -->\\n\" +\n\t        \"    <% if (mode === 'multiple') { %>\\n\" +\n\t        \"    <% if( shortcuts ) { %>\\n\" +\n\t        \"    <div class=\\\"datepickerwrapper-shortcuts form-inline form-group\\\">\\n\" +\n\t        \"        <div class=\\\"datepickerwrapper-shortcuts-header\\\">\\n\" +\n\t        \"            <div class=\\\"datepickerwrapper-shortcuts-header-title\\\">快捷日期</div>\\n\" +\n\t        \"        </div>\\n\" +\n\t        \"        <div class=\\\"datepickerwrapper-shortcuts-body clearfix\\\">\\n\" +\n\t        \"            <% for (var title in shortcuts) { %>\\n\" +\n\t        \"                <span bx-click=\\\"_change('shortcut')\\\" data-value=\\\"<%= \\n\" +\n\t        \"                    _.map(shortcuts[title], function(item) {\\n\" +\n\t        \"                        return item.format('YYYY-MM-DD HH:mm:ss')\\n\" +\n\t        \"                    }).join(',')\\n\" +\n\t        \"                %>\\\" class=\\\"shortcut\\\"><%= title %></span>\\n\" +\n\t        \"            <% } %>\\n\" +\n\t        \"        </div>\\n\" +\n\t        \"    </div>\\n\" +\n\t        \"    <% } %>\\n\" +\n\t        \"    <div class=\\\"datepickerwrapper-inputs form-inline form-group\\\">\\n\" +\n\t        \"        <div class=\\\"datepickerwrapper-inputs-header\\\">\\n\" +\n\t        \"            <div class=\\\"datepickerwrapper-inputs-header-title\\\">日期范围</div>\\n\" +\n\t        \"        </div>\\n\" +\n\t        \"        <div class=\\\"datepickerwrapper-inputs-body <%= typeMap.time ? 'time' : '' %>\\\">\\n\" +\n\t        \"            <% for (var i = 0; i < dates.length; i++ ) { %>\\n\" +\n\t        \"                <input bx-click=\\\"_inputToggleDatePicker(<%= i %>)\\\" bx-change=\\\"_change('date', <%= i %>)\\\" value=\\\"<%= dates[i] %>\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n\" +\n\t        \"                <%= i < dates.length -1 ? '-' : '' %>\\n\" +\n\t        \"            <% } %>\\n\" +\n\t        \"        </div>\\n\" +\n\t        \"    </div>\\n\" +\n\t        \"    <div class=\\\"datepickerwrapper-pickers\\\">\\n\" +\n\t        \"        <% for (var i = 0; i < dates.length; i++ ) { %>\\n\" +\n\t        \"            <div bx-name=\\\"<%= calendar %>\\\" data-type=\\\"<%= type %>\\\" data-date=\\\"<%= dates[i] %>\\\" data-range=\\\"<%= _ranges %>\\\" data-excluded=\\\"<%= _excludeds %>\\\" data-unlimit=\\\"<%= unlimits[i] %>\\\" data-pages=\\\"<%= pages %>\\\" class=\\\"picker\\\"></div>\\n\" +\n\t        \"        <% } %>\\n\" +\n\t        \"    </div>\\n\" +\n\t        \"    <div class=\\\"datepickerwrapper-footer\\\">\\n\" +\n\t        \"        <button type=\\\"button\\\" class=\\\"btn btn-default submit\\\" bx-click=\\\"submit\\\">确认</button>\\n\" +\n\t        \"        <a href=\\\"javascript: void(0);\\\" bx-click=\\\"hide\\\" class=\\\"btn btn-default cancel ml5\\\">取消</a>\\n\" +\n\t        \"    </div>\\n\" +\n\t        \"    <% } %>\\n\" +\n\t        \"</div>\"\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// components/datepickerwrapper.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0ad76b35083cce443f0f","module.exports = require('./datepickerwrapper')\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/datepickerwrapper/index.js\n// module id = 0\n// module chunks = 0","/* global define, document */\n/*\n    http://thx.github.io/brix-site/readme.html?name=DatePickerWrapper\n        Deprecated\n    https://nuysoft.gitbooks.io/brix-book/content/brix-components/datepickerwrapper/\n        Temporary\n\n    # DatePickerWrapper\n\n    日期选择器。\n\n    ```html\n    <input bx-name=\"components/datepickerwrapper\" type=\"text\" class=\"form-control w100\">\n\n    <div bx-name=\"components/datepickerwrapper\" \n        data-dates=\"[ '2015-1-1', '2015-1-2']\" \n        class=\"form-control datepickerwrapper-trigger\">\n        <span data-index=\"0\">2015-1-1</span> 至 <span data-index=\"1\">2015-1-2</span>\n        <i class=\"brixfont pull-right ml5 down\">&#xe623;<!--&#xe623;--></i>\n        <i class=\"brixfont pull-right ml5 up\">&#xe62e;<!--&#xe62e;--></i>\n    </div>\n    ```\n\n    ## 配置\n\n    配置项    | 类型              | 默认值   | 说明\n    :-------- | :---------------- | :------- | :----------\n    shortcuts | boolean or object | `{}`     | 指示是否开启快捷日期和快捷日期的内容。\n    dates     | array             | `[]`     | 初始日期。\n    ranges    | array             | `[]`     | 设置可选日期的范围。\n    excludeds | array             | `[]`     | 设置禁选日期的范围。\n    align     | string            | `'left'` | 指定浮层的对齐方式，可选值有 `'left'`、`'right'`。\n\n    ## 方法\n\n    * .shortcutText( dates )\n        获取日期对应的快捷日期文本。\n    * .val( [ value ] )\n        获取或设置选中的日期。\n    * .range( [ value ] )\n        获取或设置可选日期的范围。\n    * .excluded( [ value ] )\n        获取或设置禁选日期的范围。\n    \n    ## 事件\n\n    事件类型                 | 说明\n    :----------------------- | :----------\n    change.datepickerwrapper | 当日期组件变化时被触发。事件监听函数接受 3 个参数：event、dates。\n\n */\ndefine(\n    [\n        'jquery', 'underscore', 'moment',\n        'brix/loader', 'components/base', 'brix/event',\n        'components/datepicker/ancient',\n        '../dialog/position/position.js',\n        './datepickerwrapper.tpl.js'\n    ],\n    function(\n        $, _, moment,\n        Loader, Brix, EventManager,\n        DatePicker,\n        position,\n        template\n    ) {\n        var CALENDAR = 'components/datepicker/ancient'\n        var RE_INPUT = /^input|textarea$/i\n        var NAMESPACE = '.datepickerwrapper'\n            // var NAMESPACE_ORIGINAL = '.original'\n        var DATE_PATTERN = DatePicker.PATTERNS.DATE\n        var TIME_PATTERN = DatePicker.PATTERNS.TIME\n        var DATE_TIME_PATTERN = DatePicker.PATTERNS.DATE_TIME\n        var SHORTCUTS = function() {\n            var now = moment()\n            var nowDate = now.get('date')\n            var shortcuts = {\n                '今天': [\n                    moment().startOf('day'),\n                    moment().startOf('day')\n                ],\n                '昨天': [\n                    moment().startOf('day').subtract(1, 'days'),\n                    moment().startOf('day').subtract(1, 'days')\n                ],\n                '过去 7 天': [\n                    moment().startOf('day').subtract(7, 'days'),\n                    moment().startOf('day').subtract(1, 'days')\n                ],\n                '本月': [\n                    moment().startOf('day').subtract(nowDate - 1, 'days'),\n                    moment().startOf('day')\n                ],\n                '上月': [\n                    moment().startOf('day').startOf('month').subtract(1, 'month'),\n                    moment().startOf('day').startOf('month').subtract(1, 'days')\n                ],\n                '最近 15 天': [\n                    moment().startOf('day').subtract(15, 'days'),\n                    moment().startOf('day').subtract(1, 'days')\n                ]\n            }\n            return shortcuts\n        }()\n        var STATE = {\n            PENDING: 'pending',\n            ACTIVE: 'active',\n            INACTIVE: 'inactive'\n        }\n\n        function DatePickerWrapper() {}\n\n        DatePickerWrapper.DATE_PATTERN = DATE_PATTERN\n        DatePickerWrapper.TIME_PATTERN = TIME_PATTERN\n        DatePickerWrapper.DATE_TIME_PATTERN = DATE_TIME_PATTERN\n        DatePickerWrapper.SHORTCUTS = SHORTCUTS\n\n        _.extend(DatePickerWrapper.prototype, Brix.prototype, {\n            options: {\n                calendar: CALENDAR,\n\n                placement: 'bottom', // top bottom left right\n                align: 'left', // left right top bottom\n                offset: {},\n\n                mode: 'signal', // signal multiple\n                shortcuts: undefined,\n                type: 'date', // all date year month time\n                dates: [],\n                ranges: [],\n                excludeds: [],\n                unlimits: [],\n                pages: 1\n            },\n            init: function() {\n                // 修正选项\n                this.options.typeMap = DatePicker.parseTypeAsMap(this.options.type)\n                this.options.__NEED_FIXED_RENDER = this.options.dates.length !== 0\n                if (this.options.dates.length > 1) this.options.mode = 'multiple'\n                if (!this.options.dates.length) this.options.dates = [moment().startOf('day').format(DATE_PATTERN)]\n\n                if (this.options.shortcuts === undefined) this.options.shortcuts = DatePickerWrapper.SHORTCUTS\n                if (this.options.shortcuts) {\n                    _.each(this.options.shortcuts, function(dates /*, title*/ ) {\n                        _.each(dates, function(date, index) {\n                            dates[index] = moment(\n                                date,\n                                _.isString(date) && DATE_TIME_PATTERN\n                            )\n                        })\n                    })\n                }\n\n                // ranges\n                if (this.options.range && this.options.range.length) this.options.ranges = this.options.range\n                this.options.ranges = _.flatten(this.options.ranges || this.options.range)\n                _.each(this.options.ranges, function(date, index, ranges) {\n                    if (date) ranges[index] = moment(\n                        date,\n                        _.isString(date) && DATE_TIME_PATTERN\n                    )\n                })\n                this.options._ranges = _.map(this.options.ranges, function(date) {\n                    if (date) return date.format(DATE_PATTERN)\n                })\n                this.options._ranges = \"['\" + this.options._ranges.join(\"','\") + \"']\"\n\n                // excludeds\n                if (this.options.excluded && this.options.excluded.length) this.options.excludeds = this.options.excluded\n                this.options.excludeds = _.flatten(this.options.excludeds || this.options.excluded)\n                _.each(this.options.excludeds, function(date, index, excludeds) {\n                    if (date) excludeds[index] = moment(\n                        date,\n                        _.isString(date) && DATE_TIME_PATTERN\n                    )\n                })\n                this.options._excludeds = _.map(this.options.excludeds, function(date) {\n                    if (date) return date.format(DATE_PATTERN)\n                })\n                this.options._excludeds = this.options._excludeds.length ?\n                    \"['\" + this.options._excludeds.join(\"','\") + \"']\" :\n                    \"[]\"\n\n\n                // if (this.options.unlimits.length) {\n                //     _.each(this.options.unlimits, function(date, index, unlimits) {\n                //         if (date) unlimits[index] = moment(date)\n                //     })\n                // }\n\n                // 支持自定义 HTML 模板 template\n                template = this.options.template || template\n\n                // 支持自定义 CSS 样式\n                if (this.options.css) window.require('css!' + this.options.css)\n            },\n            render: function() {\n                var that = this\n                this.$element = $(this.element)\n                this.$relatedElement = $(\n                    _.template(template)(this.options)\n                ).insertAfter(this.$element)\n\n                var defer = $.Deferred()\n                this['_' + this.options.mode](defer)\n\n                var type = 'click.datepickerwrapper_toggle_' + this.clientId\n                this.$element.off(type)\n                    .on(type, function(event) {\n                        that.toggle(event)\n                    })\n\n                var $manager = this.$manager = new EventManager('bx-')\n                $manager.delegate(this.$element, this)\n                $manager.delegate(this.$relatedElement, this)\n\n                this._autoHide()\n\n                return defer.promise()\n            },\n            val: function(value) {\n                var pickerComponents = Loader.query(CALENDAR, this.$relatedElement)\n                if (value) {\n                    _.each(pickerComponents, function(item, index) {\n                        item.val(\n                            _.isArray(value) ? value[index] : value\n                        )\n                    })\n\n                    this.submit() // #44 #50\n                    return this\n                }\n                return _.map(pickerComponents, function(item /*, index*/ ) {\n                    return item.val()\n                })\n            },\n            range: function(value) {\n                var pickerComponents = Loader.query(CALENDAR, this.$relatedElement)\n                if (value) {\n                    this.options.ranges = value = _.flatten(value)\n                    _.each(pickerComponents, function(item /*, index*/ ) {\n                        item.range(value)\n                    })\n                    return this\n                }\n                return this.options.ranges\n            },\n            excluded: function(value) {\n                var pickerComponents = Loader.query(CALENDAR, this.$relatedElement)\n                if (value) {\n                    this.options.excludeds = value = _.flatten(value)\n                    _.each(pickerComponents, function(item /*, index*/ ) {\n                        item.excluded(value)\n                    })\n                    return this\n                }\n                return this.options.excludeds\n            },\n            _signal: function(defer) {\n                var that = this\n                if (this.options.__NEED_FIXED_RENDER) this._fixedRender()\n                Loader.boot(true, this.$relatedElement, function( /*records*/ ) {\n                    var pickerComponent = Loader.query(CALENDAR, that.$relatedElement)[0]\n                        /* jshint unused:false */\n                    pickerComponent.on('change.datepicker unchange.datepicker', function(event, date, type) {\n                        // 过滤 timepicker 中的 input 触发的原生 change 事件\n                        if (!date) {\n                            event.preventDefault()\n                            event.stopPropagation()\n                            return\n                        }\n                        if (type !== undefined && type !== 'date' && type !== 'time') return\n                        if (that.options.typeMap.time && type === 'date') return\n\n                        that.hide()\n\n                        var validate = $.Event('change' + NAMESPACE)\n                        that.trigger(validate, [\n                            [date], type\n                        ])\n                        if (!validate.isDefaultPrevented()) {\n                            var value = that._unlimitFilter(date, that.options.unlimits[0])\n                            var items = $('[data-index]', that.$element)\n                            if (items.length) {\n                                _.each(items, function(item, index) {\n                                    var $item = $(item)\n                                    $item[\n                                        RE_INPUT.test(item.nodeName) ? 'val' : 'html'\n                                    ](value)\n                                })\n                            } else {\n                                that.$element[\n                                    RE_INPUT.test(that.element.nodeName) ? 'val' : 'html'\n                                ](value)\n                            }\n\n                            // 单个日期选择器：自动触发 input 元素的 change 事件。</h4>\n                            // 单个日期选择器：自动同步至隐藏域，并触发隐藏域的 change 事件。</h4>\n                            that.$element.triggerHandler('change') //  + NAMESPACE + NAMESPACE_ORIGINAL, date\n                            if (!RE_INPUT.test(that.element.nodeName)) {\n                                $('[data-hidden-index]', that.$element)\n                                    .val(value)\n                                    .triggerHandler('change')\n                            }\n                        }\n                    })\n                    pickerComponent.$element\n                        .on('click', '.timepicker .timepicker-footer .cancel', function() { // components/datepicker\n                            that.hide()\n                        })\n                        .on('click', '.hour-minute-second .hour-minute-second-footer .cancel', function() { // components/datepicker/ancient\n                            that.hide()\n                        })\n\n                    if (defer) defer.resolve()\n                })\n            },\n            _multiple: function(defer) {\n                var that = this\n                if (this.options.__NEED_FIXED_RENDER) this._fixedRender()\n                Loader.boot(true, this.$relatedElement, function() {\n                    var inputWrapper = $('.datepickerwrapper-inputs', that.$relatedElement)\n                    var inputs = $('input', inputWrapper)\n\n                    var pickerWrapper = $('.datepickerwrapper-pickers', that.$relatedElement)\n                    var pickers = $('.picker', pickerWrapper)\n\n                    var pickerComponents = Loader.query(CALENDAR, that.$relatedElement)\n\n                    var shortcutWrapper = $('.datepickerwrapper-shortcuts', that.$relatedElement)\n                    var shortcuts = $('.shortcut', shortcutWrapper)\n\n                    if (that.options.shortcuts) {\n                        _.each(_.values(that.options.shortcuts), function(dates, index) {\n                            var same = true\n                            _.each(dates, function(date, index) {\n                                var optionDate = moment(\n                                    that.options.dates[index],\n                                    _.isString(that.options.dates[index]) && DATE_TIME_PATTERN\n                                )\n                                if (!date.isSame(optionDate, 'days')) same = false\n                            })\n                            if (same) {\n                                shortcuts.eq(index).addClass('active')\n                                    .siblings().removeClass('active')\n                            }\n                        })\n                    }\n\n                    _.each(inputs, function(item, index) {\n                        $(item)\n                            .val(\n                                moment(\n                                    that.options.dates[index],\n                                    _.isString(that.options.dates[index]) && DATE_TIME_PATTERN\n                                )\n                                .format(DATE_PATTERN)\n                            ) // 初始值\n                    })\n\n                    _.each(pickerComponents, function(item, index) {\n                        /* jshint unused:false */\n                        item.val(that.options.dates[index])\n                            .on('change.datepicker unchange.datepicker ', function(event, date, type) {\n                                if(!date) return\n                                if (type !== undefined && type !== 'date' && type !== 'time') return\n                                if (that.options.typeMap.time && type === 'date') return\n\n                                var value = that._unlimitFilter(date, that.options.unlimits[index])\n                                inputs.eq(index).val(value)\n                                pickers.eq(index).hide()\n                            })\n                        var value = that._unlimitFilter(\n                            moment(\n                                that.options.dates[index],\n                                _.isString(that.options.dates[index]) && DATE_TIME_PATTERN\n                            ),\n                            that.options.unlimits[index]\n                        )\n                        inputs.eq(index).val(value)\n                        item.$element\n                            .on('click', '.timepicker .timepicker-footer .cancel', function() { // components/datepicker\n                                pickers.eq(index).hide()\n                            })\n                            .on('click', '.hour-minute-second .hour-minute-second-footer .cancel', function() { // components/datepicker/ancient\n                                pickers.eq(index).hide()\n                            })\n                    })\n\n                    if (defer) defer.resolve()\n                })\n            },\n            // 如果设置了初始值，则自动渲染到组件上。\n            // TODO 单选和多选的更新也调用 _fixedRender()。\n            _fixedRender: function() {\n                var that = this\n                var dates = that.options.dates\n                var items = $('[data-index]', that.$element)\n                if (items.length) {\n                    _.each(items, function(item, index) {\n                        var $item = $(item)\n                        index = +$item.attr('data-index')\n                        $item[RE_INPUT.test(item.nodeName) ? 'val' : 'html'](\n                            that._unlimitFilter(\n                                moment(dates[index], _.isString(dates[index]) && DATE_TIME_PATTERN),\n                                that.options.unlimits[index]\n                            )\n                        )\n                    })\n                } else {\n                    that.$element[RE_INPUT.test(that.element.nodeName) ? 'val' : 'html'](\n                        _.map(dates, function(item, index) {\n                            return that._unlimitFilter(\n                                moment(item, _.isString(item) && DATE_TIME_PATTERN),\n                                that.options.unlimits[index]\n                            )\n                        }).join(', ')\n                    )\n                }\n\n                items = $('[data-hidden-index]', that.$element)\n                _.each(items, function(item, index) {\n                    var $item = $(item)\n                    index = +$item.attr('data-hidden-index')\n                    var value = that._unlimitFilter(\n                        moment(dates[index], _.isString(dates[index]) && DATE_TIME_PATTERN),\n                        undefined\n                    )\n                    $item.val(value)\n                })\n            },\n            _unlimitFilter: function(date, unlimit) {\n                var typeMap = this.options.typeMap\n                var pattern = typeMap.date && typeMap.time && DATE_TIME_PATTERN ||\n                    typeMap.date && DATE_PATTERN ||\n                    typeMap.time && TIME_PATTERN\n                var text = date.format(pattern)\n                if (unlimit && text === moment(\n                        unlimit,\n                        _.isString(unlimit) && DATE_TIME_PATTERN\n                    ).format(pattern)) text = '不限'\n                return text\n            },\n            _inputToggleDatePicker: function(event, index, type) {\n                var inputWrapper = $('.datepickerwrapper-inputs', this.$relatedElement)\n                var pickerWrapper = $('.datepickerwrapper-pickers', this.$relatedElement)\n                var pickers = $('.picker', pickerWrapper)\n\n                var inputWrapperOffset = inputWrapper.offset()\n                pickerWrapper.offset({ // 修正日期组件容器的位置\n                    left: inputWrapperOffset.left,\n                    top: inputWrapperOffset.top + inputWrapper.outerHeight() + (\n                        parseInt(pickerWrapper.css('margin-top'), 10) ||\n                        0\n                    )\n                })\n\n                var $picker = pickers.eq(index)\n                var $target = $(event.target)\n                var targetOffset = $target.offset()\n                var pickerLeft\n                switch (this.options.align) {\n                    case 'left':\n                        pickerLeft = targetOffset.left\n                        break\n                    case 'right':\n                        pickerLeft = targetOffset.left - ($picker.outerWidth() - $target.outerWidth())\n                }\n                $picker[type ? type : 'toggle']()\n                    .offset({ // 修正单个日期组件的位置\n                        left: pickerLeft\n                    })\n                    .siblings().hide()\n            },\n            _hideDatePicker: function( /*event*/ ) {\n                var pickerWrapper = $('.datepickerwrapper-pickers', this.$relatedElement)\n                var pickers = $('.picker', pickerWrapper)\n                pickers.hide()\n            },\n            show: function( /*event*/ ) {\n                this.$element.addClass('datepickerwrapper-open')\n                this.$relatedElement.show()\n                    .offset(this._offset())\n                Loader.query(CALENDAR, this.$relatedElement).beautify()\n            },\n            hide: function( /*event*/ ) {\n                this.$element.removeClass('datepickerwrapper-open')\n                this._hideDatePicker()\n                this.$relatedElement.hide()\n            },\n            toggle: function( /*event*/ ) {\n                this.$element.toggleClass('datepickerwrapper-open')\n                this.$relatedElement.toggle()\n                    .offset(this._offset())\n                Loader.query(CALENDAR, this.$relatedElement).beautify()\n            },\n            _offset: function() {\n                var offset = position(this.$element, this.$relatedElement, this.options.placement, this.options.align)\n                var relatedMarginLeft = parseInt(this.$relatedElement.css('margin-left'), 10) || 0\n                var relatedMarginTop = parseInt(this.$relatedElement.css('margin-top'), 10) || 0\n                return {\n                    left: offset.left + relatedMarginLeft + (this.options.offset.left || 0),\n                    top: offset.top + relatedMarginTop + (this.options.offset.top || 0)\n                }\n            },\n            submit: function(event /* jshint unused:false */ , from) {\n                var that = this\n\n                switch (from) {\n                    case 'shortcut':\n                        break\n                    default:\n                        var shortcutWrapper = $('.datepickerwrapper-shortcuts', that.$relatedElement)\n                        var shortcuts = $('.shortcut', shortcutWrapper)\n                        shortcuts.removeClass('active')\n                }\n\n                var pickerComponents = Loader.query(CALENDAR, this.$relatedElement)\n                var dates = _.map(pickerComponents, function(item /*, index*/ ) {\n                    return item.val()\n                })\n\n                this.hide()\n\n                var validate = $.Event('change' + NAMESPACE)\n                this.trigger(validate, [dates])\n\n                if (!validate.isDefaultPrevented()) {\n                    var items = $('[data-index]', this.$element)\n                    if (items.length) {\n                        _.each(items, function(item, index) {\n                            var $item = $(item)\n                            index = +$item.attr('data-index')\n                            $item[\n                                RE_INPUT.test(item.nodeName) ? 'val' : 'html'\n                            ](\n                                that._unlimitFilter(dates[index], that.options.unlimits[index])\n                            )\n\n                        })\n                    } else {\n                        this.$element[\n                            RE_INPUT.test(this.element.nodeName) ? 'val' : 'html'\n                        ](\n                            _.map(dates, function(item, index) {\n                                return that._unlimitFilter(item, that.options.unlimits[index])\n                            }).join(', ')\n                        )\n                    }\n\n                    // 多个日期选择器：自动同步至隐藏域，并触发隐藏域的 change 事件。\n                    items = $('[data-hidden-index]', this.$element)\n                    _.each(items, function(item, index) {\n                        var $item = $(item)\n                        index = +$item.attr('data-hidden-index')\n                        var value = that._unlimitFilter(dates[index], undefined)\n                        $item.val(value).trigger('change')\n                    })\n                }\n            },\n            shortcutText: function(dates) {\n                var shortcutText\n                _.each(this.options.shortcuts, function(shortcutDates, key) {\n                    if (shortcutText) return\n\n                    var same = true\n                    _.each(shortcutDates, function(shortcutDate, index) {\n                        if (!shortcutDate.isSame(dates[index], 'days')) same = false\n                    })\n                    if (same) shortcutText = key\n                })\n                return shortcutText\n            },\n            _change: function(event, type, index) {\n                var that = this\n                var $target = $(event.target)\n                var pickerComponents = Loader.query(CALENDAR, this.$relatedElement)\n\n                switch (type) {\n                    case 'shortcut':\n                        var dates = $target.attr('data-value').split(',')\n                        _.each(dates, function(item, index) {\n                            that.options.dates[index] = item\n                            pickerComponents[index].val(item)\n                        })\n\n                        $target.addClass('active')\n                            .siblings().removeClass('active')\n\n                        this.submit(event, type)\n                        break\n                    case 'date':\n                        var date = moment($target.val())\n                        if (!date.isValid()) break\n                        pickerComponents[index].val(date)\n                        break\n                }\n            },\n            _autoHide: function() {\n                var that = this\n                var type = 'click' + NAMESPACE + '_' + this.clientId\n                this._state = STATE.INACTIVE\n                $(document.body).off(type)\n                    .on(type, function(event) {\n                        // 点击不存在节点\n                        if (!$.contains(document.body, event.target)) return\n                        if (\n                            event.target === that.element || // 点击组件节点\n                            $.contains(that.element, event.target) || // 点击组件子节点\n                            event.target === that.$relatedElement[0] || // 点击关联节点\n                            $.contains(that.$relatedElement[0], event.target) // 点击组件关联子节点\n                        ) {\n                            if (that._state === STATE.ACTIVE) return\n                            that.trigger(\n                                $.Event('active' + NAMESPACE, {\n                                    target: event.target\n                                })\n                            )\n                            that._state = STATE.ACTIVE\n                            return\n                        }\n\n                        if (that._state === STATE.INACTIVE) return\n                        var inactiveEvent = $.Event('inactive' + NAMESPACE, {\n                            target: event.target\n                        })\n                        that.trigger(inactiveEvent)\n                        that._state = STATE.INACTIVE\n\n                        if (inactiveEvent.isDefaultPrevented()) return\n\n                        that.hide()\n                    })\n                    .on(type, function(event) {\n                        var inputWrapper = $('.datepickerwrapper-inputs-body', that.$relatedElement)\n                        var pickerWrapper = $('.datepickerwrapper-pickers', that.$relatedElement)\n                        if (\n                            ( // 点击关联节点，点击组件关联子节点\n                                event.target === that.$relatedElement[0] ||\n                                $.contains(that.$relatedElement[0], event.target)\n                            ) &&\n                            ( // 但不在 inputs 和 pickers 之内\n                                (inputWrapper.length && pickerWrapper.length) &&\n                                !$.contains(inputWrapper[0], event.target) &&\n                                !$.contains(pickerWrapper[0], event.target)\n                            )\n                        ) {\n                            that._hideDatePicker()\n                        }\n                    })\n            },\n            destroy: function() {\n                var type = 'click.datepickerwrapper_toggle_' + this.clientId\n                this.$element.off(type)\n\n                this.$manager.undelegate(this.$element, this)\n                this.$manager.undelegate(this.$relatedElement, this)\n\n                this.$relatedElement.remove()\n\n                type = 'click' + NAMESPACE + '_' + this.clientId\n                $(document.body).off(type)\n            }\n        })\n\n        return DatePickerWrapper\n            // return Brix.extend({})\n    }\n)\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/datepickerwrapper/datepickerwrapper.js\n// module id = 1\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jquery\"\n// module id = 2\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"underscore\"\n// module id = 3\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"moment\"\n// module id = 4\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"brix/loader\"\n// module id = 5\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"components/base\"\n// module id = 6\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"brix/event\"\n// module id = 7\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"components/datepicker/ancient\"\n// module id = 8\n// module chunks = 0","/* global define, window */\ndefine(\n    [\n        'jquery'\n    ],\n    function(\n        $\n    ) {\n        var RE_TOP_OR_BOTTOM = /top|bottom/\n        var RE_LEFT_OR_RIGHT = /left|right/\n\n        /**\n         * 计算浮层位置的工具函数\n         * @param  {[type]} trigger    参照节点\n         * @param  {[type]} dialog     浮层节点\n         * @param  {[type]} placement  浮层相对于参照的位置\n         * @param  {[type]} align      浮层相对于参照的对齐方式\n         * @return {[type]}            { left: left, top: top }\n         */\n        function position(trigger, overlay, placement, align) {\n            var $trigger = $(trigger)\n\n            if (!$trigger.length) return center(overlay)\n\n            var triggerOffset = $trigger.offset()\n            var triggerLeft = triggerOffset.left\n            var triggerTop = triggerOffset.top\n            var triggerWidth = $trigger.outerWidth()\n            var triggerHeight = $trigger.outerHeight()\n\n            var $overlay = $(overlay) // .show()\n            var visible = $overlay.css('display') !== 'none'\n            $overlay.show()\n            var overlayWidth = $overlay.outerWidth()\n            var overlayHeight = $overlay.outerHeight()\n                // var overlayMarginLeft = parseInt($overlay.css('margin-left'), 10)\n                // var overlayMarginTop = parseInt($overlay.css('margin-top'), 10)\n\n            if (!visible) $overlay.hide()\n\n            var left, top\n            var leftDiff = triggerWidth / 2 - overlayWidth / 2\n            var topDiff = triggerHeight / 2 - overlayHeight / 2\n            switch (placement) {\n                case 'top': // 上方，水平局中\n                    left = triggerLeft + leftDiff\n                    top = triggerTop - overlayHeight\n                    break\n                case 'bottom': // 下方，水平局中\n                    left = triggerLeft + leftDiff\n                    top = triggerTop + triggerHeight\n                    break\n                case 'left': // 左侧，垂直局中\n                    left = triggerLeft - overlayWidth\n                    top = triggerTop + topDiff\n                    break\n                case 'right': // 右侧，垂直局中\n                    left = triggerLeft + triggerWidth\n                    top = triggerTop + topDiff\n                    break\n            }\n\n            // 浮层节点不能覆盖参照节点\n            if (\n                RE_TOP_OR_BOTTOM.test(placement) !== RE_TOP_OR_BOTTOM.test(align) &&\n                RE_LEFT_OR_RIGHT.test(placement) !== RE_LEFT_OR_RIGHT.test(align)\n            ) {\n                switch (align) {\n                    case 'top': // 上边框对齐\n                        top = triggerTop\n                        break\n                    case 'bottom': // 下边框对齐\n                        top = triggerTop + triggerHeight - overlayHeight\n                        break\n                    case 'left': // 做边框对齐\n                        left = triggerLeft\n                        break\n                    case 'right': // 右边框对齐\n                        left = triggerLeft + triggerWidth - overlayWidth\n                        break\n                }\n            }\n\n            return {\n                left: left, //  + overlayMarginLeft\n                top: top //  + overlayMarginTop\n            }\n        }\n\n        function center(width, height) {\n            var overlayWidth, overlayHeight\n\n            // center(overlay) {\n            if (!height) {\n                var $overlay = $(width) // .show()\n                var visible = $overlay.css('display') !== 'none'\n                $overlay.show()\n                overlayWidth = $overlay.outerWidth()\n                overlayHeight = $overlay.outerHeight()\n\n                if (!visible) $overlay.hide()\n\n            } else {\n                // center(width, height)\n                overlayWidth = parseFloat(width, 12)\n                overlayHeight = parseFloat(height, 12)\n            }\n\n            var $window = $(window)\n            var windowWidth = $window.width()\n            var windowHeight = $window.height()\n            var scrollLeft = $window.scrollLeft()\n            var scrollTop = $window.scrollTop()\n\n            return {\n                left: windowWidth / 2 - overlayWidth / 2 + scrollLeft,\n                top: windowHeight / 2 - overlayHeight / 2 + scrollTop\n            }\n        }\n\n        function start(overlay, offset, placement) {\n            var $overlay = $(overlay) // .show()\n            var visible = $overlay.css('display') !== 'none'\n            $overlay.show()\n            var width = $overlay.outerWidth()\n            var height = $overlay.outerHeight()\n\n            if (!visible) $overlay.hide()\n\n            var result = {\n                opacity: 0,\n                left: offset.left,\n                top: offset.top\n            }\n            switch (placement) {\n                case 'top': // 上方\n                    result.top = result.top - height * 0.5\n                    break\n                case 'bottom': // 下方\n                    result.top = result.top + height * 0.5\n                    break\n                case 'left': // 左侧\n                    result.left = result.left - width * 0.5\n                    break\n                case 'right': // 右侧\n                    /* Expected a 'break' statement before 'default'. */\n                    /* falls through */\n                default:\n                    result.left = result.left + width * 0.5\n                    break\n            }\n\n            return result\n        }\n\n        /* exported overlay */\n        function end(overlay, offset) {\n            if (!overlay) { /* TODO */ }\n            return {\n                opacity: 1,\n                left: offset.left,\n                top: offset.top\n            }\n        }\n\n        position.center = center\n        position.start = start\n        position.end = end\n\n        return position\n    }\n)\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/dialog/position/position.js\n// module id = 9\n// module chunks = 0","/* global define */\ndefine(function() {\n    return \"<div class=\\\"datepickerwrapper <%= placement %> <%= mode === 'multiple' ? 'multiple' : 'single' %>\\\">\\n\" +\n        \"    <!--  -->\\n\" +\n        \"    <% if (mode === 'signal') { %>\\n\" +\n        \"    <div bx-name=\\\"<%= calendar %>\\\" data-type=\\\"<%= type %>\\\" data-date=\\\"<%= dates[0] %>\\\" data-range=\\\"<%= _ranges %>\\\" data-excluded=\\\"<%= _excludeds %>\\\" data-unlimit=\\\"<%= unlimits[0] %>\\\" data-pages=\\\"<%= pages %>\\\" class=\\\"picker\\\"></div>\\n\" +\n        \"    <% } %>\\n\" +\n        \"    <!--  -->\\n\" +\n        \"    <% if (mode === 'multiple') { %>\\n\" +\n        \"    <% if( shortcuts ) { %>\\n\" +\n        \"    <div class=\\\"datepickerwrapper-shortcuts form-inline form-group\\\">\\n\" +\n        \"        <div class=\\\"datepickerwrapper-shortcuts-header\\\">\\n\" +\n        \"            <div class=\\\"datepickerwrapper-shortcuts-header-title\\\">快捷日期</div>\\n\" +\n        \"        </div>\\n\" +\n        \"        <div class=\\\"datepickerwrapper-shortcuts-body clearfix\\\">\\n\" +\n        \"            <% for (var title in shortcuts) { %>\\n\" +\n        \"                <span bx-click=\\\"_change('shortcut')\\\" data-value=\\\"<%= \\n\" +\n        \"                    _.map(shortcuts[title], function(item) {\\n\" +\n        \"                        return item.format('YYYY-MM-DD HH:mm:ss')\\n\" +\n        \"                    }).join(',')\\n\" +\n        \"                %>\\\" class=\\\"shortcut\\\"><%= title %></span>\\n\" +\n        \"            <% } %>\\n\" +\n        \"        </div>\\n\" +\n        \"    </div>\\n\" +\n        \"    <% } %>\\n\" +\n        \"    <div class=\\\"datepickerwrapper-inputs form-inline form-group\\\">\\n\" +\n        \"        <div class=\\\"datepickerwrapper-inputs-header\\\">\\n\" +\n        \"            <div class=\\\"datepickerwrapper-inputs-header-title\\\">日期范围</div>\\n\" +\n        \"        </div>\\n\" +\n        \"        <div class=\\\"datepickerwrapper-inputs-body <%= typeMap.time ? 'time' : '' %>\\\">\\n\" +\n        \"            <% for (var i = 0; i < dates.length; i++ ) { %>\\n\" +\n        \"                <input bx-click=\\\"_inputToggleDatePicker(<%= i %>)\\\" bx-change=\\\"_change('date', <%= i %>)\\\" value=\\\"<%= dates[i] %>\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n\" +\n        \"                <%= i < dates.length -1 ? '-' : '' %>\\n\" +\n        \"            <% } %>\\n\" +\n        \"        </div>\\n\" +\n        \"    </div>\\n\" +\n        \"    <div class=\\\"datepickerwrapper-pickers\\\">\\n\" +\n        \"        <% for (var i = 0; i < dates.length; i++ ) { %>\\n\" +\n        \"            <div bx-name=\\\"<%= calendar %>\\\" data-type=\\\"<%= type %>\\\" data-date=\\\"<%= dates[i] %>\\\" data-range=\\\"<%= _ranges %>\\\" data-excluded=\\\"<%= _excludeds %>\\\" data-unlimit=\\\"<%= unlimits[i] %>\\\" data-pages=\\\"<%= pages %>\\\" class=\\\"picker\\\"></div>\\n\" +\n        \"        <% } %>\\n\" +\n        \"    </div>\\n\" +\n        \"    <div class=\\\"datepickerwrapper-footer\\\">\\n\" +\n        \"        <button type=\\\"button\\\" class=\\\"btn btn-default submit\\\" bx-click=\\\"submit\\\">确认</button>\\n\" +\n        \"        <a href=\\\"javascript: void(0);\\\" bx-click=\\\"hide\\\" class=\\\"btn btn-default cancel ml5\\\">取消</a>\\n\" +\n        \"    </div>\\n\" +\n        \"    <% } %>\\n\" +\n        \"</div>\"\n})\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/datepickerwrapper/datepickerwrapper.tpl.js\n// module id = 10\n// module chunks = 0"],"sourceRoot":""}