{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///components/dialogview.js","webpack:///webpack/bootstrap 0fa314ee10031324e895","webpack:///./src/dialogview/index.js","webpack:///./src/dialogview/dialogview.js","webpack:///external \"underscore\"","webpack:///external \"brix/base\"","webpack:///external \"magix\"","webpack:///./src/dialog/dialog.js","webpack:///external \"jquery\"","webpack:///external \"components/base\"","webpack:///external \"brix/event\"","webpack:///./src/dialog/position/position.js","webpack:///./src/dialog/dialog.tpl.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_4__","__WEBPACK_EXTERNAL_MODULE_6__","__WEBPACK_EXTERNAL_MODULE_7__","__WEBPACK_EXTERNAL_MODULE_8__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","_","Brix","Magix","Dialog","DialogView","arguments","length","options","extend","init","render","DIALOG_VIEW_ID","DIALOG_VIEW_CONTAINER","prototype","content","view","name","dialog","destroy","fill","hostView","owner","mountVframe","vframe","VOM","get","Vframe","unmountVframe","open","close","DialogViewUtil","dialogOptions","viewName","viewOptions","manage","apply","undefined","$","EventManager","position","template","DIALOG_ALL_CACHE","push","TRANSITION_DURATION","EASING","NAMESPACE","DIALOG_OPENED_CACHE","STATE","PENDING","OPENED","CLOSED","placement","align","left","top","width","height","offset","className","closable","movable","modal","singleton","state","$element","element","$manager","css","isString","window","class","indexOf","delegate","without","type","clientId","document","body","off","undelegate","$relatedElement","remove","$backdropElement","html","appendTo","hide","removeClass","find","addClass","isObject","each","item","_zIndex","_topmost","_move","show","_offset","stop","start","animate","end","_autoHide","trigger","closeEvent","Event","isDefaultPrevented","that","isHasOpenedModal","filter","on","event","keyCode","when","target","topmost","max","zIndex","mousedown","mousemove","mouseup","$body","$dialogHeader","diff","pageX","pageY","pop","closeAll","overlay","$trigger","center","triggerOffset","triggerLeft","triggerTop","triggerWidth","outerWidth","triggerHeight","outerHeight","$overlay","visible","overlayWidth","overlayHeight","leftDiff","topDiff","RE_TOP_OR_BOTTOM","test","RE_LEFT_OR_RIGHT","parseFloat","$window","windowWidth","windowHeight","scrollLeft","scrollTop","result","opacity"],"mappings":"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","file":"components/dialogview.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"underscore\"), require(\"brix/base\"), require(\"magix\"), require(\"jquery\"), require(\"components/base\"), require(\"brix/event\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"underscore\", \"brix/base\", \"magix\", \"jquery\", \"components/base\", \"brix/event\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"components/dialogview\"] = factory(require(\"underscore\"), require(\"brix/base\"), require(\"magix\"), require(\"jquery\"), require(\"components/base\"), require(\"brix/event\"));\n\telse\n\t\troot[\"components/dialogview\"] = factory(root[\"underscore\"], root[\"brix/base\"], root[\"magix\"], root[\"jquery\"], root[\"components/base\"], root[\"brix/event\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"underscore\"), require(\"brix/base\"), require(\"magix\"), require(\"jquery\"), require(\"components/base\"), require(\"brix/event\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"underscore\", \"brix/base\", \"magix\", \"jquery\", \"components/base\", \"brix/event\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"components/dialogview\"] = factory(require(\"underscore\"), require(\"brix/base\"), require(\"magix\"), require(\"jquery\"), require(\"components/base\"), require(\"brix/event\"));\n\telse\n\t\troot[\"components/dialogview\"] = factory(root[\"underscore\"], root[\"brix/base\"], root[\"magix\"], root[\"jquery\"], root[\"components/base\"], root[\"brix/event\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1)\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */\n\t/*\n\t    # DialogView\n\t    \n\t    Magix View 对话框。\n\t\n\t    ```js\n\t    var DialogView = require('components/dialogview')\n\t    var dialogOptions = {}\n\t    var viewName = ''\n\t    var viewOptions = {}\n\t    DialogView.open(dialogOptions, viewName, viewOptions)\n\t    DialogView.close()\n\t    ```\n\t */\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t        __webpack_require__(2),\n\t        __webpack_require__(3), __webpack_require__(4),\n\t        __webpack_require__(5)\n\t    ], __WEBPACK_AMD_DEFINE_RESULT__ = function(\n\t        _,\n\t        Brix, Magix,\n\t        Dialog\n\t    ) {\n\t        /*\n\t            var DialogView = require('components/dialogview')\n\t            var dialogOptions = {\n\t                left: 100,\n\t                top: 100\n\t            }\n\t            var viewName = 'todo'\n\t            var viewOptions = {}\n\t            var dialog = new DialogView(dialogOptions, viewName, viewOptions)\n\t            dialog.open()\n\t         */\n\t\n\t        var DIALOG_VIEW_ID = 'vf-dialog';\n\t        var DIALOG_VIEW_CONTAINER = '<div class=\"dialog-body\"><div id=\"' + DIALOG_VIEW_ID + '\" mx-vframe=\"true\"></div></div>'\n\t\n\t        function DialogView() {\n\t            // 支持构造函数\n\t            if (arguments.length > 1) {\n\t                this.options = _.extend({}, this.options, arguments[0])\n\t                this.options['view-name'] = arguments[1]\n\t                this.options['view-options'] = arguments[2]\n\t                this.init()\n\t                this.render()\n\t            }\n\t        }\n\t\n\t        _.extend(DialogView.prototype, Brix.prototype, {\n\t            options: {},\n\t            init: function() {\n\t                if (!this.options.content) this.options.content = DIALOG_VIEW_CONTAINER\n\t                if (!this.options.view) {\n\t                    this.options.view = {\n\t                        name: this.options['view-name'],\n\t                        options: this.options['view-options']\n\t                    }\n\t                }\n\t                if (this.dialog) this.dialog.destroy()\n\t                this.dialog = new Dialog(this.options)\n\t            },\n\t            render: function() {},\n\t            fill: function() {\n\t                if (this.options.hostView) {\n\t                    this.options.hostView.owner\n\t                        .mountVframe(\n\t                            DIALOG_VIEW_ID,\n\t                            this.options.view.name,\n\t                            this.options.view.options\n\t                        )\n\t                    return\n\t                }\n\t\n\t                var vframe = Magix.VOM.get(DIALOG_VIEW_ID) || new Magix.Vframe(DIALOG_VIEW_ID)\n\t                vframe.unmountVframe(DIALOG_VIEW_ID)\n\t                vframe.mountVframe(DIALOG_VIEW_ID, this.options.view.name, this.options.view.options)\n\t            },\n\t            open: function() {\n\t                this.dialog.open()\n\t                this.fill()\n\t            },\n\t            close: function() {\n\t                this.dialog.close()\n\t                var vframe = Magix.VOM.get(DIALOG_VIEW_ID)\n\t                if (vframe) {\n\t                    vframe.unmountVframe(DIALOG_VIEW_ID)\n\t                }\n\t            },\n\t            destroy: function() {\n\t                this.close()\n\t                this.dialog.destroy()\n\t            }\n\t        })\n\t\n\t        var DialogViewUtil = {\n\t            open: function(dialogOptions /* hostView */ , viewName, viewOptions) {\n\t                if (this.dialog) this.dialog.destroy()\n\t                this.dialog = new DialogView(dialogOptions, viewName, viewOptions)\n\t                this.dialog.open()\n\t                if (dialogOptions.hostView) {\n\t                    dialogOptions.hostView.manage(this.dialog)\n\t                }\n\t            },\n\t            close: function() {\n\t                if (this.dialog) this.dialog.destroy()\n\t            }\n\t        }\n\t\n\t        return DialogViewUtil\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */\n\t/*\n\t    http://thx.github.io/brix-site/readme.html?name=Dialog\n\t        Deprecated\n\t    https://nuysoft.gitbooks.io/brix-book/content/brix-components/dialog/\n\t        Temporary\n\t\n\t    # Dialog\n\t\n\t    对话框。\n\t\n\t    ```js\n\t    new Dialog( options )\n\t    ```\n\t\n\t    ## 配置\n\t\n\t    配置项    | 类型    | 默认值    | 说明\n\t    :-------- | :------ | :-------- | :----------\n\t    placement | string  | `'right'` | 指定浮层的位置，可选值有 `'top'`、`'bottom'`、`'left'`、`'right'`。\n\t    align     | string  | `''`      | 指定浮层的对齐方式，可选值有 `''`、`'top'`、`'bottom'`、`'left'`、`'right'`。\n\t    left      | int     | -         | 指定浮层的距左坐标。\n\t    top       | int     | -         | 指定浮层的距上坐标。\n\t    width     | int     | `'auto'`  | 指定浮层的宽度。\n\t    height    | string  | `''`      | 指定浮层的高度。\n\t    offset    | object  | `{}`      | 指定浮层的偏移，可以含有两个属性：`left`、`top`。\n\t    content   | string  | `''`      | 指定浮层的内容。\n\t    closable  | boolean | `true`    | 指定浮层是否可关闭。\n\t    modal     | boolean | `false`   | 指定浮层是否模态对话框。\n\t    singleton | boolean | `true`    | 指定浮层是否单例模式。\n\t\n\t    ## 方法\n\t\n\t    * .open()\n\t        打开窗口。\n\t    * .close()\n\t        关闭窗口。\n\t\n\t    ## 事件\n\t\n\t    事件类型     | 说明\n\t    :----------- | :----------\n\t    open.dialog  | 当窗口打开时被触发。\n\t    close.dialog | 当窗口关闭时被触发。\n\t */\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t        __webpack_require__(6), __webpack_require__(2),\n\t        __webpack_require__(7), __webpack_require__(8),\n\t        __webpack_require__(9),\n\t        __webpack_require__(10)\n\t    ], __WEBPACK_AMD_DEFINE_RESULT__ = function(\n\t        $, _,\n\t        Brix, EventManager,\n\t        position,\n\t        template\n\t    ) {\n\t        var TRANSITION_DURATION = 150\n\t        var EASING = 'swing'\n\t        var NAMESPACE = '.dialog'\n\t        var DIALOG_OPENED_CACHE = []\n\t        var DIALOG_ALL_CACHE = []\n\t        var STATE = {\n\t            PENDING: 'pending',\n\t            OPENED: 'opened',\n\t            CLOSED: 'closed'\n\t        }\n\t\n\t        function Dialog() {\n\t            // 支持构造函数\n\t            if (arguments.length) {\n\t                this.options = _.extend({}, this.options, arguments[0])\n\t                this.init()\n\t                this.render()\n\t            }\n\t\n\t            // 压入缓存 DIALOG_ALL_CACHE\n\t            DIALOG_ALL_CACHE.push(this)\n\t        }\n\t\n\t        _.extend(Dialog.prototype, Brix.prototype, {\n\t            options: {\n\t                placement: 'right', // top bottom left right\n\t                align: 'top', // left right top bottom\n\t\n\t                left: undefined,\n\t                top: undefined,\n\t                width: 'auto',\n\t                height: 'auto',\n\t                offset: {\n\t                    left: 0,\n\t                    top: 0\n\t                },\n\t\n\t                // { data-class | data-className | className: ''}\n\t                className: '',\n\t\n\t                content: '',\n\t\n\t                closable: true, // 是否可关闭\n\t                movable: false, // 是否可移动\n\t                modal: false, // 是否模态对话框 http://baike.baidu.com/view/3148035.htm\n\t                singleton: true // 是否单例模式\n\t            },\n\t            state: STATE.PENDING, // pending opened closed\n\t            init: function() {\n\t                this.$element = $(this.element || this.options.element)\n\t                this.$manager = new EventManager('bx-')\n\t\n\t                // 支持自定义外联 CSS 样式，data-css=\"dialog.css\"\n\t                if (this.options.css && _.isString(this.options.css)) window.require(['css!' + this.options.css])\n\t\n\t                // data-class => data-className\n\t                if (this.options.class) this.options.className = this.options.class\n\t\n\t                // 为文本内容自动加上样式 dialog-body\n\t                if (('' + this.options.content).indexOf('<') === -1) {\n\t                    this.options.content =\n\t                        '<div class=\"dialog-body\">' +\n\t                        this.options.content +\n\t                        '<div>'\n\t                }\n\t            },\n\t            render: function() {\n\t                this.fill()\n\t                this.$manager.delegate(this.$element, this)\n\t            },\n\t            destroy: function() {\n\t                // 先关闭，把当前实例从缓存 DIALOG_OPENED_CACHE 中移除\n\t                this.close()\n\t\n\t                // 从缓存 DIALOG_ALL_CACHE 中移除\n\t                DIALOG_ALL_CACHE = _.without(DIALOG_ALL_CACHE, this)\n\t\n\t                var type = 'keyup.dialog_autohide_' + this.clientId\n\t                if (!DIALOG_OPENED_CACHE.length) $(document.body).off(type) // 只有当窗口全部关闭后，才能移除\n\t\n\t                this.$manager.undelegate(this.$element)\n\t                this.$manager.undelegate(this.$relatedElement)\n\t\n\t                this.$relatedElement.remove()\n\t                this.$relatedElement = null\n\t                this.$backdropElement = null\n\t            },\n\t            fill: function() {\n\t                var html = _.template(template)(this.options)\n\t\n\t                // 初始化节点\n\t                if (!this.$relatedElement) {\n\t                    this.$relatedElement = $(html).appendTo(document.body).hide()\n\t                }\n\t\n\t                // 单例模式 data-singleton\n\t                // 不共用浮层 div.dialog.dialog-singleton，但是会关闭其他单例浮层\n\t                if (!this.options.singleton) {\n\t                    this.$relatedElement.removeClass('dialog-singleton')\n\t                }\n\t\n\t                // data-content\n\t                this.$relatedElement\n\t                    .find('.dialog-content')\n\t                    .html(this.options.content)\n\t\n\t                // 宽高 width height\n\t                this.$relatedElement.css({\n\t                    width: this.options.width,\n\t                    height: this.options.height\n\t                })\n\t\n\t                // 总是初始化遮罩层\n\t                this.$backdropElement = $('.dialog-backdrop')\n\t                if (!this.$backdropElement.length) {\n\t                    this.$backdropElement = $('<div class=\"dialog-backdrop\"></div>').hide()\n\t                        .appendTo(document.body)\n\t                }\n\t\n\t                // 是否模态对话框 modal\n\t                if (this.options.modal) {}\n\t\n\t                // 类样式 data-className\n\t                if (this.options.className) {\n\t                    this.$relatedElement.addClass(this.options.className)\n\t                }\n\t\n\t                // 内联 CSS 样式，data-css=\"{ position: 'fixed' }\"\n\t                if (this.options.css && _.isObject(this.options.css)) {\n\t                    this.$relatedElement.css(this.options.css)\n\t                }\n\t\n\t                this.$manager.delegate(this.$relatedElement, this)\n\t                return this\n\t            },\n\t            open: function() {\n\t                // 触发浮层的节点被修改\n\t                if (!this.element &&\n\t                    this.options.element &&\n\t                    (this.options.element !== this.$element[0])\n\t                ) this.$element = $(this.options.element)\n\t\n\t                // 单例模式：先关闭其他所有单例模式的浮层\n\t                if (this.options.singleton) {\n\t                    _.each(DIALOG_OPENED_CACHE, function(item /*, index*/ ) {\n\t                        if (item.options.singleton) item.close()\n\t                    })\n\t                }\n\t\n\t                this.fill()\n\t                this._zIndex('open')\n\t                this._topmost()\n\t                this._move()\n\t\n\t                // 模态模式：用户必须先操作模态对话框\n\t                if (this.options.modal) {\n\t                    $(document.body).addClass('modal-open')\n\t                    this.$backdropElement\n\t                        .show()\n\t                        .css(\n\t                            'z-index', +this.$relatedElement.css('z-index') - 1\n\t                        )\n\t                }\n\t\n\t                // 从右侧移入\n\t                var offset = this._offset()\n\t                this.$relatedElement.show()\n\t                    .stop()\n\t                    .css(\n\t                        position.start(this.$relatedElement, offset /*, this.options.placement*/ )\n\t                    )\n\t                    .animate(\n\t                        position.end(this.$relatedElement, offset),\n\t                        TRANSITION_DURATION,\n\t                        EASING\n\t                    )\n\t\n\t                this._autoHide()\n\t\n\t                // 记录打开的浮层\n\t                DIALOG_OPENED_CACHE.push(this)\n\t\n\t                this.trigger('open' + NAMESPACE)\n\t\n\t                this.state = STATE.OPENED\n\t\n\t                return this\n\t            },\n\t            close: function() {\n\t                if (!this.$relatedElement || !this.$relatedElement.length) return this\n\t\n\t                if (this.state === STATE.CLOSED) return this\n\t\n\t                var closeEvent = $.Event('close' + NAMESPACE)\n\t                this.trigger(closeEvent)\n\t                if (closeEvent.isDefaultPrevented()) return\n\t\n\t                var that = this\n\t                var offset = this._offset()\n\t                this.$relatedElement\n\t                    .stop()\n\t                    .animate(\n\t                        position.start(this.$relatedElement, offset),\n\t                        TRANSITION_DURATION,\n\t                        EASING,\n\t                        function() {\n\t                            if (that.$relatedElement) that.$relatedElement.hide()\n\t                        }\n\t                    )\n\t\n\t                // 从缓存中移除当前实例，包括多次打开的实例\n\t                DIALOG_OPENED_CACHE = _.without(DIALOG_OPENED_CACHE, this)\n\t\n\t                if (this.options.modal) {\n\t                    // 是否还有模态浮层：只有当前全部模态浮层都关闭后，才能关闭 .dialog-backdrop\n\t                    var isHasOpenedModal = _.filter(DIALOG_OPENED_CACHE, function(item /*, index*/ ) {\n\t                        if (item.options.modal) return item\n\t                    }).length\n\t                    if (!isHasOpenedModal) {\n\t                        $(document.body).removeClass('modal-open')\n\t                        this.$backdropElement.hide()\n\t                    }\n\t                }\n\t\n\t                this._zIndex('close')\n\t\n\t                this.state = STATE.CLOSED\n\t\n\t                return this\n\t            },\n\t            _offset: function() {\n\t                var offset = this.options.left !== undefined && this.options.top !== undefined ? {\n\t                    left: this.options.left,\n\t                    top: this.options.top\n\t                } : position(this.$element, this.$relatedElement, this.options.placement, this.options.align)\n\t                offset = {\n\t                    left: offset.left + (this.options.offset.left || 0),\n\t                    top: offset.top + (this.options.offset.top || 0)\n\t                }\n\t                return offset\n\t            },\n\t            _autoHide: function() {\n\t                var type = 'keyup.dialog_autohide_' + this.clientId\n\t                $(document.body).off(type)\n\t                    .on(type, function(event) {\n\t                        if (event.keyCode === 27) {\n\t                            // 优先关闭最后打开的、可关闭的浮层\n\t                            // X DIALOG_OPENED_CACHE.pop() 不在这里移除，而是在 close() 中移除。\n\t                            var dialog = DIALOG_OPENED_CACHE[DIALOG_OPENED_CACHE.length - 1]\n\t                            if (dialog && dialog.options.closable) dialog.close()\n\t                        }\n\t                    })\n\t\n\t                return this\n\t            },\n\t            // 修正 z-index\n\t            _zIndex: function(when) {\n\t                if (!DIALOG_OPENED_CACHE.length) return\n\t\n\t                // 最顶层的浮层\n\t                var topmost = _.max(DIALOG_OPENED_CACHE, function(item /*, index*/ ) {\n\t                    return +item.$relatedElement.css('z-index')\n\t                })\n\t                var zIndex = +topmost.$relatedElement.css('z-index')\n\t                var target\n\t\n\t                switch (when) {\n\t                    case 'open':\n\t                        target = this\n\t                        if (target === topmost) return\n\t                        break\n\t                    case 'close':\n\t                        // 最后弹出的浮层\n\t                        target = DIALOG_OPENED_CACHE[DIALOG_OPENED_CACHE.length - 1]\n\t                        break\n\t                }\n\t\n\t                if (target.$backdropElement) {\n\t                    target.$backdropElement.css('z-index', zIndex + 1)\n\t                }\n\t                target.$relatedElement.css('z-index', zIndex + 2)\n\t\n\t                return this\n\t            },\n\t            _topmost: function() {\n\t                var that = this\n\t                var type = 'mousedown.dialog_topmost_' + this.clientId\n\t                this.$relatedElement.off(type)\n\t                    .on(type, function( /*event*/ ) {\n\t                        that._zIndex('open')\n\t                        DIALOG_OPENED_CACHE.push(that)\n\t                    })\n\t\n\t                return this\n\t            },\n\t            _move: function() {\n\t                if (!this.options.movable) return this\n\t\n\t                var that = this\n\t                var mousedown = 'mousedown.dialog_move_' + this.clientId\n\t                var mousemove = 'mousemove.dialog_move_' + this.clientId\n\t                var mouseup = 'mouseup.dialog_move_' + this.clientId\n\t                var $body = $(document.body)\n\t                var $dialogHeader = this.$relatedElement.find('.dialog-header')\n\t\n\t                $dialogHeader.addClass('cursor-move')\n\t\n\t                $dialogHeader.off(mousedown)\n\t                    .on(mousedown, function(event) {\n\t                        var offset = $dialogHeader.offset()\n\t                        var diff = {\n\t                            left: event.pageX - offset.left,\n\t                            top: event.pageY - offset.top\n\t                        }\n\t                        $body.on(mousemove, function(event) {\n\t                            that.$relatedElement.offset({\n\t                                left: event.pageX - diff.left,\n\t                                top: event.pageY - diff.top\n\t                            })\n\t                            return false\n\t                        })\n\t                        $body.on(mouseup, function( /*event*/ ) {\n\t                            $body.off(mousemove)\n\t                            $body.off(mouseup)\n\t                            return false\n\t                        })\n\t                    })\n\t\n\t                return this\n\t            }\n\t        })\n\t\n\t        // 便捷方法。新建一个浮层。\n\t        Dialog.open = function(options) {\n\t            return (new Dialog(options)).open()\n\t        }\n\t\n\t        // 便捷方法。关闭最近打开的浮层。\n\t        Dialog.close = function() {\n\t            var dialog = DIALOG_OPENED_CACHE.pop()\n\t            if (dialog) dialog.close()\n\t        }\n\t\n\t        // 便捷方法。关闭所有打开的浮层\n\t        Dialog.closeAll = function() {\n\t            _.each(DIALOG_OPENED_CACHE, function(item /*, index*/ ) {\n\t                item.close()\n\t            })\n\t            return this\n\t        }\n\t\n\t        // 便捷方法。销毁所有浮层。\n\t        Dialog.destroy = function() {\n\t            _.each(DIALOG_ALL_CACHE, function(item /*, index*/ ) {\n\t                item.destroy()\n\t            })\n\t            return this\n\t        }\n\t\n\t        return Dialog\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\t\n\t/*\n\t    http://jqueryui.com/dialog\n\t\n\t    var Dialog = require('components/dialog')\n\t    var content = '\\\n\t        <div class=\"dialog-header\">\\\n\t            <h4 class=\"dialog-title\">abc</h4>\\\n\t        </div>\\\n\t    '\n\t    var dialog = new Dialog({\n\t        content: content,\n\t        modal: true,\n\t        left: 100,\n\t        top: 100\n\t    })\n\t    dialog.on('open.dialog',function(){\n\t        debugger\n\t    })\n\t    dialog.open()\n\t\n\t    // 多个浮层\n\t    var Dialog = require('components/dialog')\n\t    var _ = require('underscore')\n\t    var options = {\n\t        modal: true,\n\t        singleton: false,\n\t        top: 400\n\t    }\n\t\n\t    new Dialog(_.extend({\n\t        content: Math.random(),\n\t        left: 100\n\t    }, options)).open()\n\t\n\t    new Dialog(_.extend({\n\t        content: Math.random(),\n\t        left: 200\n\t    }, options)).open()\n\t\n\t    new Dialog(_.extend({\n\t        content: Math.random(),\n\t        left: 300\n\t    }, options)).open()\n\t */\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define, window */\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t        __webpack_require__(6)\n\t    ], __WEBPACK_AMD_DEFINE_RESULT__ = function(\n\t        $\n\t    ) {\n\t        var RE_TOP_OR_BOTTOM = /top|bottom/\n\t        var RE_LEFT_OR_RIGHT = /left|right/\n\t\n\t        /**\n\t         * 计算浮层位置的工具函数\n\t         * @param  {[type]} trigger    参照节点\n\t         * @param  {[type]} dialog     浮层节点\n\t         * @param  {[type]} placement  浮层相对于参照的位置\n\t         * @param  {[type]} align      浮层相对于参照的对齐方式\n\t         * @return {[type]}            { left: left, top: top }\n\t         */\n\t        function position(trigger, overlay, placement, align) {\n\t            var $trigger = $(trigger)\n\t\n\t            if (!$trigger.length) return center(overlay)\n\t\n\t            var triggerOffset = $trigger.offset()\n\t            var triggerLeft = triggerOffset.left\n\t            var triggerTop = triggerOffset.top\n\t            var triggerWidth = $trigger.outerWidth()\n\t            var triggerHeight = $trigger.outerHeight()\n\t\n\t            var $overlay = $(overlay) // .show()\n\t            var visible = $overlay.css('display') !== 'none'\n\t            $overlay.show()\n\t            var overlayWidth = $overlay.outerWidth()\n\t            var overlayHeight = $overlay.outerHeight()\n\t                // var overlayMarginLeft = parseInt($overlay.css('margin-left'), 10)\n\t                // var overlayMarginTop = parseInt($overlay.css('margin-top'), 10)\n\t\n\t            if (!visible) $overlay.hide()\n\t\n\t            var left, top\n\t            var leftDiff = triggerWidth / 2 - overlayWidth / 2\n\t            var topDiff = triggerHeight / 2 - overlayHeight / 2\n\t            switch (placement) {\n\t                case 'top': // 上方，水平局中\n\t                    left = triggerLeft + leftDiff\n\t                    top = triggerTop - overlayHeight\n\t                    break\n\t                case 'bottom': // 下方，水平局中\n\t                    left = triggerLeft + leftDiff\n\t                    top = triggerTop + triggerHeight\n\t                    break\n\t                case 'left': // 左侧，垂直局中\n\t                    left = triggerLeft - overlayWidth\n\t                    top = triggerTop + topDiff\n\t                    break\n\t                case 'right': // 右侧，垂直局中\n\t                    left = triggerLeft + triggerWidth\n\t                    top = triggerTop + topDiff\n\t                    break\n\t            }\n\t\n\t            // 浮层节点不能覆盖参照节点\n\t            if (\n\t                RE_TOP_OR_BOTTOM.test(placement) !== RE_TOP_OR_BOTTOM.test(align) &&\n\t                RE_LEFT_OR_RIGHT.test(placement) !== RE_LEFT_OR_RIGHT.test(align)\n\t            ) {\n\t                switch (align) {\n\t                    case 'top': // 上边框对齐\n\t                        top = triggerTop\n\t                        break\n\t                    case 'bottom': // 下边框对齐\n\t                        top = triggerTop + triggerHeight - overlayHeight\n\t                        break\n\t                    case 'left': // 做边框对齐\n\t                        left = triggerLeft\n\t                        break\n\t                    case 'right': // 右边框对齐\n\t                        left = triggerLeft + triggerWidth - overlayWidth\n\t                        break\n\t                }\n\t            }\n\t\n\t            return {\n\t                left: left, //  + overlayMarginLeft\n\t                top: top //  + overlayMarginTop\n\t            }\n\t        }\n\t\n\t        function center(width, height) {\n\t            var overlayWidth, overlayHeight\n\t\n\t            // center(overlay) {\n\t            if (!height) {\n\t                var $overlay = $(width) // .show()\n\t                var visible = $overlay.css('display') !== 'none'\n\t                $overlay.show()\n\t                overlayWidth = $overlay.outerWidth()\n\t                overlayHeight = $overlay.outerHeight()\n\t\n\t                if (!visible) $overlay.hide()\n\t\n\t            } else {\n\t                // center(width, height)\n\t                overlayWidth = parseFloat(width, 12)\n\t                overlayHeight = parseFloat(height, 12)\n\t            }\n\t\n\t            var $window = $(window)\n\t            var windowWidth = $window.width()\n\t            var windowHeight = $window.height()\n\t            var scrollLeft = $window.scrollLeft()\n\t            var scrollTop = $window.scrollTop()\n\t\n\t            return {\n\t                left: windowWidth / 2 - overlayWidth / 2 + scrollLeft,\n\t                top: windowHeight / 2 - overlayHeight / 2 + scrollTop\n\t            }\n\t        }\n\t\n\t        function start(overlay, offset, placement) {\n\t            var $overlay = $(overlay) // .show()\n\t            var visible = $overlay.css('display') !== 'none'\n\t            $overlay.show()\n\t            var width = $overlay.outerWidth()\n\t            var height = $overlay.outerHeight()\n\t\n\t            if (!visible) $overlay.hide()\n\t\n\t            var result = {\n\t                opacity: 0,\n\t                left: offset.left,\n\t                top: offset.top\n\t            }\n\t            switch (placement) {\n\t                case 'top': // 上方\n\t                    result.top = result.top - height * 0.5\n\t                    break\n\t                case 'bottom': // 下方\n\t                    result.top = result.top + height * 0.5\n\t                    break\n\t                case 'left': // 左侧\n\t                    result.left = result.left - width * 0.5\n\t                    break\n\t                case 'right': // 右侧\n\t                    /* Expected a 'break' statement before 'default'. */\n\t                    /* falls through */\n\t                default:\n\t                    result.left = result.left + width * 0.5\n\t                    break\n\t            }\n\t\n\t            return result\n\t        }\n\t\n\t        /* exported overlay */\n\t        function end(overlay, offset) {\n\t            if (!overlay) { /* TODO */ }\n\t            return {\n\t                opacity: 1,\n\t                left: offset.left,\n\t                top: offset.top\n\t            }\n\t        }\n\t\n\t        position.center = center\n\t        position.start = start\n\t        position.end = end\n\t\n\t        return position\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* global define */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t    return \"<div class=\\\"dialog dialog-singleton dialog-<%= placement %>\\\">\\n\" +\n\t        \"    <button bx-click=\\\"close\\\" type=\\\"button\\\" class=\\\"dialog-close <%= closable ? '' : 'hide' %>\\\"><span class=\\\"brixfont\\\">&#xe62d;</span><!-- &times; --></button>\\n\" +\n\t        \"    <div class=\\\"dialog-content\\\">\\n\" +\n\t        \"        <%= content %>\\n\" +\n\t        \"        <!-- \\n\" +\n\t        \"        <div class=\\\"dialog-header\\\">\\n\" +\n\t        \"            <h4 class=\\\"dialog-title\\\">Title</h4>\\n\" +\n\t        \"        </div>\\n\" +\n\t        \"        <div class=\\\"dialog-body\\\">Body</div>\\n\" +\n\t        \"        <div class=\\\"dialog-footer\\\">\\n\" +\n\t        \"            <button bx-click=\\\"close\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\">Close</button>\\n\" +\n\t        \"            <button bx-click=\\\"close\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">Save</button>\\n\" +\n\t        \"        </div>\\n\" +\n\t        \"         -->\\n\" +\n\t        \"    </div>\\n\" +\n\t        \"</div>\"\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// components/dialogview.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0fa314ee10031324e895","module.exports = require('./dialogview')\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/dialogview/index.js\n// module id = 0\n// module chunks = 0","/* global define */\n/*\n    # DialogView\n    \n    Magix View 对话框。\n\n    ```js\n    var DialogView = require('components/dialogview')\n    var dialogOptions = {}\n    var viewName = ''\n    var viewOptions = {}\n    DialogView.open(dialogOptions, viewName, viewOptions)\n    DialogView.close()\n    ```\n */\ndefine(\n    [\n        'underscore',\n        'brix/base', 'magix',\n        '../dialog/dialog.js'\n    ],\n    function(\n        _,\n        Brix, Magix,\n        Dialog\n    ) {\n        /*\n            var DialogView = require('components/dialogview')\n            var dialogOptions = {\n                left: 100,\n                top: 100\n            }\n            var viewName = 'todo'\n            var viewOptions = {}\n            var dialog = new DialogView(dialogOptions, viewName, viewOptions)\n            dialog.open()\n         */\n\n        var DIALOG_VIEW_ID = 'vf-dialog';\n        var DIALOG_VIEW_CONTAINER = '<div class=\"dialog-body\"><div id=\"' + DIALOG_VIEW_ID + '\" mx-vframe=\"true\"></div></div>'\n\n        function DialogView() {\n            // 支持构造函数\n            if (arguments.length > 1) {\n                this.options = _.extend({}, this.options, arguments[0])\n                this.options['view-name'] = arguments[1]\n                this.options['view-options'] = arguments[2]\n                this.init()\n                this.render()\n            }\n        }\n\n        _.extend(DialogView.prototype, Brix.prototype, {\n            options: {},\n            init: function() {\n                if (!this.options.content) this.options.content = DIALOG_VIEW_CONTAINER\n                if (!this.options.view) {\n                    this.options.view = {\n                        name: this.options['view-name'],\n                        options: this.options['view-options']\n                    }\n                }\n                if (this.dialog) this.dialog.destroy()\n                this.dialog = new Dialog(this.options)\n            },\n            render: function() {},\n            fill: function() {\n                if (this.options.hostView) {\n                    this.options.hostView.owner\n                        .mountVframe(\n                            DIALOG_VIEW_ID,\n                            this.options.view.name,\n                            this.options.view.options\n                        )\n                    return\n                }\n\n                var vframe = Magix.VOM.get(DIALOG_VIEW_ID) || new Magix.Vframe(DIALOG_VIEW_ID)\n                vframe.unmountVframe(DIALOG_VIEW_ID)\n                vframe.mountVframe(DIALOG_VIEW_ID, this.options.view.name, this.options.view.options)\n            },\n            open: function() {\n                this.dialog.open()\n                this.fill()\n            },\n            close: function() {\n                this.dialog.close()\n                var vframe = Magix.VOM.get(DIALOG_VIEW_ID)\n                if (vframe) {\n                    vframe.unmountVframe(DIALOG_VIEW_ID)\n                }\n            },\n            destroy: function() {\n                this.close()\n                this.dialog.destroy()\n            }\n        })\n\n        var DialogViewUtil = {\n            open: function(dialogOptions /* hostView */ , viewName, viewOptions) {\n                if (this.dialog) this.dialog.destroy()\n                this.dialog = new DialogView(dialogOptions, viewName, viewOptions)\n                this.dialog.open()\n                if (dialogOptions.hostView) {\n                    dialogOptions.hostView.manage(this.dialog)\n                }\n            },\n            close: function() {\n                if (this.dialog) this.dialog.destroy()\n            }\n        }\n\n        return DialogViewUtil\n    }\n)\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/dialogview/dialogview.js\n// module id = 1\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"underscore\"\n// module id = 2\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"brix/base\"\n// module id = 3\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"magix\"\n// module id = 4\n// module chunks = 0","/* global define */\n/*\n    http://thx.github.io/brix-site/readme.html?name=Dialog\n        Deprecated\n    https://nuysoft.gitbooks.io/brix-book/content/brix-components/dialog/\n        Temporary\n\n    # Dialog\n\n    对话框。\n\n    ```js\n    new Dialog( options )\n    ```\n\n    ## 配置\n\n    配置项    | 类型    | 默认值    | 说明\n    :-------- | :------ | :-------- | :----------\n    placement | string  | `'right'` | 指定浮层的位置，可选值有 `'top'`、`'bottom'`、`'left'`、`'right'`。\n    align     | string  | `''`      | 指定浮层的对齐方式，可选值有 `''`、`'top'`、`'bottom'`、`'left'`、`'right'`。\n    left      | int     | -         | 指定浮层的距左坐标。\n    top       | int     | -         | 指定浮层的距上坐标。\n    width     | int     | `'auto'`  | 指定浮层的宽度。\n    height    | string  | `''`      | 指定浮层的高度。\n    offset    | object  | `{}`      | 指定浮层的偏移，可以含有两个属性：`left`、`top`。\n    content   | string  | `''`      | 指定浮层的内容。\n    closable  | boolean | `true`    | 指定浮层是否可关闭。\n    modal     | boolean | `false`   | 指定浮层是否模态对话框。\n    singleton | boolean | `true`    | 指定浮层是否单例模式。\n\n    ## 方法\n\n    * .open()\n        打开窗口。\n    * .close()\n        关闭窗口。\n\n    ## 事件\n\n    事件类型     | 说明\n    :----------- | :----------\n    open.dialog  | 当窗口打开时被触发。\n    close.dialog | 当窗口关闭时被触发。\n */\ndefine(\n    [\n        'jquery', 'underscore',\n        'components/base', 'brix/event',\n        './position/position.js',\n        './dialog.tpl.js'\n    ],\n    function(\n        $, _,\n        Brix, EventManager,\n        position,\n        template\n    ) {\n        var TRANSITION_DURATION = 150\n        var EASING = 'swing'\n        var NAMESPACE = '.dialog'\n        var DIALOG_OPENED_CACHE = []\n        var DIALOG_ALL_CACHE = []\n        var STATE = {\n            PENDING: 'pending',\n            OPENED: 'opened',\n            CLOSED: 'closed'\n        }\n\n        function Dialog() {\n            // 支持构造函数\n            if (arguments.length) {\n                this.options = _.extend({}, this.options, arguments[0])\n                this.init()\n                this.render()\n            }\n\n            // 压入缓存 DIALOG_ALL_CACHE\n            DIALOG_ALL_CACHE.push(this)\n        }\n\n        _.extend(Dialog.prototype, Brix.prototype, {\n            options: {\n                placement: 'right', // top bottom left right\n                align: 'top', // left right top bottom\n\n                left: undefined,\n                top: undefined,\n                width: 'auto',\n                height: 'auto',\n                offset: {\n                    left: 0,\n                    top: 0\n                },\n\n                // { data-class | data-className | className: ''}\n                className: '',\n\n                content: '',\n\n                closable: true, // 是否可关闭\n                movable: false, // 是否可移动\n                modal: false, // 是否模态对话框 http://baike.baidu.com/view/3148035.htm\n                singleton: true // 是否单例模式\n            },\n            state: STATE.PENDING, // pending opened closed\n            init: function() {\n                this.$element = $(this.element || this.options.element)\n                this.$manager = new EventManager('bx-')\n\n                // 支持自定义外联 CSS 样式，data-css=\"dialog.css\"\n                if (this.options.css && _.isString(this.options.css)) window.require(['css!' + this.options.css])\n\n                // data-class => data-className\n                if (this.options.class) this.options.className = this.options.class\n\n                // 为文本内容自动加上样式 dialog-body\n                if (('' + this.options.content).indexOf('<') === -1) {\n                    this.options.content =\n                        '<div class=\"dialog-body\">' +\n                        this.options.content +\n                        '<div>'\n                }\n            },\n            render: function() {\n                this.fill()\n                this.$manager.delegate(this.$element, this)\n            },\n            destroy: function() {\n                // 先关闭，把当前实例从缓存 DIALOG_OPENED_CACHE 中移除\n                this.close()\n\n                // 从缓存 DIALOG_ALL_CACHE 中移除\n                DIALOG_ALL_CACHE = _.without(DIALOG_ALL_CACHE, this)\n\n                var type = 'keyup.dialog_autohide_' + this.clientId\n                if (!DIALOG_OPENED_CACHE.length) $(document.body).off(type) // 只有当窗口全部关闭后，才能移除\n\n                this.$manager.undelegate(this.$element)\n                this.$manager.undelegate(this.$relatedElement)\n\n                this.$relatedElement.remove()\n                this.$relatedElement = null\n                this.$backdropElement = null\n            },\n            fill: function() {\n                var html = _.template(template)(this.options)\n\n                // 初始化节点\n                if (!this.$relatedElement) {\n                    this.$relatedElement = $(html).appendTo(document.body).hide()\n                }\n\n                // 单例模式 data-singleton\n                // 不共用浮层 div.dialog.dialog-singleton，但是会关闭其他单例浮层\n                if (!this.options.singleton) {\n                    this.$relatedElement.removeClass('dialog-singleton')\n                }\n\n                // data-content\n                this.$relatedElement\n                    .find('.dialog-content')\n                    .html(this.options.content)\n\n                // 宽高 width height\n                this.$relatedElement.css({\n                    width: this.options.width,\n                    height: this.options.height\n                })\n\n                // 总是初始化遮罩层\n                this.$backdropElement = $('.dialog-backdrop')\n                if (!this.$backdropElement.length) {\n                    this.$backdropElement = $('<div class=\"dialog-backdrop\"></div>').hide()\n                        .appendTo(document.body)\n                }\n\n                // 是否模态对话框 modal\n                if (this.options.modal) {}\n\n                // 类样式 data-className\n                if (this.options.className) {\n                    this.$relatedElement.addClass(this.options.className)\n                }\n\n                // 内联 CSS 样式，data-css=\"{ position: 'fixed' }\"\n                if (this.options.css && _.isObject(this.options.css)) {\n                    this.$relatedElement.css(this.options.css)\n                }\n\n                this.$manager.delegate(this.$relatedElement, this)\n                return this\n            },\n            open: function() {\n                // 触发浮层的节点被修改\n                if (!this.element &&\n                    this.options.element &&\n                    (this.options.element !== this.$element[0])\n                ) this.$element = $(this.options.element)\n\n                // 单例模式：先关闭其他所有单例模式的浮层\n                if (this.options.singleton) {\n                    _.each(DIALOG_OPENED_CACHE, function(item /*, index*/ ) {\n                        if (item.options.singleton) item.close()\n                    })\n                }\n\n                this.fill()\n                this._zIndex('open')\n                this._topmost()\n                this._move()\n\n                // 模态模式：用户必须先操作模态对话框\n                if (this.options.modal) {\n                    $(document.body).addClass('modal-open')\n                    this.$backdropElement\n                        .show()\n                        .css(\n                            'z-index', +this.$relatedElement.css('z-index') - 1\n                        )\n                }\n\n                // 从右侧移入\n                var offset = this._offset()\n                this.$relatedElement.show()\n                    .stop()\n                    .css(\n                        position.start(this.$relatedElement, offset /*, this.options.placement*/ )\n                    )\n                    .animate(\n                        position.end(this.$relatedElement, offset),\n                        TRANSITION_DURATION,\n                        EASING\n                    )\n\n                this._autoHide()\n\n                // 记录打开的浮层\n                DIALOG_OPENED_CACHE.push(this)\n\n                this.trigger('open' + NAMESPACE)\n\n                this.state = STATE.OPENED\n\n                return this\n            },\n            close: function() {\n                if (!this.$relatedElement || !this.$relatedElement.length) return this\n\n                if (this.state === STATE.CLOSED) return this\n\n                var closeEvent = $.Event('close' + NAMESPACE)\n                this.trigger(closeEvent)\n                if (closeEvent.isDefaultPrevented()) return\n\n                var that = this\n                var offset = this._offset()\n                this.$relatedElement\n                    .stop()\n                    .animate(\n                        position.start(this.$relatedElement, offset),\n                        TRANSITION_DURATION,\n                        EASING,\n                        function() {\n                            if (that.$relatedElement) that.$relatedElement.hide()\n                        }\n                    )\n\n                // 从缓存中移除当前实例，包括多次打开的实例\n                DIALOG_OPENED_CACHE = _.without(DIALOG_OPENED_CACHE, this)\n\n                if (this.options.modal) {\n                    // 是否还有模态浮层：只有当前全部模态浮层都关闭后，才能关闭 .dialog-backdrop\n                    var isHasOpenedModal = _.filter(DIALOG_OPENED_CACHE, function(item /*, index*/ ) {\n                        if (item.options.modal) return item\n                    }).length\n                    if (!isHasOpenedModal) {\n                        $(document.body).removeClass('modal-open')\n                        this.$backdropElement.hide()\n                    }\n                }\n\n                this._zIndex('close')\n\n                this.state = STATE.CLOSED\n\n                return this\n            },\n            _offset: function() {\n                var offset = this.options.left !== undefined && this.options.top !== undefined ? {\n                    left: this.options.left,\n                    top: this.options.top\n                } : position(this.$element, this.$relatedElement, this.options.placement, this.options.align)\n                offset = {\n                    left: offset.left + (this.options.offset.left || 0),\n                    top: offset.top + (this.options.offset.top || 0)\n                }\n                return offset\n            },\n            _autoHide: function() {\n                var type = 'keyup.dialog_autohide_' + this.clientId\n                $(document.body).off(type)\n                    .on(type, function(event) {\n                        if (event.keyCode === 27) {\n                            // 优先关闭最后打开的、可关闭的浮层\n                            // X DIALOG_OPENED_CACHE.pop() 不在这里移除，而是在 close() 中移除。\n                            var dialog = DIALOG_OPENED_CACHE[DIALOG_OPENED_CACHE.length - 1]\n                            if (dialog && dialog.options.closable) dialog.close()\n                        }\n                    })\n\n                return this\n            },\n            // 修正 z-index\n            _zIndex: function(when) {\n                if (!DIALOG_OPENED_CACHE.length) return\n\n                // 最顶层的浮层\n                var topmost = _.max(DIALOG_OPENED_CACHE, function(item /*, index*/ ) {\n                    return +item.$relatedElement.css('z-index')\n                })\n                var zIndex = +topmost.$relatedElement.css('z-index')\n                var target\n\n                switch (when) {\n                    case 'open':\n                        target = this\n                        if (target === topmost) return\n                        break\n                    case 'close':\n                        // 最后弹出的浮层\n                        target = DIALOG_OPENED_CACHE[DIALOG_OPENED_CACHE.length - 1]\n                        break\n                }\n\n                if (target.$backdropElement) {\n                    target.$backdropElement.css('z-index', zIndex + 1)\n                }\n                target.$relatedElement.css('z-index', zIndex + 2)\n\n                return this\n            },\n            _topmost: function() {\n                var that = this\n                var type = 'mousedown.dialog_topmost_' + this.clientId\n                this.$relatedElement.off(type)\n                    .on(type, function( /*event*/ ) {\n                        that._zIndex('open')\n                        DIALOG_OPENED_CACHE.push(that)\n                    })\n\n                return this\n            },\n            _move: function() {\n                if (!this.options.movable) return this\n\n                var that = this\n                var mousedown = 'mousedown.dialog_move_' + this.clientId\n                var mousemove = 'mousemove.dialog_move_' + this.clientId\n                var mouseup = 'mouseup.dialog_move_' + this.clientId\n                var $body = $(document.body)\n                var $dialogHeader = this.$relatedElement.find('.dialog-header')\n\n                $dialogHeader.addClass('cursor-move')\n\n                $dialogHeader.off(mousedown)\n                    .on(mousedown, function(event) {\n                        var offset = $dialogHeader.offset()\n                        var diff = {\n                            left: event.pageX - offset.left,\n                            top: event.pageY - offset.top\n                        }\n                        $body.on(mousemove, function(event) {\n                            that.$relatedElement.offset({\n                                left: event.pageX - diff.left,\n                                top: event.pageY - diff.top\n                            })\n                            return false\n                        })\n                        $body.on(mouseup, function( /*event*/ ) {\n                            $body.off(mousemove)\n                            $body.off(mouseup)\n                            return false\n                        })\n                    })\n\n                return this\n            }\n        })\n\n        // 便捷方法。新建一个浮层。\n        Dialog.open = function(options) {\n            return (new Dialog(options)).open()\n        }\n\n        // 便捷方法。关闭最近打开的浮层。\n        Dialog.close = function() {\n            var dialog = DIALOG_OPENED_CACHE.pop()\n            if (dialog) dialog.close()\n        }\n\n        // 便捷方法。关闭所有打开的浮层\n        Dialog.closeAll = function() {\n            _.each(DIALOG_OPENED_CACHE, function(item /*, index*/ ) {\n                item.close()\n            })\n            return this\n        }\n\n        // 便捷方法。销毁所有浮层。\n        Dialog.destroy = function() {\n            _.each(DIALOG_ALL_CACHE, function(item /*, index*/ ) {\n                item.destroy()\n            })\n            return this\n        }\n\n        return Dialog\n    }\n)\n\n/*\n    http://jqueryui.com/dialog\n\n    var Dialog = require('components/dialog')\n    var content = '\\\n        <div class=\"dialog-header\">\\\n            <h4 class=\"dialog-title\">abc</h4>\\\n        </div>\\\n    '\n    var dialog = new Dialog({\n        content: content,\n        modal: true,\n        left: 100,\n        top: 100\n    })\n    dialog.on('open.dialog',function(){\n        debugger\n    })\n    dialog.open()\n\n    // 多个浮层\n    var Dialog = require('components/dialog')\n    var _ = require('underscore')\n    var options = {\n        modal: true,\n        singleton: false,\n        top: 400\n    }\n\n    new Dialog(_.extend({\n        content: Math.random(),\n        left: 100\n    }, options)).open()\n\n    new Dialog(_.extend({\n        content: Math.random(),\n        left: 200\n    }, options)).open()\n\n    new Dialog(_.extend({\n        content: Math.random(),\n        left: 300\n    }, options)).open()\n */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/dialog/dialog.js\n// module id = 5\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jquery\"\n// module id = 6\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"components/base\"\n// module id = 7\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"brix/event\"\n// module id = 8\n// module chunks = 0","/* global define, window */\ndefine(\n    [\n        'jquery'\n    ],\n    function(\n        $\n    ) {\n        var RE_TOP_OR_BOTTOM = /top|bottom/\n        var RE_LEFT_OR_RIGHT = /left|right/\n\n        /**\n         * 计算浮层位置的工具函数\n         * @param  {[type]} trigger    参照节点\n         * @param  {[type]} dialog     浮层节点\n         * @param  {[type]} placement  浮层相对于参照的位置\n         * @param  {[type]} align      浮层相对于参照的对齐方式\n         * @return {[type]}            { left: left, top: top }\n         */\n        function position(trigger, overlay, placement, align) {\n            var $trigger = $(trigger)\n\n            if (!$trigger.length) return center(overlay)\n\n            var triggerOffset = $trigger.offset()\n            var triggerLeft = triggerOffset.left\n            var triggerTop = triggerOffset.top\n            var triggerWidth = $trigger.outerWidth()\n            var triggerHeight = $trigger.outerHeight()\n\n            var $overlay = $(overlay) // .show()\n            var visible = $overlay.css('display') !== 'none'\n            $overlay.show()\n            var overlayWidth = $overlay.outerWidth()\n            var overlayHeight = $overlay.outerHeight()\n                // var overlayMarginLeft = parseInt($overlay.css('margin-left'), 10)\n                // var overlayMarginTop = parseInt($overlay.css('margin-top'), 10)\n\n            if (!visible) $overlay.hide()\n\n            var left, top\n            var leftDiff = triggerWidth / 2 - overlayWidth / 2\n            var topDiff = triggerHeight / 2 - overlayHeight / 2\n            switch (placement) {\n                case 'top': // 上方，水平局中\n                    left = triggerLeft + leftDiff\n                    top = triggerTop - overlayHeight\n                    break\n                case 'bottom': // 下方，水平局中\n                    left = triggerLeft + leftDiff\n                    top = triggerTop + triggerHeight\n                    break\n                case 'left': // 左侧，垂直局中\n                    left = triggerLeft - overlayWidth\n                    top = triggerTop + topDiff\n                    break\n                case 'right': // 右侧，垂直局中\n                    left = triggerLeft + triggerWidth\n                    top = triggerTop + topDiff\n                    break\n            }\n\n            // 浮层节点不能覆盖参照节点\n            if (\n                RE_TOP_OR_BOTTOM.test(placement) !== RE_TOP_OR_BOTTOM.test(align) &&\n                RE_LEFT_OR_RIGHT.test(placement) !== RE_LEFT_OR_RIGHT.test(align)\n            ) {\n                switch (align) {\n                    case 'top': // 上边框对齐\n                        top = triggerTop\n                        break\n                    case 'bottom': // 下边框对齐\n                        top = triggerTop + triggerHeight - overlayHeight\n                        break\n                    case 'left': // 做边框对齐\n                        left = triggerLeft\n                        break\n                    case 'right': // 右边框对齐\n                        left = triggerLeft + triggerWidth - overlayWidth\n                        break\n                }\n            }\n\n            return {\n                left: left, //  + overlayMarginLeft\n                top: top //  + overlayMarginTop\n            }\n        }\n\n        function center(width, height) {\n            var overlayWidth, overlayHeight\n\n            // center(overlay) {\n            if (!height) {\n                var $overlay = $(width) // .show()\n                var visible = $overlay.css('display') !== 'none'\n                $overlay.show()\n                overlayWidth = $overlay.outerWidth()\n                overlayHeight = $overlay.outerHeight()\n\n                if (!visible) $overlay.hide()\n\n            } else {\n                // center(width, height)\n                overlayWidth = parseFloat(width, 12)\n                overlayHeight = parseFloat(height, 12)\n            }\n\n            var $window = $(window)\n            var windowWidth = $window.width()\n            var windowHeight = $window.height()\n            var scrollLeft = $window.scrollLeft()\n            var scrollTop = $window.scrollTop()\n\n            return {\n                left: windowWidth / 2 - overlayWidth / 2 + scrollLeft,\n                top: windowHeight / 2 - overlayHeight / 2 + scrollTop\n            }\n        }\n\n        function start(overlay, offset, placement) {\n            var $overlay = $(overlay) // .show()\n            var visible = $overlay.css('display') !== 'none'\n            $overlay.show()\n            var width = $overlay.outerWidth()\n            var height = $overlay.outerHeight()\n\n            if (!visible) $overlay.hide()\n\n            var result = {\n                opacity: 0,\n                left: offset.left,\n                top: offset.top\n            }\n            switch (placement) {\n                case 'top': // 上方\n                    result.top = result.top - height * 0.5\n                    break\n                case 'bottom': // 下方\n                    result.top = result.top + height * 0.5\n                    break\n                case 'left': // 左侧\n                    result.left = result.left - width * 0.5\n                    break\n                case 'right': // 右侧\n                    /* Expected a 'break' statement before 'default'. */\n                    /* falls through */\n                default:\n                    result.left = result.left + width * 0.5\n                    break\n            }\n\n            return result\n        }\n\n        /* exported overlay */\n        function end(overlay, offset) {\n            if (!overlay) { /* TODO */ }\n            return {\n                opacity: 1,\n                left: offset.left,\n                top: offset.top\n            }\n        }\n\n        position.center = center\n        position.start = start\n        position.end = end\n\n        return position\n    }\n)\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/dialog/position/position.js\n// module id = 9\n// module chunks = 0","/* global define */\ndefine(function() {\n    return \"<div class=\\\"dialog dialog-singleton dialog-<%= placement %>\\\">\\n\" +\n        \"    <button bx-click=\\\"close\\\" type=\\\"button\\\" class=\\\"dialog-close <%= closable ? '' : 'hide' %>\\\"><span class=\\\"brixfont\\\">&#xe62d;</span><!-- &times; --></button>\\n\" +\n        \"    <div class=\\\"dialog-content\\\">\\n\" +\n        \"        <%= content %>\\n\" +\n        \"        <!-- \\n\" +\n        \"        <div class=\\\"dialog-header\\\">\\n\" +\n        \"            <h4 class=\\\"dialog-title\\\">Title</h4>\\n\" +\n        \"        </div>\\n\" +\n        \"        <div class=\\\"dialog-body\\\">Body</div>\\n\" +\n        \"        <div class=\\\"dialog-footer\\\">\\n\" +\n        \"            <button bx-click=\\\"close\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\">Close</button>\\n\" +\n        \"            <button bx-click=\\\"close\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">Save</button>\\n\" +\n        \"        </div>\\n\" +\n        \"         -->\\n\" +\n        \"    </div>\\n\" +\n        \"</div>\"\n})\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/dialog/dialog.tpl.js\n// module id = 10\n// module chunks = 0"],"sourceRoot":""}