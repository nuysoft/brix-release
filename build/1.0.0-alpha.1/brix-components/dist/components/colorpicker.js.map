{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///components/colorpicker.js","webpack:///webpack/bootstrap b5c86a764eb62fe79b00","webpack:///./src/colorpicker/index.js","webpack:///./src/colorpicker/colorpicker.js","webpack:///external \"jquery\"","webpack:///external \"underscore\"","webpack:///external \"components/base\"","webpack:///external \"brix/event\"","webpack:///./src/colorpicker/colorpicker.tpl.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_4__","__WEBPACK_EXTERNAL_MODULE_5__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","$","_","Brix","EventManager","template","svgSlideTpl","svgPickerTpl","vmlSlideTpl","vmlPickerTpl","ColorPicker","hsv2rgb","h","s","v","R","G","B","X","C","Math","abs","r","g","b","hex","toString","slice","rgb2hsv","H","S","V","max","min","extend","prototype","options","color","init","render","that","$element","element","html","colors","offset","$relatedElement","css","left","top","outerHeight","insertAfter","hide","pickerDragNode","find","slideDragNode","$slideNode","$pickerNode","svgOrVml","window","SVGAngle","document","implementation","hasFeature","append","namespaces","add","setHex","$manager","delegate","type","clientId","body","off","on","event","target","has","length","show","toggle","setColor","hsv","round","height","width","background-color","removeClass","input","val","setHsv","setRgb","rgb","parseInt","substr","undefined","pickQuickColor","extraParameters","addClass","toggleBody","toggleClass","slideToggle","pickPaletteColor","pageX","pageY","dragPickerIndicator","documentElement","preventDefault","pickSlideColor","dragSlideIndicator","inputColor","finishInputColor","submit","extra","trigger","triggerHandler","destroy","undelegate","remove","apply"],"mappings":"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","file":"components/colorpicker.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jquery\"), require(\"underscore\"), require(\"components/base\"), require(\"brix/event\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jquery\", \"underscore\", \"components/base\", \"brix/event\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"components/colorpicker\"] = factory(require(\"jquery\"), require(\"underscore\"), require(\"components/base\"), require(\"brix/event\"));\n\telse\n\t\troot[\"components/colorpicker\"] = factory(root[\"jquery\"], root[\"underscore\"], root[\"components/base\"], root[\"brix/event\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jquery\"), require(\"underscore\"), require(\"components/base\"), require(\"brix/event\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jquery\", \"underscore\", \"components/base\", \"brix/event\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"components/colorpicker\"] = factory(require(\"jquery\"), require(\"underscore\"), require(\"components/base\"), require(\"brix/event\"));\n\telse\n\t\troot[\"components/colorpicker\"] = factory(root[\"jquery\"], root[\"underscore\"], root[\"components/base\"], root[\"brix/event\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1)\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define        */\n\t/* global window        */\n\t/* global document      */\n\t/* jshint multistr:true */\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t        __webpack_require__(2), __webpack_require__(3),\n\t        __webpack_require__(4), __webpack_require__(5),\n\t        __webpack_require__(6)\n\t    ], __WEBPACK_AMD_DEFINE_RESULT__ = function(\n\t        $, _,\n\t        Brix, EventManager,\n\t        template,\n\t        svgSlideTpl, svgPickerTpl,\n\t        vmlSlideTpl, vmlPickerTpl\n\t    ) {\n\t        /*\n\t\n\t            ### 数据\n\t            {}\n\t\n\t            ### 选项\n\t            公共选项：data template\n\t            color\n\t\n\t            ### 属性\n\t            公共属性：element moduleId clientId parentClientId childClientIds data template\n\t            color\n\t\n\t            ### 方法\n\t\n\t            ### 事件\n\t            公共事件：ready destroyed\n\t\n\t        */\n\t\n\t        svgSlideTpl = '\\\n\t            <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"100%\" height=\"100%\">\\\n\t                <defs>\\\n\t                    <linearGradient id=\"gradient-hsv\" x1=\"0%\" y1=\"100%\" x2=\"0%\" y2=\"0%\">\\\n\t                        <stop offset=\"0%\" stop-color=\"#FF0000\" stop-opacity=\"1\"></stop>\\\n\t                        <stop offset=\"13%\" stop-color=\"#FF00FF\" stop-opacity=\"1\"></stop>\\\n\t                        <stop offset=\"25%\" stop-color=\"#8000FF\" stop-opacity=\"1\"></stop>\\\n\t                        <stop offset=\"38%\" stop-color=\"#0040FF\" stop-opacity=\"1\"></stop>\\\n\t                        <stop offset=\"50%\" stop-color=\"#00FFFF\" stop-opacity=\"1\"></stop>\\\n\t                        <stop offset=\"63%\" stop-color=\"#00FF40\" stop-opacity=\"1\"></stop>\\\n\t                        <stop offset=\"75%\" stop-color=\"#0BED00\" stop-opacity=\"1\"></stop>\\\n\t                        <stop offset=\"88%\" stop-color=\"#FFFF00\" stop-opacity=\"1\"></stop>\\\n\t                        <stop offset=\"100%\" stop-color=\"#FF0000\" stop-opacity=\"1\"></stop>\\\n\t                    </linearGradient>\\\n\t                </defs>\\\n\t                <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"url(#gradient-hsv)\"></rect>\\\n\t            </svg>\\\n\t        '\n\t        svgPickerTpl = '\\\n\t            <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"100%\" height=\"100%\">\\\n\t                <defs>\\\n\t                    <lineargradient id=\"gradient-black\" x1=\"0%\" y1=\"100%\" x2=\"0%\" y2=\"0%\">\\\n\t                        <stop offset=\"0%\" stop-color=\"#000000\" stop-opacity=\"1\"></stop>\\\n\t                        <stop offset=\"100%\" stop-color=\"#CC9A81\" stop-opacity=\"0\"></stop>\\\n\t                    </lineargradient>\\\n\t                    <lineargradient id=\"gradient-white\" x1=\"0%\" y1=\"100%\" x2=\"100%\" y2=\"100%\">\\\n\t                        <stop offset=\"0%\" stop-color=\"#FFFFFF\" stop-opacity=\"1\"></stop>\\\n\t                        <stop offset=\"100%\" stop-color=\"#CC9A81\" stop-opacity=\"0\"></stop>\\\n\t                    </lineargradient>\\\n\t                </defs>\\\n\t                <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"url(#gradient-white)\"></rect>\\\n\t                <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"url(#gradient-black)\"></rect>\\\n\t            </svg>\\\n\t        '\n\t        vmlSlideTpl = '\\\n\t            <div style=\"position: relative; width: 100%; height: 100%\">\\\n\t                <v:rect style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%\" stroked=\"f\" filled=\"t\">\\\n\t                    <v:fill type=\"gradient\" method=\"none\" angle=\"0\" color=\"red\" color2=\"red\" colors=\"8519f fuchsia;.25 #8000ff;24903f #0040ff;.5 aqua;41287f #00ff40;.75 #0bed00;57671f yellow\"></v:fill>\\\n\t                </v:rect>\\\n\t            </div>\\\n\t        '\n\t        vmlPickerTpl = '\\\n\t            <div style=\"position: relative; width: 100%; height: 100%\">\\\n\t                <v:rect style=\"position: absolute; left: -1px; top: -1px; width: 101%; height: 101%\" stroked=\"f\" filled=\"t\">\\\n\t                    <v:fill type=\"gradient\" method=\"none\" angle=\"270\" color=\"#FFFFFF\" opacity=\"100%\" color2=\"#CC9A81\" o:opacity2=\"0%\"></v:fill>\\\n\t                </v:rect>\\\n\t                <v:rect style=\"position: absolute; left: 0px; top: 0px; width: 100%; height: 101%\" stroked=\"f\" filled=\"t\">\\\n\t                    <v:fill type=\"gradient\" method=\"none\" angle=\"0\" color=\"#000000\" opacity=\"100%\" color2=\"#CC9A81\" o:opacity2=\"0%\"></v:fill>\\\n\t                </v:rect>\\\n\t            </div>\\\n\t        '\n\t\n\t        function ColorPicker() {}\n\t\n\t        _.extend(ColorPicker.prototype, Brix.prototype, {\n\t            options: {\n\t                color: '#ffffff'\n\t            },\n\t            init: function() {},\n\t            render: function() {\n\t                var that = this\n\t                var $element = this.$element = $(this.element)\n\t\n\t                this.color = this.options.color\n\t\n\t                var html = _.template(template)({\n\t                    colors: ['#d81e06', '#f4ea2a', '#1afa29', '#1296db', '#13227a', '#d4237a', '#ffffff', '#e6e6e6', '#dbdbdb', '#cdcdcd', '#bfbfbf', '#8a8a8a', '#707070', '#515151', '#2c2c2c', '#000000', '#ea986c', '#eeb174', '#f3ca7e', '#f9f28b', '#c8db8c', '#aad08f', '#87c38f', '#83c6c2', '#7dc5eb', '#87a7d6', '#8992c8', '#a686ba', '#bd8cbb', '#be8dbd', '#e89abe', '#e8989a', '#e16632', '#e98f36', '#efb336', '#f6ef37', '#afcd51', '#7cba59', '#36ab60', '#1baba8', '#17ace3', '#3f81c1', '#4f68b0', '#594d9c', '#82529d', '#a4579d', '#db649b', '#dd6572', '#d81e06', '#e0620d', '#ea9518', '#f4ea2a', '#8cbb1a', '#2ba515', '#0e932e', '#0c9890', '#1295db', '#0061b2', '#0061b0', '#004198', '#122179', '#88147f', '#d3227b', '#d6204b'],\n\t                    min: false,\n\t                    color: this.color\n\t                })\n\t                var offset = $element.offset()\n\t                var $relatedElement = this.$relatedElement = $(html).css({\n\t                    left: offset.left,\n\t                    top: offset.top + $element.outerHeight() + 1\n\t                }).insertAfter($element).hide()\n\t\n\t                this.pickerDragNode = $relatedElement.find('.picker-indicator')\n\t                this.slideDragNode = $relatedElement.find('.slide-indicator')\n\t\n\t                var $slideNode = this.$slideNode = $relatedElement.find('.slide')\n\t                var $pickerNode = this.$pickerNode = $relatedElement.find('.picker')\n\t                var svgOrVml = (window.SVGAngle || document.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\", \"1.1\") ? \"SVG\" : \"VML\")\n\t                switch (svgOrVml) {\n\t                    case 'SVG':\n\t                        $slideNode.append(svgSlideTpl)\n\t                        $pickerNode.append(svgPickerTpl)\n\t                        break\n\t                    default:\n\t                        if (!document.namespaces.v) {\n\t                            document.namespaces.add('v', 'urn:schemas-microsoft-com:vml', '#default#VML')\n\t                        }\n\t                        $slideNode.html(vmlSlideTpl)\n\t                        $pickerNode.html(vmlPickerTpl)\n\t                }\n\t\n\t                this.setHex(this.color)\n\t\n\t                var $manager = this.$manager = new EventManager('bx-')\n\t                $manager.delegate(this.$element, this)\n\t                $manager.delegate(this.$relatedElement, this)\n\t\n\t                var type = 'click.colorpicker_' + this.clientId\n\t                $(document.body).off(type)\n\t                    .on(type, function(event) {\n\t                        if (that.element === event.target) return\n\t                        if ($relatedElement.has(event.target).length) return\n\t                        that.hide()\n\t                    })\n\t\n\t                // this.on('change selected', function(event, data) {\n\t                //     console.log(event.type, data)\n\t                // })\n\t            },\n\t            show: function() {\n\t                this.$relatedElement.show()\n\t            },\n\t            hide: function() {\n\t                this.$relatedElement.hide()\n\t            },\n\t            toggle: function() {\n\t                var $element = this.$element\n\t                var offset = $element.offset()\n\t                this.$relatedElement.toggle().offset({\n\t                    left: offset.left,\n\t                    top: offset.top + $element.outerHeight() + 1\n\t                })\n\t            },\n\t            /**\n\t             * Sets color of the picker in hsv/rgb/hex format.\n\t             * @param {Object} hsv Object of the form: { h: <hue>, s: <saturation>, v: <value> }.\n\t             * @param {Object} rgb Object of the form: { r: <red>, g: <green>, b: <blue> }.\n\t             * @param {String} hex String of the form: #RRGGBB.\n\t             */\n\t            setColor: function(hsv /*, rgb, hex*/ ) {\n\t                var $relatedElement = this.$relatedElement\n\t                this.h = hsv.h % 360\n\t                this.s = hsv.s\n\t                this.v = hsv.v\n\t                var c = hsv2rgb(this.h, this.s, this.v)\n\t\n\t                this.slideDragNode.css({\n\t                    top: Math.round(this.h * this.$slideNode.height() / 360 - 5)\n\t                })\n\t                var left = Math.round(this.s * this.$pickerNode.width() - 5)\n\t                var top = Math.round((1 - this.v) * this.$pickerNode.height() - 5)\n\t                this.pickerDragNode.css({\n\t                    left: left,\n\t                    top: top,\n\t                    color: top > 98 ? '#fff' : '#000'\n\t                })\n\t                this.$pickerNode.css({\n\t                    \"background-color\": hsv2rgb(this.h, 1, 1).hex\n\t                })\n\t                $relatedElement.find('.colorpicker-footer span').css({\n\t                    \"background-color\": c.hex\n\t                })\n\t                this.color = c.hex\n\t                $relatedElement.find('li').removeClass('selected')\n\t\n\t                var input = $relatedElement.find('input')\n\t                if (input.val() !== c.hex) input.val(c.hex)\n\t            },\n\t            /**\n\t             * 设置颜色\n\t             * @param {Object} hsv hsv对象 { h: <hue>, s: <saturation>, v: <value> }\n\t             */\n\t            setHsv: function(hsv) {\n\t                this.setColor(hsv)\n\t            },\n\t            /**\n\t             * 设置颜色\n\t             * @param {Object} rgb rgb对象 { r: <red>, g: <green>, b: <blue> }\n\t             */\n\t            setRgb: function(rgb) {\n\t                this.setColor(rgb2hsv(rgb.r, rgb.g, rgb.b), rgb)\n\t            },\n\t            /**\n\t             * 设置颜色\n\t             * @param {String} hex 颜色值 #RRGGBB.\n\t             */\n\t            setHex: function(hex) {\n\t                this.setColor(rgb2hsv(parseInt(hex.substr(1, 2), 16), parseInt(hex.substr(3, 2), 16), parseInt(hex.substr(5, 2), 16)), undefined, hex)\n\t            },\n\t            /* Events */\n\t            pickQuickColor: function(event, extraParameters) {\n\t                this.setHex(extraParameters)\n\t                $(event.target).addClass('selected')\n\t            },\n\t            toggleBody: function( /*event*/ ) {\n\t                this.$relatedElement.find('.colorpicker-middle').toggleClass('open')\n\t                this.$relatedElement.find('.colorpicker-body').slideToggle()\n\t            },\n\t            pickPaletteColor: function(event) {\n\t                var offset = this.$pickerNode.offset()\n\t                var left = event.pageX - offset.left\n\t                var top = event.pageY - offset.top\n\t                var width = this.$pickerNode.width()\n\t                var height = this.$pickerNode.height()\n\t                this.setHsv({\n\t                    h: this.h,\n\t                    s: left / width,\n\t                    v: (height - top) / height\n\t                })\n\t            },\n\t            dragPickerIndicator: function(event) {\n\t                var that = this\n\t                $(document.documentElement).css('cursor', 'pointer')\n\t                event.preventDefault()\n\t                $(document.body).on('mousemove.pickerDragNode', function(event) {\n\t                    event.pageX -= 5\n\t                    event.pageY -= 5\n\t                    var offset = that.$pickerNode.offset(),\n\t                        width = that.$pickerNode.width(),\n\t                        height = that.$pickerNode.height(),\n\t                        left = event.pageX - offset.left,\n\t                        top = event.pageY - offset.top\n\t\n\t                    if (left + 5 > width) left = width\n\t                    else if (left < 0) left = 0\n\t                    else left += 5\n\t\n\t                    if (top + 5 > height) top = height\n\t                    else if (top < 0) top = 0\n\t                    else top += 5\n\t\n\t                    that.setHsv({\n\t                        h: that.h,\n\t                        s: left / width,\n\t                        v: (height - top) / height\n\t                    })\n\t                }).on('mouseup', function() {\n\t                    $(document.documentElement).css('cursor', 'auto')\n\t                    $(document.body).off('mousemove.pickerDragNode')\n\t                })\n\t            },\n\t            pickSlideColor: function(event) {\n\t                var offset = this.$slideNode.offset(),\n\t                    height = this.$slideNode.height(),\n\t                    top = ((event.pageY - offset.top >= height) ? height - 1 : event.pageY - offset.top),\n\t                    h = top / height * 360\n\t                this.setHsv({\n\t                    h: h,\n\t                    s: this.s,\n\t                    v: this.v\n\t                })\n\t            },\n\t            dragSlideIndicator: function(event) {\n\t                var that = this\n\t                $(document.documentElement).css('cursor', 'pointer')\n\t                event.preventDefault()\n\t                $(document.body).on('mousemove.slideDragNode', function(event) {\n\t                    event.pageX -= 5\n\t                    event.pageY -= 5\n\t                    var offset = that.$slideNode.offset()\n\t                    var height = that.$slideNode.height(),\n\t                        top = event.pageY - offset.top\n\t\n\t                    if (top + 5 > height) top = height - 1\n\t                    else if (top < 0) top = 0\n\t                    else top += 5\n\t\n\t                    that.setHsv({\n\t                        h: top / that.$slideNode.height() * 360,\n\t                        s: that.s,\n\t                        v: that.v\n\t                    })\n\t                }).on('mouseup', function() {\n\t                    $(document.documentElement).css('cursor', 'auto')\n\t                    $(document.body).off('mousemove.slideDragNode')\n\t                })\n\t            },\n\t            inputColor: function(event) {\n\t                var val = $(event.target).val()\n\t                if (val.length === 7 && this.color !== val) this.setHex(val)\n\t            },\n\t            finishInputColor: function(event) {\n\t                var val = $(event.target).val()\n\t                if (this.color != val) this.setHex(val)\n\t            },\n\t            submit: function() {\n\t                var c = hsv2rgb(this.h, this.s, this.v)\n\t                var extra = {\n\t                    hex: c.hex,\n\t                    hsv: {\n\t                        h: this.h,\n\t                        s: this.s,\n\t                        v: this.v\n\t                    },\n\t                    rgb: {\n\t                        r: c.r,\n\t                        g: c.g,\n\t                        b: c.b\n\t                    }\n\t                }\n\t                this.trigger('change.colorpicker', extra)\n\t                this.$element.triggerHandler('change')\n\t                this.hide()\n\t            },\n\t            destroy: function() {\n\t                this.$manager.undelegate(this.$element, this)\n\t                this.$manager.undelegate(this.$relatedElement, this)\n\t\n\t                this.$relatedElement.remove()\n\t\n\t                var type = 'click.colorpicker_' + this.clientId\n\t                $(document.body).off(type)\n\t            }\n\t        })\n\t\n\t        return ColorPicker\n\t\n\t        function hsv2rgb(h, s, v) {\n\t            var R, G, B, X, C\n\t            h = (h % 360) / 60\n\t            C = v * s\n\t            X = C * (1 - Math.abs(h % 2 - 1))\n\t            R = G = B = v - C\n\t\n\t            h = ~~h\n\t            R += [C, X, 0, 0, X, C][h]\n\t            G += [X, C, C, X, 0, 0][h]\n\t            B += [0, 0, X, C, C, X][h]\n\t\n\t            var r = R * 255,\n\t                g = G * 255,\n\t                b = B * 255\n\t            return {\n\t                r: r,\n\t                g: g,\n\t                b: b,\n\t                hex: \"#\" + (16777216 | b | (g << 8) | (r << 16)).toString(16).slice(1)\n\t            }\n\t\n\t        }\n\t\n\t        /**\n\t         * Convert RGB representation to HSV.\n\t         * r, g, b can be either in <0,1> range or <0,255> range.\n\t         * Credits to http://www.raphaeljs.com\n\t         */\n\t        function rgb2hsv(r, g, b) {\n\t            if (r > 1 || g > 1 || b > 1) {\n\t                r /= 255\n\t                g /= 255\n\t                b /= 255\n\t            }\n\t            var H, S, V, C\n\t            V = Math.max(r, g, b)\n\t            C = V - Math.min(r, g, b)\n\t            H = (C === 0 ? null : V == r ? (g - b) / C + (g < b ? 6 : 0) : V == g ? (b - r) / C + 2 : (r - g) / C + 4)\n\t            H = (H % 6) * 60\n\t            S = C === 0 ? 0 : C / V\n\t            return {\n\t                h: H,\n\t                s: S,\n\t                v: V\n\t            }\n\t        }\n\t\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* global define */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t    return \"<div class=\\\"colorpicker\\\">\\n\" +\n\t        \"    <div class=\\\"colorpicker-header clearfix\\\">\\n\" +\n\t        \"        <ul class=\\\"clearfix\\\">\\n\" +\n\t        \"            <% for(var i = 0; i < colors.length; i++) { %>\\n\" +\n\t        \"            <li value=\\\"<%=colors[i]%>\\\" style=\\\"background-color:<%=colors[i]%>;\\\" bx-click=\\\"pickQuickColor(<%=colors[i]%>)\\\"></li>\\n\" +\n\t        \"            <% } %>\\n\" +\n\t        \"        </ul>\\n\" +\n\t        \"    </div>\\n\" +\n\t        \"    <div class=\\\"colorpicker-middle open clearfix\\\">\\n\" +\n\t        \"        <i bx-click=\\\"toggleBody\\\" class=\\\"uxicon arrow arrow-up\\\">&#404</i>\\n\" +\n\t        \"        <i bx-click=\\\"toggleBody\\\" class=\\\"uxicon arrow arrow-down\\\">&#405</i>\\n\" +\n\t        \"    </div>\\n\" +\n\t        \"    <div class=\\\"colorpicker-body clearfix\\\">\\n\" +\n\t        \"        <div class=\\\"picker-wrapper\\\">\\n\" +\n\t        \"            <div class=\\\"picker\\\" bx-click=\\\"pickPaletteColor()\\\"></div>\\n\" +\n\t        \"            <i class=\\\"uxicon picker-indicator\\\" bx-mousedown=\\\"dragPickerIndicator()\\\">&#470</i>\\n\" +\n\t        \"        </div>\\n\" +\n\t        \"        <div class=\\\"slide-wrapper\\\">\\n\" +\n\t        \"            <div class=\\\"slide\\\" bx-click=\\\"pickSlideColor()\\\"></div>\\n\" +\n\t        \"            <i class=\\\"uxicon slide-indicator\\\" bx-mousedown=\\\"dragSlideIndicator\\\">&#461</i>\\n\" +\n\t        \"        </div>\\n\" +\n\t        \"    </div>\\n\" +\n\t        \"    <div class=\\\"colorpicker-footer clearfix\\\">\\n\" +\n\t        \"        <span class=\\\"bg\\\" style=\\\"background-color: <%=color%>\\\"></span>\\n\" +\n\t        \"        <input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"<%=color%>\\\" bx-keyup=\\\"inputColor\\\" bx-blur=\\\"finishInputColor\\\">\\n\" +\n\t        \"        <a class=\\\"btn btn-default\\\" bx-click=\\\"submit\\\">确定</a>\\n\" +\n\t        \"    </div>\\n\" +\n\t        \"</div>\"\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** components/colorpicker.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap b5c86a764eb62fe79b00\n **/","module.exports = require('./colorpicker')\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/colorpicker/index.js\n ** module id = 0\n ** module chunks = 0\n **/","/* global define        */\n/* global window        */\n/* global document      */\n/* jshint multistr:true */\ndefine(\n    [\n        'jquery', 'underscore',\n        'components/base', 'brix/event',\n        './colorpicker.tpl.js'\n    ],\n    function(\n        $, _,\n        Brix, EventManager,\n        template,\n        svgSlideTpl, svgPickerTpl,\n        vmlSlideTpl, vmlPickerTpl\n    ) {\n        /*\n\n            ### 数据\n            {}\n\n            ### 选项\n            公共选项：data template\n            color\n\n            ### 属性\n            公共属性：element moduleId clientId parentClientId childClientIds data template\n            color\n\n            ### 方法\n\n            ### 事件\n            公共事件：ready destroyed\n\n        */\n\n        svgSlideTpl = '\\\n            <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"100%\" height=\"100%\">\\\n                <defs>\\\n                    <linearGradient id=\"gradient-hsv\" x1=\"0%\" y1=\"100%\" x2=\"0%\" y2=\"0%\">\\\n                        <stop offset=\"0%\" stop-color=\"#FF0000\" stop-opacity=\"1\"></stop>\\\n                        <stop offset=\"13%\" stop-color=\"#FF00FF\" stop-opacity=\"1\"></stop>\\\n                        <stop offset=\"25%\" stop-color=\"#8000FF\" stop-opacity=\"1\"></stop>\\\n                        <stop offset=\"38%\" stop-color=\"#0040FF\" stop-opacity=\"1\"></stop>\\\n                        <stop offset=\"50%\" stop-color=\"#00FFFF\" stop-opacity=\"1\"></stop>\\\n                        <stop offset=\"63%\" stop-color=\"#00FF40\" stop-opacity=\"1\"></stop>\\\n                        <stop offset=\"75%\" stop-color=\"#0BED00\" stop-opacity=\"1\"></stop>\\\n                        <stop offset=\"88%\" stop-color=\"#FFFF00\" stop-opacity=\"1\"></stop>\\\n                        <stop offset=\"100%\" stop-color=\"#FF0000\" stop-opacity=\"1\"></stop>\\\n                    </linearGradient>\\\n                </defs>\\\n                <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"url(#gradient-hsv)\"></rect>\\\n            </svg>\\\n        '\n        svgPickerTpl = '\\\n            <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"100%\" height=\"100%\">\\\n                <defs>\\\n                    <lineargradient id=\"gradient-black\" x1=\"0%\" y1=\"100%\" x2=\"0%\" y2=\"0%\">\\\n                        <stop offset=\"0%\" stop-color=\"#000000\" stop-opacity=\"1\"></stop>\\\n                        <stop offset=\"100%\" stop-color=\"#CC9A81\" stop-opacity=\"0\"></stop>\\\n                    </lineargradient>\\\n                    <lineargradient id=\"gradient-white\" x1=\"0%\" y1=\"100%\" x2=\"100%\" y2=\"100%\">\\\n                        <stop offset=\"0%\" stop-color=\"#FFFFFF\" stop-opacity=\"1\"></stop>\\\n                        <stop offset=\"100%\" stop-color=\"#CC9A81\" stop-opacity=\"0\"></stop>\\\n                    </lineargradient>\\\n                </defs>\\\n                <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"url(#gradient-white)\"></rect>\\\n                <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"url(#gradient-black)\"></rect>\\\n            </svg>\\\n        '\n        vmlSlideTpl = '\\\n            <div style=\"position: relative; width: 100%; height: 100%\">\\\n                <v:rect style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%\" stroked=\"f\" filled=\"t\">\\\n                    <v:fill type=\"gradient\" method=\"none\" angle=\"0\" color=\"red\" color2=\"red\" colors=\"8519f fuchsia;.25 #8000ff;24903f #0040ff;.5 aqua;41287f #00ff40;.75 #0bed00;57671f yellow\"></v:fill>\\\n                </v:rect>\\\n            </div>\\\n        '\n        vmlPickerTpl = '\\\n            <div style=\"position: relative; width: 100%; height: 100%\">\\\n                <v:rect style=\"position: absolute; left: -1px; top: -1px; width: 101%; height: 101%\" stroked=\"f\" filled=\"t\">\\\n                    <v:fill type=\"gradient\" method=\"none\" angle=\"270\" color=\"#FFFFFF\" opacity=\"100%\" color2=\"#CC9A81\" o:opacity2=\"0%\"></v:fill>\\\n                </v:rect>\\\n                <v:rect style=\"position: absolute; left: 0px; top: 0px; width: 100%; height: 101%\" stroked=\"f\" filled=\"t\">\\\n                    <v:fill type=\"gradient\" method=\"none\" angle=\"0\" color=\"#000000\" opacity=\"100%\" color2=\"#CC9A81\" o:opacity2=\"0%\"></v:fill>\\\n                </v:rect>\\\n            </div>\\\n        '\n\n        function ColorPicker() {}\n\n        _.extend(ColorPicker.prototype, Brix.prototype, {\n            options: {\n                color: '#ffffff'\n            },\n            init: function() {},\n            render: function() {\n                var that = this\n                var $element = this.$element = $(this.element)\n\n                this.color = this.options.color\n\n                var html = _.template(template)({\n                    colors: ['#d81e06', '#f4ea2a', '#1afa29', '#1296db', '#13227a', '#d4237a', '#ffffff', '#e6e6e6', '#dbdbdb', '#cdcdcd', '#bfbfbf', '#8a8a8a', '#707070', '#515151', '#2c2c2c', '#000000', '#ea986c', '#eeb174', '#f3ca7e', '#f9f28b', '#c8db8c', '#aad08f', '#87c38f', '#83c6c2', '#7dc5eb', '#87a7d6', '#8992c8', '#a686ba', '#bd8cbb', '#be8dbd', '#e89abe', '#e8989a', '#e16632', '#e98f36', '#efb336', '#f6ef37', '#afcd51', '#7cba59', '#36ab60', '#1baba8', '#17ace3', '#3f81c1', '#4f68b0', '#594d9c', '#82529d', '#a4579d', '#db649b', '#dd6572', '#d81e06', '#e0620d', '#ea9518', '#f4ea2a', '#8cbb1a', '#2ba515', '#0e932e', '#0c9890', '#1295db', '#0061b2', '#0061b0', '#004198', '#122179', '#88147f', '#d3227b', '#d6204b'],\n                    min: false,\n                    color: this.color\n                })\n                var offset = $element.offset()\n                var $relatedElement = this.$relatedElement = $(html).css({\n                    left: offset.left,\n                    top: offset.top + $element.outerHeight() + 1\n                }).insertAfter($element).hide()\n\n                this.pickerDragNode = $relatedElement.find('.picker-indicator')\n                this.slideDragNode = $relatedElement.find('.slide-indicator')\n\n                var $slideNode = this.$slideNode = $relatedElement.find('.slide')\n                var $pickerNode = this.$pickerNode = $relatedElement.find('.picker')\n                var svgOrVml = (window.SVGAngle || document.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\", \"1.1\") ? \"SVG\" : \"VML\")\n                switch (svgOrVml) {\n                    case 'SVG':\n                        $slideNode.append(svgSlideTpl)\n                        $pickerNode.append(svgPickerTpl)\n                        break\n                    default:\n                        if (!document.namespaces.v) {\n                            document.namespaces.add('v', 'urn:schemas-microsoft-com:vml', '#default#VML')\n                        }\n                        $slideNode.html(vmlSlideTpl)\n                        $pickerNode.html(vmlPickerTpl)\n                }\n\n                this.setHex(this.color)\n\n                var $manager = this.$manager = new EventManager('bx-')\n                $manager.delegate(this.$element, this)\n                $manager.delegate(this.$relatedElement, this)\n\n                var type = 'click.colorpicker_' + this.clientId\n                $(document.body).off(type)\n                    .on(type, function(event) {\n                        if (that.element === event.target) return\n                        if ($relatedElement.has(event.target).length) return\n                        that.hide()\n                    })\n\n                // this.on('change selected', function(event, data) {\n                //     console.log(event.type, data)\n                // })\n            },\n            show: function() {\n                this.$relatedElement.show()\n            },\n            hide: function() {\n                this.$relatedElement.hide()\n            },\n            toggle: function() {\n                var $element = this.$element\n                var offset = $element.offset()\n                this.$relatedElement.toggle().offset({\n                    left: offset.left,\n                    top: offset.top + $element.outerHeight() + 1\n                })\n            },\n            /**\n             * Sets color of the picker in hsv/rgb/hex format.\n             * @param {Object} hsv Object of the form: { h: <hue>, s: <saturation>, v: <value> }.\n             * @param {Object} rgb Object of the form: { r: <red>, g: <green>, b: <blue> }.\n             * @param {String} hex String of the form: #RRGGBB.\n             */\n            setColor: function(hsv /*, rgb, hex*/ ) {\n                var $relatedElement = this.$relatedElement\n                this.h = hsv.h % 360\n                this.s = hsv.s\n                this.v = hsv.v\n                var c = hsv2rgb(this.h, this.s, this.v)\n\n                this.slideDragNode.css({\n                    top: Math.round(this.h * this.$slideNode.height() / 360 - 5)\n                })\n                var left = Math.round(this.s * this.$pickerNode.width() - 5)\n                var top = Math.round((1 - this.v) * this.$pickerNode.height() - 5)\n                this.pickerDragNode.css({\n                    left: left,\n                    top: top,\n                    color: top > 98 ? '#fff' : '#000'\n                })\n                this.$pickerNode.css({\n                    \"background-color\": hsv2rgb(this.h, 1, 1).hex\n                })\n                $relatedElement.find('.colorpicker-footer span').css({\n                    \"background-color\": c.hex\n                })\n                this.color = c.hex\n                $relatedElement.find('li').removeClass('selected')\n\n                var input = $relatedElement.find('input')\n                if (input.val() !== c.hex) input.val(c.hex)\n            },\n            /**\n             * 设置颜色\n             * @param {Object} hsv hsv对象 { h: <hue>, s: <saturation>, v: <value> }\n             */\n            setHsv: function(hsv) {\n                this.setColor(hsv)\n            },\n            /**\n             * 设置颜色\n             * @param {Object} rgb rgb对象 { r: <red>, g: <green>, b: <blue> }\n             */\n            setRgb: function(rgb) {\n                this.setColor(rgb2hsv(rgb.r, rgb.g, rgb.b), rgb)\n            },\n            /**\n             * 设置颜色\n             * @param {String} hex 颜色值 #RRGGBB.\n             */\n            setHex: function(hex) {\n                this.setColor(rgb2hsv(parseInt(hex.substr(1, 2), 16), parseInt(hex.substr(3, 2), 16), parseInt(hex.substr(5, 2), 16)), undefined, hex)\n            },\n            /* Events */\n            pickQuickColor: function(event, extraParameters) {\n                this.setHex(extraParameters)\n                $(event.target).addClass('selected')\n            },\n            toggleBody: function( /*event*/ ) {\n                this.$relatedElement.find('.colorpicker-middle').toggleClass('open')\n                this.$relatedElement.find('.colorpicker-body').slideToggle()\n            },\n            pickPaletteColor: function(event) {\n                var offset = this.$pickerNode.offset()\n                var left = event.pageX - offset.left\n                var top = event.pageY - offset.top\n                var width = this.$pickerNode.width()\n                var height = this.$pickerNode.height()\n                this.setHsv({\n                    h: this.h,\n                    s: left / width,\n                    v: (height - top) / height\n                })\n            },\n            dragPickerIndicator: function(event) {\n                var that = this\n                $(document.documentElement).css('cursor', 'pointer')\n                event.preventDefault()\n                $(document.body).on('mousemove.pickerDragNode', function(event) {\n                    event.pageX -= 5\n                    event.pageY -= 5\n                    var offset = that.$pickerNode.offset(),\n                        width = that.$pickerNode.width(),\n                        height = that.$pickerNode.height(),\n                        left = event.pageX - offset.left,\n                        top = event.pageY - offset.top\n\n                    if (left + 5 > width) left = width\n                    else if (left < 0) left = 0\n                    else left += 5\n\n                    if (top + 5 > height) top = height\n                    else if (top < 0) top = 0\n                    else top += 5\n\n                    that.setHsv({\n                        h: that.h,\n                        s: left / width,\n                        v: (height - top) / height\n                    })\n                }).on('mouseup', function() {\n                    $(document.documentElement).css('cursor', 'auto')\n                    $(document.body).off('mousemove.pickerDragNode')\n                })\n            },\n            pickSlideColor: function(event) {\n                var offset = this.$slideNode.offset(),\n                    height = this.$slideNode.height(),\n                    top = ((event.pageY - offset.top >= height) ? height - 1 : event.pageY - offset.top),\n                    h = top / height * 360\n                this.setHsv({\n                    h: h,\n                    s: this.s,\n                    v: this.v\n                })\n            },\n            dragSlideIndicator: function(event) {\n                var that = this\n                $(document.documentElement).css('cursor', 'pointer')\n                event.preventDefault()\n                $(document.body).on('mousemove.slideDragNode', function(event) {\n                    event.pageX -= 5\n                    event.pageY -= 5\n                    var offset = that.$slideNode.offset()\n                    var height = that.$slideNode.height(),\n                        top = event.pageY - offset.top\n\n                    if (top + 5 > height) top = height - 1\n                    else if (top < 0) top = 0\n                    else top += 5\n\n                    that.setHsv({\n                        h: top / that.$slideNode.height() * 360,\n                        s: that.s,\n                        v: that.v\n                    })\n                }).on('mouseup', function() {\n                    $(document.documentElement).css('cursor', 'auto')\n                    $(document.body).off('mousemove.slideDragNode')\n                })\n            },\n            inputColor: function(event) {\n                var val = $(event.target).val()\n                if (val.length === 7 && this.color !== val) this.setHex(val)\n            },\n            finishInputColor: function(event) {\n                var val = $(event.target).val()\n                if (this.color != val) this.setHex(val)\n            },\n            submit: function() {\n                var c = hsv2rgb(this.h, this.s, this.v)\n                var extra = {\n                    hex: c.hex,\n                    hsv: {\n                        h: this.h,\n                        s: this.s,\n                        v: this.v\n                    },\n                    rgb: {\n                        r: c.r,\n                        g: c.g,\n                        b: c.b\n                    }\n                }\n                this.trigger('change.colorpicker', extra)\n                this.$element.triggerHandler('change')\n                this.hide()\n            },\n            destroy: function() {\n                this.$manager.undelegate(this.$element, this)\n                this.$manager.undelegate(this.$relatedElement, this)\n\n                this.$relatedElement.remove()\n\n                var type = 'click.colorpicker_' + this.clientId\n                $(document.body).off(type)\n            }\n        })\n\n        return ColorPicker\n\n        function hsv2rgb(h, s, v) {\n            var R, G, B, X, C\n            h = (h % 360) / 60\n            C = v * s\n            X = C * (1 - Math.abs(h % 2 - 1))\n            R = G = B = v - C\n\n            h = ~~h\n            R += [C, X, 0, 0, X, C][h]\n            G += [X, C, C, X, 0, 0][h]\n            B += [0, 0, X, C, C, X][h]\n\n            var r = R * 255,\n                g = G * 255,\n                b = B * 255\n            return {\n                r: r,\n                g: g,\n                b: b,\n                hex: \"#\" + (16777216 | b | (g << 8) | (r << 16)).toString(16).slice(1)\n            }\n\n        }\n\n        /**\n         * Convert RGB representation to HSV.\n         * r, g, b can be either in <0,1> range or <0,255> range.\n         * Credits to http://www.raphaeljs.com\n         */\n        function rgb2hsv(r, g, b) {\n            if (r > 1 || g > 1 || b > 1) {\n                r /= 255\n                g /= 255\n                b /= 255\n            }\n            var H, S, V, C\n            V = Math.max(r, g, b)\n            C = V - Math.min(r, g, b)\n            H = (C === 0 ? null : V == r ? (g - b) / C + (g < b ? 6 : 0) : V == g ? (b - r) / C + 2 : (r - g) / C + 4)\n            H = (H % 6) * 60\n            S = C === 0 ? 0 : C / V\n            return {\n                h: H,\n                s: S,\n                v: V\n            }\n        }\n\n    }\n)\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/colorpicker/colorpicker.js\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"jquery\"\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"underscore\"\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"components/base\"\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"brix/event\"\n ** module id = 5\n ** module chunks = 0\n **/","/* global define */\ndefine(function() {\n    return \"<div class=\\\"colorpicker\\\">\\n\" +\n        \"    <div class=\\\"colorpicker-header clearfix\\\">\\n\" +\n        \"        <ul class=\\\"clearfix\\\">\\n\" +\n        \"            <% for(var i = 0; i < colors.length; i++) { %>\\n\" +\n        \"            <li value=\\\"<%=colors[i]%>\\\" style=\\\"background-color:<%=colors[i]%>;\\\" bx-click=\\\"pickQuickColor(<%=colors[i]%>)\\\"></li>\\n\" +\n        \"            <% } %>\\n\" +\n        \"        </ul>\\n\" +\n        \"    </div>\\n\" +\n        \"    <div class=\\\"colorpicker-middle open clearfix\\\">\\n\" +\n        \"        <i bx-click=\\\"toggleBody\\\" class=\\\"uxicon arrow arrow-up\\\">&#404</i>\\n\" +\n        \"        <i bx-click=\\\"toggleBody\\\" class=\\\"uxicon arrow arrow-down\\\">&#405</i>\\n\" +\n        \"    </div>\\n\" +\n        \"    <div class=\\\"colorpicker-body clearfix\\\">\\n\" +\n        \"        <div class=\\\"picker-wrapper\\\">\\n\" +\n        \"            <div class=\\\"picker\\\" bx-click=\\\"pickPaletteColor()\\\"></div>\\n\" +\n        \"            <i class=\\\"uxicon picker-indicator\\\" bx-mousedown=\\\"dragPickerIndicator()\\\">&#470</i>\\n\" +\n        \"        </div>\\n\" +\n        \"        <div class=\\\"slide-wrapper\\\">\\n\" +\n        \"            <div class=\\\"slide\\\" bx-click=\\\"pickSlideColor()\\\"></div>\\n\" +\n        \"            <i class=\\\"uxicon slide-indicator\\\" bx-mousedown=\\\"dragSlideIndicator\\\">&#461</i>\\n\" +\n        \"        </div>\\n\" +\n        \"    </div>\\n\" +\n        \"    <div class=\\\"colorpicker-footer clearfix\\\">\\n\" +\n        \"        <span class=\\\"bg\\\" style=\\\"background-color: <%=color%>\\\"></span>\\n\" +\n        \"        <input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"<%=color%>\\\" bx-keyup=\\\"inputColor\\\" bx-blur=\\\"finishInputColor\\\">\\n\" +\n        \"        <a class=\\\"btn btn-default\\\" bx-click=\\\"submit\\\">确定</a>\\n\" +\n        \"    </div>\\n\" +\n        \"</div>\"\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/colorpicker/colorpicker.tpl.js\n ** module id = 6\n ** module chunks = 0\n **/"],"sourceRoot":""}